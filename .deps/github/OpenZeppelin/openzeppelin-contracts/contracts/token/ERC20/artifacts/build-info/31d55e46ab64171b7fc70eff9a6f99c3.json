{
	"id": "31d55e46ab64171b7fc70eff9a6f99c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1909:1914  _name */\n  0x03\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  tag_6\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1917:1922  name_ */\n  dup4\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1909:1914  _name */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  0x04\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_8\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1942:1949  symbol_ */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3169:3181  _totalSupply */\n      sload(0x02)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3013:3015  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3320:3327  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3893:3900  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3919:3930  _allowances */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3919:3946  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2066:2079  string memory */\n      0x60\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2098:2103  _name */\n      0x03\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2091:2103  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4174:4178  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4213:4220  spender */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4222:4228  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4190:4198  _approve */\n      tag_74\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4246:4250  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4830:4834  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4856:4862  sender */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4864:4873  recipient */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4875:4881  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4846:4855  _transfer */\n      tag_78\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      dup5\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4893:4917  uint256 currentAllowance */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4920:4931  _allowances */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4920:4953  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4971:4997  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x28\n        /* \"#utility.yul\":2962:2980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3139   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5061:5067  sender */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_85\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5102:5108  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5083:5099  currentAllowance */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5052:5060  _approve */\n      tag_74\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5127:5131  true */\n      0x01\n      swap5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5680  _allowances */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5703  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      swap1\n      swap2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5637:5717  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5660:5667  spender */\n      dup6\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_85\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5706:5716  addedValue */\n      dup7\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_93\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2270:2283  string memory */\n      0x60\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2302:2309  _symbol */\n      0x04\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2295:2309  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6325:6329  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6368:6379  _allowances */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6368:6402  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6420:6455  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3747:3749   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3729:3750   */\n      mstore\n        /* \"#utility.yul\":3786:3788   */\n      0x25\n        /* \"#utility.yul\":3766:3784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3759:3789   */\n      mstore\n        /* \"#utility.yul\":3825:3859   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3805:3823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3798:3860   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3876:3894   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3869:3904   */\n      mstore\n        /* \"#utility.yul\":3921:3940   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3545:3946   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_103:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_106\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6530:6537  spender */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_85\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6558:6573  subtractedValue */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:6555  currentAllowance */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_86\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_106:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6592:6596  true */\n      0x01\n      swap4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3660:3664  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3700:3709  recipient */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3711:3717  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3676:3685  _transfer */\n      tag_78\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9597:9616  owner != address(0) */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4135:4156   */\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x24\n        /* \"#utility.yul\":4172:4190   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4165:4195   */\n      mstore\n        /* \"#utility.yul\":4231:4265   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4211:4229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4204:4266   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4282:4300   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4275:4309   */\n      mstore\n        /* \"#utility.yul\":4326:4345   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3951:4351   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9675:9696  spender != address(0) */\n      dup3\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4540:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x22\n        /* \"#utility.yul\":4577:4595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4570:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4670   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4616:4634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4609:4671   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4687:4705   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4680:4712   */\n      mstore\n        /* \"#utility.yul\":4729:4748   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4356:4754   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9746:9757  _allowances */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9746:9773  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9746:9782  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7182:7202  sender != address(0) */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4943:4964   */\n      mstore\n        /* \"#utility.yul\":5000:5002   */\n      0x25\n        /* \"#utility.yul\":4980:4998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4973:5003   */\n      mstore\n        /* \"#utility.yul\":5039:5073   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5019:5037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5012:5074   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5090:5108   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5083:5118   */\n      mstore\n        /* \"#utility.yul\":5135:5154   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4759:5160   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7262:7285  recipient != address(0) */\n      dup3\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5349:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5408   */\n      0x23\n        /* \"#utility.yul\":5386:5404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5379:5409   */\n      mstore\n        /* \"#utility.yul\":5445:5479   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5425:5443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5418:5480   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5496:5514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5489:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5165:5564   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7394:7415  uint256 senderBalance */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7453:7476  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x26\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5929   */\n      mstore\n        /* \"#utility.yul\":5946:5965   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5569:5971   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_134\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7565:7571  amount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7549:7562  senderBalance */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_86\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7529:7571  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7581:7601  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_135\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_93\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7653  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7655:7661  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7164:7669  {... */\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_138:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_146:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_148:\n        /* \"#utility.yul\":913:942   */\n      tag_149\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_138\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_153:\n        /* \"#utility.yul\":1563:1592   */\n      tag_154\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_155\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_158:\n        /* \"#utility.yul\":2051:2080   */\n      tag_159\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_161:\n        /* \"#utility.yul\":2259:2288   */\n      tag_162\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_163\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_138\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_165:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3277   */\n    tag_139:\n        /* \"#utility.yul\":3211:3221   */\n      0x4e487b71\n        /* \"#utility.yul\":3206:3209   */\n      0xe0\n        /* \"#utility.yul\":3202:3222   */\n      shl\n        /* \"#utility.yul\":3199:3200   */\n      0x00\n        /* \"#utility.yul\":3192:3223   */\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x11\n        /* \"#utility.yul\":3239:3240   */\n      0x04\n        /* \"#utility.yul\":3232:3247   */\n      mstore\n        /* \"#utility.yul\":3266:3270   */\n      0x24\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3256:3271   */\n      revert\n        /* \"#utility.yul\":3282:3410   */\n    tag_86:\n        /* \"#utility.yul\":3349:3358   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3370:3381   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3367:3404   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3384:3402   */\n      tag_70\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":3415:3540   */\n    tag_93:\n        /* \"#utility.yul\":3480:3489   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3501:3511   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3498:3534   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3514:3532   */\n      tag_70\n      tag_139\n      jump\t// in\n\n    auxdata: 0xa264697066735822122068ca2ed781562aec9ae17fe1145782e52ec110aa2a44a94e387a7b8b8643dc5364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:3"
															},
															"nodeType": "YulIf",
															"src": "220:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:3"
															},
															"nodeType": "YulIf",
															"src": "353:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:3"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:3"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:3"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:3"
															},
															"nodeType": "YulIf",
															"src": "536:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:3"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:3"
															},
															"nodeType": "YulIf",
															"src": "698:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:3"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:3"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:3",
																"statements": []
															},
															"src": "779:133:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:3"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:3",
														"type": ""
													}
												],
												"src": "146:840:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:3"
															},
															"nodeType": "YulIf",
															"src": "1119:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:3"
															},
															"nodeType": "YulIf",
															"src": "1256:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:3"
															},
															"nodeType": "YulIf",
															"src": "1429:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:3",
														"type": ""
													}
												],
												"src": "991:562:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:3"
															},
															"nodeType": "YulIf",
															"src": "1701:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:3"
															},
															"nodeType": "YulIf",
															"src": "1771:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:3",
														"type": ""
													}
												],
												"src": "1558:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:3",
														"type": ""
													}
												],
												"src": "1943:121:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:3"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:3"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:3",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:3"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:3"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:3",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:3"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:3"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:3"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:3"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:3"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:3"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:3"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:3"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:3",
																			"statements": []
																		},
																		"src": "2516:82:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:3"
															},
															"nodeType": "YulIf",
															"src": "2160:448:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:3",
														"type": ""
													}
												],
												"src": "2069:545:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:3",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:3"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:3",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:3"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:3",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:3",
														"type": ""
													}
												],
												"src": "2619:166:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:3",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:3"
															},
															"nodeType": "YulIf",
															"src": "2929:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:3"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:3",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:3"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:3",
																					"statements": []
																				},
																				"src": "3376:236:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:3",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:3"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:3"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:3"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:3",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:3"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:3"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:3",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:3"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:3"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:3"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:3"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:3"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:3",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:3"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:3",
														"type": ""
													}
												],
												"src": "2790:1352:3"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000bd438038062000bd483398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108e080620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070f565b60405180910390f35b6100df6100da366004610779565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a3565b61026f565b604051601281526020016100c3565b6100df610131366004610779565b610325565b6100f36101443660046107df565b6001600160a01b031660009081526020819052604090205490565b6100b661035c565b6100df610175366004610779565b61036b565b6100df610188366004610779565b610406565b6100f361019b366004610801565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610834565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610834565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610413565b5060015b92915050565b600061027c848484610537565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031a85336103158685610884565b610413565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610315908690610897565b6060600480546101d590610834565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103fc33856103158685610884565b5060019392505050565b6000610265338484610537565b6001600160a01b0383166104755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b61067f8282610884565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b5908490610897565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070191815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073c57858101830151858201604001528201610720565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077457600080fd5b919050565b6000806040838503121561078c57600080fd5b6107958361075d565b946020939093013593505050565b6000806000606084860312156107b857600080fd5b6107c18461075d565b92506107cf6020850161075d565b9150604084013590509250925092565b6000602082840312156107f157600080fd5b6107fa8261075d565b9392505050565b6000806040838503121561081457600080fd5b61081d8361075d565b915061082b6020840161075d565b90509250929050565b600181811c9082168061084857607f821691505b60208210810361086857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102695761026961086e565b808201808211156102695761026961086e56fea264697066735822122068ca2ed781562aec9ae17fe1145782e52ec110aa2a44a94e387a7b8b8643dc5364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBD4 CODESIZE SUB DUP1 PUSH3 0xBD4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8E0 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A DUP6 CALLER PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x315 SWAP1 DUP7 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3FC CALLER DUP6 PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x720 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x795 DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C1 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP PUSH2 0x7CF PUSH1 0x20 DUP6 ADD PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA DUP3 PUSH2 0x75D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81D DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x82B PUSH1 0x20 DUP5 ADD PUSH2 0x75D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x848 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x868 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCA2ED781562AEC9AE1 PUSH32 0xE1145782E52EC110AA2A44A94E387A7B8B8643DC5364736F6C63430008130033 ",
							"sourceMap": "1279:9238:0:-:0;;;1842:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:5;:13;1917:5;1909;:13;:::i;:::-;-1:-1:-1;1932:7:0;:17;1942:7;1932;:17;:::i;:::-;;1842:114;;1279:9238;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:3:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:3;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:3;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:3;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:3;;;3992:26;3943:89;-1:-1:-1;;2747:1:3;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:3;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:3;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:3;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:3:o;:::-;1279:9238:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_488": {
									"entryPoint": 1043,
									"id": 488,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_589": {
									"entryPoint": null,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_334": {
									"entryPoint": 1335,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_152": {
									"entryPoint": 600,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_264": {
									"entryPoint": 875,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_226": {
									"entryPoint": 805,
									"id": 226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_50": {
									"entryPoint": 454,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_59": {
									"entryPoint": 860,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 623,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_113": {
									"entryPoint": 1030,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5973:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:3",
																"statements": []
															},
															"src": "294:140:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:3"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:3",
														"type": ""
													}
												],
												"src": "14:548:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:3"
															},
															"nodeType": "YulIf",
															"src": "664:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:3",
														"type": ""
													}
												],
												"src": "567:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:3"
															},
															"nodeType": "YulIf",
															"src": "842:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:3",
														"type": ""
													}
												],
												"src": "745:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:3",
														"type": ""
													}
												],
												"src": "1004:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:3",
														"type": ""
													}
												],
												"src": "1196:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:3"
															},
															"nodeType": "YulIf",
															"src": "1492:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:3",
														"type": ""
													}
												],
												"src": "1378:328:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:3",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:3",
														"type": ""
													}
												],
												"src": "1711:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:3"
															},
															"nodeType": "YulIf",
															"src": "1980:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:3",
														"type": ""
													}
												],
												"src": "1900:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:3"
															},
															"nodeType": "YulIf",
															"src": "2188:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:3",
														"type": ""
													}
												],
												"src": "2091:260:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:3"
															},
															"nodeType": "YulIf",
															"src": "2499:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:3"
															},
															"nodeType": "YulIf",
															"src": "2569:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:3",
														"type": ""
													}
												],
												"src": "2356:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:230:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:3"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:3",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:3"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3092:10:3",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:38:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:38:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3112:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2892:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:3",
														"type": ""
													}
												],
												"src": "2741:404:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3206:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3211:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3192:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3242:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3150:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3331:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3341:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3356:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3341:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3382:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3384:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3384:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3384:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3373:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3370:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:11:3"
															},
															"nodeType": "YulIf",
															"src": "3367:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3313:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3316:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3322:4:3",
														"type": ""
													}
												],
												"src": "3282:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3463:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3473:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3484:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3487:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3473:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3512:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3514:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3514:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3514:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3504:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3501:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:10:3"
															},
															"nodeType": "YulIf",
															"src": "3498:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3446:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3449:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3455:3:3",
														"type": ""
													}
												],
												"src": "3415:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3719:227:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3729:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3781:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3766:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3809:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3820:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3805:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3805:18:3"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3825:34:3",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3891:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3876:18:3"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3896:7:3",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3869:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3869:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3913:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3913:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3696:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3710:4:3",
														"type": ""
													}
												],
												"src": "3545:401:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:226:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4135:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4165:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:3"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4231:34:3",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4204:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:18:3"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4302:6:3",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4275:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4275:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4318:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4102:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4116:4:3",
														"type": ""
													}
												],
												"src": "3951:400:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:224:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4540:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4570:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:3"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4636:34:3",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4609:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:3"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:3",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4680:32:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4721:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4507:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4521:4:3",
														"type": ""
													}
												],
												"src": "4356:398:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:227:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4943:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4995:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4980:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5019:18:3"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5039:34:3",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5012:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5105:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5090:18:3"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5110:7:3",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5083:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5127:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4910:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4924:4:3",
														"type": ""
													}
												],
												"src": "4759:401:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:225:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:3"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5445:34:3",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:3"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5516:5:3",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5489:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5316:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5330:4:3",
														"type": ""
													}
												],
												"src": "5165:399:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:3"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:3",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:3"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5920:8:3",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5893:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5961:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5720:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5734:4:3",
														"type": ""
													}
												],
												"src": "5569:402:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070f565b60405180910390f35b6100df6100da366004610779565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a3565b61026f565b604051601281526020016100c3565b6100df610131366004610779565b610325565b6100f36101443660046107df565b6001600160a01b031660009081526020819052604090205490565b6100b661035c565b6100df610175366004610779565b61036b565b6100df610188366004610779565b610406565b6100f361019b366004610801565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610834565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610834565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610413565b5060015b92915050565b600061027c848484610537565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031a85336103158685610884565b610413565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610315908690610897565b6060600480546101d590610834565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103fc33856103158685610884565b5060019392505050565b6000610265338484610537565b6001600160a01b0383166104755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b61067f8282610884565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b5908490610897565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070191815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073c57858101830151858201604001528201610720565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077457600080fd5b919050565b6000806040838503121561078c57600080fd5b6107958361075d565b946020939093013593505050565b6000806000606084860312156107b857600080fd5b6107c18461075d565b92506107cf6020850161075d565b9150604084013590509250925092565b6000602082840312156107f157600080fd5b6107fa8261075d565b9392505050565b6000806040838503121561081457600080fd5b61081d8361075d565b915061082b6020840161075d565b90509250929050565b600181811c9082168061084857607f821691505b60208210810361086857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102695761026961086e565b808201808211156102695761026961086e56fea264697066735822122068ca2ed781562aec9ae17fe1145782e52ec110aa2a44a94e387a7b8b8643dc5364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A DUP6 CALLER PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x315 SWAP1 DUP7 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3FC CALLER DUP6 PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x720 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x795 DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C1 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP PUSH2 0x7CF PUSH1 0x20 DUP6 ADD PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA DUP3 PUSH2 0x75D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81D DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x82B PUSH1 0x20 DUP5 ADD PUSH2 0x75D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x848 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x868 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCA2ED781562AEC9AE1 PUSH32 0xE1145782E52EC110AA2A44A94E387A7B8B8643DC5364736F6C63430008130033 ",
							"sourceMap": "1279:9238:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:3;;1162:22;1144:41;;1132:2;1117:18;4091:166:0;1004:187:3;3082:106:0;3169:12;;3082:106;;;1342:25:3;;;1330:2;1315:18;3082:106:0;1196:177:3;4724:414:0;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;1853:36:3;;1841:2;1826:18;2940:82:0;1711:184:3;5533:212:0;;;;;;:::i;:::-;;:::i;3246:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3346:18:0;3320:7;3346:18;;;;;;;;;;;;3246:125;2223:93;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:0;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:2;4213:7:0;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:0;4091:166;;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:0;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:2;4920:33:0;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:0;;2943:2:3;4963:79:0;;;2925:21:3;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:3;;;3065:38;3120:19;;4963:79:0;;;;;;;;;5052:57;5061:6;665:10:2;5083:25:0;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:0;;4724:414;-1:-1:-1;;;;4724:414:0:o;5533:212::-;665:10:2;5621:4:0;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:0;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:2;6325:4:0;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:0;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:0;;3747:2:3;6412:85:0;;;3729:21:3;3786:2;3766:18;;;3759:30;3825:34;3805:18;;;3798:62;-1:-1:-1;;;3876:18:3;;;3869:35;3921:19;;6412:85:0;3545:401:3;6412:85:0;6507:67;665:10:2;6530:7:0;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:0;;6232:371;-1:-1:-1;;;6232:371:0:o;3574:172::-;3660:4;3676:42;665:10:2;3700:9:0;3711:6;3676:9;:42::i;9496:340::-;-1:-1:-1;;;;;9597:19:0;;9589:68;;;;-1:-1:-1;;;9589:68:0;;4153:2:3;9589:68:0;;;4135:21:3;4192:2;4172:18;;;4165:30;4231:34;4211:18;;;4204:62;-1:-1:-1;;;4282:18:3;;;4275:34;4326:19;;9589:68:0;3951:400:3;9589:68:0;-1:-1:-1;;;;;9675:21:0;;9667:68;;;;-1:-1:-1;;;9667:68:0;;4558:2:3;9667:68:0;;;4540:21:3;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:3;;;4680:32;4729:19;;9667:68:0;4356:398:3;9667:68:0;-1:-1:-1;;;;;9746:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;1342:25:3;;;9797:32:0;;1315:18:3;9797:32:0;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:0;;7174:70;;;;-1:-1:-1;;;7174:70:0;;4961:2:3;7174:70:0;;;4943:21:3;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:3;;;5083:35;5135:19;;7174:70:0;4759:401:3;7174:70:0;-1:-1:-1;;;;;7262:23:0;;7254:71;;;;-1:-1:-1;;;7254:71:0;;5367:2:3;7254:71:0;;;5349:21:3;5406:2;5386:18;;;5379:30;5445:34;5425:18;;;5418:62;-1:-1:-1;;;5496:18:3;;;5489:33;5539:19;;7254:71:0;5165:399:3;7254:71:0;-1:-1:-1;;;;;7418:17:0;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:0;;5771:2:3;7445:74:0;;;5753:21:3;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:3;;;5893:36;5946:19;;7445:74:0;5569:402:3;7445:74:0;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:0;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:0;7636:6;-1:-1:-1;;;;;7627:35:0;;7655:6;7627:35;;;;1342:25:3;;1330:2;1315:18;;1196:177;7627:35:0;;;;;;;;7164:505;7077:592;;;:::o;14:548:3:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:3;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:3:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:3:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:127::-;3211:10;3206:3;3202:20;3199:1;3192:31;3242:4;3239:1;3232:15;3266:4;3263:1;3256:15;3282:128;3349:9;;;3370:11;;;3367:37;;;3384:18;;:::i;3415:125::-;3480:9;;;3501:10;;;3498:36;;;3514:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "454400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24620",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27020",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1842,
									"end": 1956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1917,
									"end": 1922,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1909,
									"end": 1922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1942,
									"end": 1949,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1932,
									"end": 1949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 3,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068ca2ed781562aec9ae17fe1145782e52ec110aa2a44a94e387a7b8b8643dc5364736f6c63430008130033",
									".code": [
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5533,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3246,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2223,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3574,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3804,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2091,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4190,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4846,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3103,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5083,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5052,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 5138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5669,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2295,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3825,
											"end": 3859,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3545,
											"end": 3946,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6539,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6232,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3676,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3951,
											"end": 4351,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4540,
											"end": 4561,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4609,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4356,
											"end": 4754,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4973,
											"end": 5003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5073,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5083,
											"end": 5118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4759,
											"end": 5160,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5479,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5165,
											"end": 5564,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 3,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5893,
											"end": 5929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5569,
											"end": 5971,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7549,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7581,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3384,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3514,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 18,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 20,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							601
						],
						"ERC20": [
							500
						],
						"IERC20": [
							578
						]
					},
					"id": 501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 579,
							"src": "58:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 602,
							"src": "81:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"1297:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 601,
										"src": "1297:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"1306:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "1306:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1306:6:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "116:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 500,
							"linearizedBaseContracts": [
								500,
								578,
								601
							],
							"name": "ERC20",
							"nameLocation": "1288:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1356:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1319:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1328:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1319:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1339:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1430:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1372:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 17,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1381:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 16,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1401:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1392:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1464:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1448:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1498:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1483:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1483:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1524:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1509:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 23,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1509:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1899:57:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1909:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 33,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1917:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1909:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1909:13:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1932:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1932:17:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1538:299:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1855:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 26,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1890:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1876:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:44:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:0:0"
									},
									"scope": 500,
									"src": "1842:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2081:29:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "2098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "2091:12:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1962:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2030:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2066:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:15:0"
									},
									"scope": 500,
									"src": "2021:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2285:31:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "2302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2295:14:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2116:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2232:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2270:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:15:0"
									},
									"scope": 500,
									"src": "2223:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2996:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3013:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "3006:9:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2322:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2949:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2957:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2989:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 62,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2989:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:7:0"
									},
									"scope": 500,
									"src": "2940:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3152:36:0",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "3169:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "3162:19:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3028:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3091:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 71,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3125:8:0"
									},
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3102:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3143:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:9:0"
									},
									"scope": 500,
									"src": "3082:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										517
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3329:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 87,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "3346:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 89,
													"indexExpression": {
														"id": 88,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3346:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 90,
												"nodeType": "Return",
												"src": "3339:25:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3194:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3255:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3302:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:17:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:9:0"
									},
									"scope": 500,
									"src": "3246:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										527
									],
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3666:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 104,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "3686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3686:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 106,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "3700:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3711:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3676:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3676:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 102,
												"id": 111,
												"nodeType": "Return",
												"src": "3728:11:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3377:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3583:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 99,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3642:8:0"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3600:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3591:35:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3659:6:0"
									},
									"scope": 500,
									"src": "3574:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										537
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3902:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 124,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "3919:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 126,
														"indexExpression": {
															"id": 125,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3919:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3919:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 123,
												"id": 129,
												"nodeType": "Return",
												"src": "3912:34:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3752:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3813:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3875:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3831:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3823:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3846:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:32:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:0"
									},
									"scope": 500,
									"src": "3804:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										547
									],
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4180:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 143,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "4199:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4199:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4222:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 142,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "4190:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "4190:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 141,
												"id": 150,
												"nodeType": "Return",
												"src": "4239:11:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3959:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4100:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4156:8:0"
									},
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4133:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4125:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:33:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4174:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:6:0"
									},
									"scope": 500,
									"src": "4091:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "4836:302:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4856:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4864:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "4875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "4846:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4846:36:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4901:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "4893:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 173,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4920:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 175,
														"indexExpression": {
															"id": 174,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4932:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4920:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 178,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "4940:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4940:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4920:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4893:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "4971:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "4991:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4971:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4999:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "4963:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "5069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5069:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 191,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5083:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "5102:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5083:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "5052:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5052:57:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 164,
												"id": 197,
												"nodeType": "Return",
												"src": "5120:11:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4263:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4733:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4812:8:0"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4770:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4762:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:51:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:6:0"
									},
									"scope": 500,
									"src": "4724:414:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "5627:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 210,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "5646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5646:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 212,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 213,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "5669:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 216,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 214,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "5681:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5681:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5669:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 218,
																"indexExpression": {
																	"id": 217,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "5695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5669:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 219,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "5706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5669:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 209,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "5637:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "5637:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 224,
												"nodeType": "Return",
												"src": "5727:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5144:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5542:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5585:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5577:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5620:6:0"
									},
									"scope": 500,
									"src": "5533:212:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6331:272:0",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6349:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6341:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 238,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6368:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 241,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 239,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6380:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6368:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 243,
													"indexExpression": {
														"id": 242,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "6394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6368:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6341:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6420:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 247,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6440:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6420:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6457:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "6412:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6516:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6516:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 256,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6539:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 257,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6558:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "6507:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6507:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6507:67:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 235,
												"id": 262,
												"nodeType": "Return",
												"src": "6585:11:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5751:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6241:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6284:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6276:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6258:42:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:6:0"
									},
									"scope": 500,
									"src": "6232:371:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "7164:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7182:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7200:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7192:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7192:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7182:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7204:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7174:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "7174:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7262:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7275:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7275:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7275:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7262:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7287:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7254:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "7254:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "7336:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "7336:47:0"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7402:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "7394:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"baseExpression": {
														"id": 302,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "7418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 304,
													"indexExpression": {
														"id": 303,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "7428:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7394:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "7453:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 308,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7470:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7453:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7445:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "7445:74:0"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 313,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "7529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 315,
														"indexExpression": {
															"id": 314,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7539:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7529:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 316,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7549:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 317,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7549:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7529:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "7529:42:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 321,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "7581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 323,
														"indexExpression": {
															"id": 322,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7581:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 324,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "7605:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7581:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "7581:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 328,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7644:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7655:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "7627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7627:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "7622:40:0"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "6609:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7086:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7120:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7112:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7139:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:51:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7164:0:0"
									},
									"scope": 500,
									"src": "7077:592:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "8005:265:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "8023:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8042:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8034:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8034:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8023:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8046:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "8015:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8120:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8112:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8112:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8112:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8133:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8091:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "8091:49:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 361,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "8151:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 362,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "8167:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8151:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "8151:22:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "8183:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 367,
														"indexExpression": {
															"id": 366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8183:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 368,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "8205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8183:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "8183:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8243:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8235:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8235:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8256:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "8226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8226:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "8221:42:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "7675:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7949:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7980:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7972:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7954:33:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8005:0:0"
									},
									"scope": 500,
									"src": "7940:330:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "8655:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "8673:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8684:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8684:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8673:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8696:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8665:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "8665:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8773:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8773:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8743:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8743:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8743:49:0"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8811:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 442,
														"src": "8803:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"baseExpression": {
														"id": 410,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "8828:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 412,
													"indexExpression": {
														"id": 411,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "8838:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8828:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8803:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "8864:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8864:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8890:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8856:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "8856:71:0"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 421,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 423,
														"indexExpression": {
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8958:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8958:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "8937:44:0"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "8991:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 430,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "9007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8991:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "8991:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 434,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9047:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "9059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "9029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "EmitStatement",
												"src": "9024:42:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "8276:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8599:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "8605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "8622:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8604:33:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8655:0:0"
									},
									"scope": 500,
									"src": "8590:483:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "9579:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9597:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9614:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9606:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9606:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9597:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9618:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9589:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "9589:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "9675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9694:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9686:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 465,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9686:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9686:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9675:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9698:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9667:68:0"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 473,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "9746:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 476,
															"indexExpression": {
																"id": 474,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9746:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 475,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9746:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "9776:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9746:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "9746:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "9806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9822:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "9797:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "EmitStatement",
												"src": "9792:37:0"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "9079:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9505:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9513:48:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9579:0:0"
									},
									"scope": 500,
									"src": "9496:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "10512:3:0",
										"statements": []
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "9842:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10432:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10461:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10452:42:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:0"
									},
									"scope": 500,
									"src": "10423:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 501,
							"src": "1279:9238:0",
							"usedErrors": []
						}
					],
					"src": "33:10485:0"
				},
				"id": 0
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 578,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 578,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 578,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 578,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 578,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2156:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2175:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2209:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:1"
									},
									"scope": 578,
									"src": "2118:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 568,
									"name": "Transfer",
									"nameLocation": "2390:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2399:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2421:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2441:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:1"
									},
									"src": "2384:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 577,
									"name": "Approval",
									"nameLocation": "2621:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2630:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2653:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2678:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:1"
									},
									"src": "2615:78:1"
								}
							],
							"scope": 579,
							"src": "129:2566:1",
							"usedErrors": []
						}
					],
					"src": "33:2663:1"
				},
				"id": 1
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "Context",
							"nameLocation": "572:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "648:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 585,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 584,
												"id": 587,
												"nodeType": "Return",
												"src": "658:17:2"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "639:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:2"
									},
									"scope": 601,
									"src": "586:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "755:165:2",
										"statements": [
											{
												"expression": {
													"id": 594,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$601",
														"typeString": "contract Context"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "765:4:2"
											},
											{
												"expression": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "909:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 593,
												"id": 598,
												"nodeType": "Return",
												"src": "898:15:2"
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "739:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:2"
									},
									"scope": 601,
									"src": "688:232:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 602,
							"src": "554:368:2",
							"usedErrors": []
						}
					],
					"src": "33:890:2"
				},
				"id": 2
			}
		}
	}
}