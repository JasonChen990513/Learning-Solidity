{
	"id": "719157804fccd92ffeffd795eb9d0f6c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"TTT_ERC1155Token-Jason.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\n// import \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\n\r\n// import \"@openzeppelin/contracts/utils/Strings.sol\";\r\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n// import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract ERC165 is IERC165 {\r\n    /*\r\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\r\n\r\n    /**\r\n     * @dev Mapping of interface ids to whether or not it's supported.\r\n     */\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor () {\r\n        // Derived contracts need only register support for their own interfaces,\r\n        // we register support for ERC165 itself here\r\n        _registerInterface(_INTERFACE_ID_ERC165);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     *\r\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    /**\r\n     * @dev Registers the contract as an implementer of the interface defined by\r\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\r\n     * registering its interface id is not required.\r\n     *\r\n     * See {IERC165-supportsInterface}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\r\n     */\r\n    function _registerInterface(bytes4 interfaceId) internal virtual {\r\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\r\n        _supportedInterfaces[interfaceId] = true;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\r\n}\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        uint256 index = digits - 1;\r\n        temp = value;\r\n        while (temp != 0) {\r\n            buffer[index--] = bytes1(uint8(48 + temp % 10));\r\n            temp /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping (uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /*\r\n     *     bytes4(keccak256('balanceOf(address,uint256)')) == 0x00fdd58e\r\n     *     bytes4(keccak256('balanceOfBatch(address[],uint256[])')) == 0x4e1273f4\r\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\r\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\r\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,uint256,bytes)')) == 0xf242432a\r\n     *     bytes4(keccak256('safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)')) == 0x2eb2c2d6\r\n     *\r\n     *     => 0x00fdd58e ^ 0x4e1273f4 ^ 0xa22cb465 ^\r\n     *        0xe985e9c5 ^ 0xf242432a ^ 0x2eb2c2d6 == 0xd9b67a26\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\r\n\r\n    /*\r\n     *     bytes4(keccak256('uri(uint256)')) == 0x0e89341c\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor (string memory uri_) {\r\n        _setURI(uri_);\r\n\r\n        // register the supported interfaces to conform to ERC1155 via ERC165\r\n        _registerInterface(_INTERFACE_ID_ERC1155);\r\n\r\n        // register the supported interfaces to conform to ERC1155MetadataURI via ERC165\r\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) external view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(\r\n        address[] memory accounts,\r\n        uint256[] memory ids\r\n    )\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\r\n        _balances[id][to] = _balances[id][to].add(amount);\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            _balances[id][from] = _balances[id][from].sub(\r\n                amount,\r\n                \"ERC1155: insufficient balance for transfer\"\r\n            );\r\n            _balances[id][to] = _balances[id][to].add(amount);\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\r\n        require(account != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][account] = _balances[id][account].add(amount);\r\n        emit TransferSingle(operator, address(0), account, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        \r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]);\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `account`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        _balances[id][account] = _balances[id][account].sub(\r\n            amount,\r\n            \"ERC1155: burn amount exceeds balance\"\r\n        );\r\n\r\n        emit TransferSingle(operator, account, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\r\n\r\n        for (uint i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][account] = _balances[ids[i]][account].sub(\r\n                amounts[i],\r\n                \"ERC1155: burn amount exceeds balance\"\r\n            );\r\n        }\r\n\r\n        emit TransferBatch(operator, account, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        internal\r\n        virtual\r\n    { }\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    )\r\n        external\r\n        returns(bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    )\r\n        external\r\n        returns(bytes4);\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts may inherit from this and call {_registerInterface} to declare\r\n * their support of an interface.\r\n */\r\n\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"TTT_ERC1155Token-Jason.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":35239:43104  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":35239:43104  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122060fda9f4428d3f7cd244bfcf8cd17135b21ec4ba6454618ee1ef9d622faa1f1864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060fda9f4428d3f7cd244bfcf8cd17135b21ec4ba6454618ee1ef9d622faa1f1864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xFD 0xA9 DELEGATECALL TIMESTAMP DUP14 EXTCODEHASH PUSH29 0xD244BFCF8CD17135B21EC4BA6454618EE1EF9D622FAA1F1864736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "35239:7865:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;35239:7865:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060fda9f4428d3f7cd244bfcf8cd17135b21ec4ba6454618ee1ef9d622faa1f1864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xFD 0xA9 DELEGATECALL TIMESTAMP DUP14 EXTCODEHASH PUSH29 0xD244BFCF8CD17135B21EC4BA6454618EE1EF9D622FAA1F1864736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "35239:7865:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35239,
									"end": 43104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060fda9f4428d3f7cd244bfcf8cd17135b21ec4ba6454618ee1ef9d622faa1f1864736f6c63430008130033",
									".code": [
										{
											"begin": 35239,
											"end": 43104,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 43104,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":11144:25235  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"TTT_ERC1155Token-Jason.sol\":12632:12987  constructor (string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TTT_ERC1155Token-Jason.sol\":2474:2514  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_7\n  shl(0xe0, 0x01ffc9a7)\n    /* \"TTT_ERC1155Token-Jason.sol\":2474:2492  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":2474:2514  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_7:\n    /* \"TTT_ERC1155Token-Jason.sol\":12676:12689  _setURI(uri_) */\n  tag_10\n    /* \"TTT_ERC1155Token-Jason.sol\":12684:12688  uri_ */\n  dup2\n    /* \"TTT_ERC1155Token-Jason.sol\":12676:12683  _setURI */\n  tag_11\n    /* \"TTT_ERC1155Token-Jason.sol\":12676:12689  _setURI(uri_) */\n  jump\t// in\ntag_10:\n    /* \"TTT_ERC1155Token-Jason.sol\":12781:12822  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_12\n  shl(0xe1, 0x6cdb3d13)\n    /* \"TTT_ERC1155Token-Jason.sol\":12781:12799  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":12781:12822  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_12:\n    /* \"TTT_ERC1155Token-Jason.sol\":12925:12979  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_13\n  shl(0xe2, 0x03a24d07)\n    /* \"TTT_ERC1155Token-Jason.sol\":12925:12943  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":12925:12979  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_13:\n    /* \"TTT_ERC1155Token-Jason.sol\":12632:12987  constructor (string memory uri_) {... */\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":11144:25235  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_27)\n    /* \"TTT_ERC1155Token-Jason.sol\":3236:3437  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_8:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3320:3345  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  swap1\n  sub\n    /* \"TTT_ERC1155Token-Jason.sol\":3312:3378  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1395:1397   */\n  0x20\n    /* \"TTT_ERC1155Token-Jason.sol\":3312:3378  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1377:1398   */\n  mstore\n    /* \"#utility.yul\":1434:1436   */\n  0x1c\n    /* \"#utility.yul\":1414:1432   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1407:1437   */\n  mstore\n    /* \"#utility.yul\":1473:1503   */\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n    /* \"#utility.yul\":1453:1471   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1446:1504   */\n  mstore\n    /* \"#utility.yul\":1521:1539   */\n  0x64\n  add\n    /* \"TTT_ERC1155Token-Jason.sol\":3312:3378  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3389:3422  _supportedInterfaces[interfaceId] */\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3389:3409  _supportedInterfaces */\n  0x00\n    /* \"TTT_ERC1155Token-Jason.sol\":3389:3422  _supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TTT_ERC1155Token-Jason.sol\":3389:3429  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3425:3429  true */\n  0x01\n    /* \"TTT_ERC1155Token-Jason.sol\":3389:3429  _supportedInterfaces[interfaceId] = true */\n  or\n  swap1\n  sstore\n    /* \"TTT_ERC1155Token-Jason.sol\":3236:3437  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"TTT_ERC1155Token-Jason.sol\":18363:18451  function _setURI(string memory newuri) internal virtual {... */\ntag_11:\n    /* \"TTT_ERC1155Token-Jason.sol\":18430:18434  _uri */\n  0x03\n    /* \"TTT_ERC1155Token-Jason.sol\":18430:18443  _uri = newuri */\n  tag_20\n    /* \"TTT_ERC1155Token-Jason.sol\":18437:18443  newuri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18430:18434  _uri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18430:18443  _uri = newuri */\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":18363:18451  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1188   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_30:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_31:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_32:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_34\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_36\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_37:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_38:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  dup7\n    /* \"#utility.yul\":1145:1147   */\n  dup5\n    /* \"#utility.yul\":1137:1143   */\n  dup4\n    /* \"#utility.yul\":1133:1148   */\n  add\n    /* \"#utility.yul\":1129:1153   */\n  add\n    /* \"#utility.yul\":1122:1157   */\n  mstore\n    /* \"#utility.yul\":1176:1182   */\n  dup1\n    /* \"#utility.yul\":1166:1182   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1188   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1550:1930   */\ntag_23:\n    /* \"#utility.yul\":1629:1630   */\n  0x01\n    /* \"#utility.yul\":1625:1637   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1672:1684   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1693:1754   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1747:1751   */\n  0x7f\n    /* \"#utility.yul\":1739:1745   */\n  dup3\n    /* \"#utility.yul\":1735:1752   */\n  and\n    /* \"#utility.yul\":1725:1752   */\n  swap2\n  pop\n    /* \"#utility.yul\":1693:1754   */\ntag_43:\n    /* \"#utility.yul\":1800:1802   */\n  0x20\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1789:1803   */\n  lt\n    /* \"#utility.yul\":1769:1787   */\n  dup2\n    /* \"#utility.yul\":1766:1804   */\n  sub\n    /* \"#utility.yul\":1763:1924   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1846:1856   */\n  0x4e487b71\n    /* \"#utility.yul\":1841:1844   */\n  0xe0\n    /* \"#utility.yul\":1837:1857   */\n  shl\n    /* \"#utility.yul\":1834:1835   */\n  0x00\n    /* \"#utility.yul\":1827:1858   */\n  mstore\n    /* \"#utility.yul\":1881:1885   */\n  0x22\n    /* \"#utility.yul\":1878:1879   */\n  0x04\n    /* \"#utility.yul\":1871:1886   */\n  mstore\n    /* \"#utility.yul\":1909:1913   */\n  0x24\n    /* \"#utility.yul\":1906:1907   */\n  0x00\n    /* \"#utility.yul\":1899:1914   */\n  revert\n    /* \"#utility.yul\":1763:1924   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1550:1930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2061:2606   */\ntag_25:\n    /* \"#utility.yul\":2163:2165   */\n  0x1f\n    /* \"#utility.yul\":2158:2161   */\n  dup3\n    /* \"#utility.yul\":2155:2166   */\n  gt\n    /* \"#utility.yul\":2152:2600   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2199:2200   */\n  0x00\n    /* \"#utility.yul\":2224:2229   */\n  dup2\n    /* \"#utility.yul\":2220:2222   */\n  dup2\n    /* \"#utility.yul\":2213:2230   */\n  mstore\n    /* \"#utility.yul\":2269:2273   */\n  0x20\n    /* \"#utility.yul\":2265:2267   */\n  dup2\n    /* \"#utility.yul\":2255:2274   */\n  keccak256\n    /* \"#utility.yul\":2339:2341   */\n  0x1f\n    /* \"#utility.yul\":2327:2337   */\n  dup6\n    /* \"#utility.yul\":2323:2342   */\n  add\n    /* \"#utility.yul\":2320:2321   */\n  0x05\n    /* \"#utility.yul\":2316:2343   */\n  shr\n    /* \"#utility.yul\":2310:2314   */\n  dup2\n    /* \"#utility.yul\":2306:2344   */\n  add\n    /* \"#utility.yul\":2375:2379   */\n  0x20\n    /* \"#utility.yul\":2363:2373   */\n  dup7\n    /* \"#utility.yul\":2360:2380   */\n  lt\n    /* \"#utility.yul\":2357:2404   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2398:2402   */\n  dup1\n    /* \"#utility.yul\":2357:2404   */\ntag_48:\n    /* \"#utility.yul\":2453:2455   */\n  0x1f\n    /* \"#utility.yul\":2448:2451   */\n  dup6\n    /* \"#utility.yul\":2444:2456   */\n  add\n    /* \"#utility.yul\":2441:2442   */\n  0x05\n    /* \"#utility.yul\":2437:2457   */\n  shr\n    /* \"#utility.yul\":2431:2435   */\n  dup3\n    /* \"#utility.yul\":2427:2458   */\n  add\n    /* \"#utility.yul\":2417:2458   */\n  swap2\n  pop\n    /* \"#utility.yul\":2508:2590   */\ntag_49:\n    /* \"#utility.yul\":2526:2528   */\n  dup2\n    /* \"#utility.yul\":2519:2524   */\n  dup2\n    /* \"#utility.yul\":2516:2529   */\n  lt\n    /* \"#utility.yul\":2508:2590   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2571:2588   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2552:2553   */\n  0x01\n    /* \"#utility.yul\":2541:2554   */\n  add\n    /* \"#utility.yul\":2508:2590   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2512:2515   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2152:2600   */\ntag_47:\n    /* \"#utility.yul\":2061:2606   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2782:4134   */\ntag_21:\n    /* \"#utility.yul\":2902:2912   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2924:2954   */\n  dup2\n  gt\n    /* \"#utility.yul\":2921:2977   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2957:2975   */\n  tag_55\n  tag_22\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2986:3083   */\n  tag_56\n    /* \"#utility.yul\":3076:3082   */\n  dup2\n    /* \"#utility.yul\":3036:3074   */\n  tag_57\n    /* \"#utility.yul\":3068:3072   */\n  dup5\n    /* \"#utility.yul\":3062:3073   */\n  sload\n    /* \"#utility.yul\":3036:3074   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3030:3034   */\n  dup5\n    /* \"#utility.yul\":2986:3083   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3138:3142   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3202:3204   */\n  0x1f\n    /* \"#utility.yul\":3191:3205   */\n  dup4\n  gt\n    /* \"#utility.yul\":3219:3220   */\n  0x01\n    /* \"#utility.yul\":3214:3877   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3921:3922   */\n  0x00\n    /* \"#utility.yul\":3938:3944   */\n  dup5\n    /* \"#utility.yul\":3935:4024   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3990:4009   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3984:4010   */\n  mload\n    /* \"#utility.yul\":3935:4024   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2739:2740   */\n  0x03\n    /* \"#utility.yul\":2735:2746   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2731:2755   */\n  shr\n    /* \"#utility.yul\":2727:2756   */\n  not\n    /* \"#utility.yul\":2717:2757   */\n  and\n    /* \"#utility.yul\":2763:2764   */\n  0x01\n    /* \"#utility.yul\":2759:2770   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2714:2771   */\n  or\n    /* \"#utility.yul\":4037:4118   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3184:4128   */\n  jump(tag_51)\n    /* \"#utility.yul\":3214:3877   */\ntag_59:\n    /* \"#utility.yul\":2008:2009   */\n  0x00\n    /* \"#utility.yul\":2001:2015   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2045:2049   */\n  0x20\n    /* \"#utility.yul\":2032:2050   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3250:3270   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3368:3604   */\ntag_63:\n    /* \"#utility.yul\":3382:3389   */\n  dup3\n    /* \"#utility.yul\":3379:3380   */\n  dup2\n    /* \"#utility.yul\":3376:3390   */\n  lt\n    /* \"#utility.yul\":3368:3604   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3471:3490   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3465:3491   */\n  mload\n    /* \"#utility.yul\":3450:3492   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3563:3590   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3531:3532   */\n  0x01\n    /* \"#utility.yul\":3519:3533   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3398:3417   */\n  dup5\n  add\n    /* \"#utility.yul\":3368:3604   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3372:3375   */\n  pop\n    /* \"#utility.yul\":3632:3638   */\n  dup6\n    /* \"#utility.yul\":3623:3630   */\n  dup3\n    /* \"#utility.yul\":3620:3639   */\n  lt\n    /* \"#utility.yul\":3617:3818   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3693:3712   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3687:3713   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3776:3777   */\n  0x03\n    /* \"#utility.yul\":3772:3786   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3788:3791   */\n  0xf8\n    /* \"#utility.yul\":3768:3792   */\n  and\n    /* \"#utility.yul\":3764:3801   */\n  shr\n    /* \"#utility.yul\":3760:3802   */\n  not\n    /* \"#utility.yul\":3745:3803   */\n  and\n    /* \"#utility.yul\":3730:3804   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3617:3818   */\ntag_66:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3864:3865   */\n  0x01\n    /* \"#utility.yul\":3848:3862   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3844:3866   */\n  add\n    /* \"#utility.yul\":3831:3867   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2782:4134   */\n  jump\t// out\ntag_27:\n    /* \"TTT_ERC1155Token-Jason.sol\":11144:25235  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":11144:25235  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TTT_ERC1155Token-Jason.sol\":13656:13887  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13656:13887  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TTT_ERC1155Token-Jason.sol\":2679:2829  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":2788:2821  _supportedInterfaces[interfaceId] */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":2764:2768  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":2788:2821  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":2679:2829  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":2679:2829  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":13398:13505  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":16299:17519  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"TTT_ERC1155Token-Jason.sol\":14053:14602  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":14675:14986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15058:15226  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15181:15208  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15157:15161  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":15181:15208  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15181:15199  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":15181:15208  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15181:15218  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15058:15226  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15298:16222  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":13656:13887  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"TTT_ERC1155Token-Jason.sol\":13742:13749  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13770:13791  account != address(0) */\n      dup4\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":13762:13839  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":13762:13839  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8191:8212   */\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x2b\n        /* \"#utility.yul\":8228:8246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8221:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8321   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8267:8285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8260:8322   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8331:8372   */\n      mstore\n        /* \"#utility.yul\":8389:8408   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13762:13839  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13857:13870  _balances[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":13857:13866  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":13857:13870  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13857:13879  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":13656:13887  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":13398:13505  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"TTT_ERC1155Token-Jason.sol\":13460:13473  string memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":13493:13497  _uri */\n      0x03\n        /* \"TTT_ERC1155Token-Jason.sol\":13486:13497  return _uri */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13398:13505  function uri(uint256) external view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":16299:17519  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"TTT_ERC1155Token-Jason.sol\":16564:16571  amounts */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16564:16578  amounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16550:16553  ids */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":16550:16560  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16550:16578  ids.length == amounts.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":16542:16623  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16542:16623  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8988:9009   */\n      mstore\n        /* \"#utility.yul\":9045:9047   */\n      0x28\n        /* \"#utility.yul\":9025:9043   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9018:9048   */\n      mstore\n        /* \"#utility.yul\":9084:9118   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":9064:9082   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9057:9119   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9135:9153   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9128:9166   */\n      mstore\n        /* \"#utility.yul\":9183:9202   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16542:16623  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":8804:9208   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16542:16623  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16642:16658  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":16634:16700  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_71\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16733:16753  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16733:16753  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":16733:16793  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_75\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16757:16793  isApprovedForAll(from, _msgSender()) */\n      tag_75\n        /* \"TTT_ERC1155Token-Jason.sol\":16774:16778  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15058:15226  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":16757:16793  isApprovedForAll(from, _msgSender()) */\n    tag_75:\n        /* \"TTT_ERC1155Token-Jason.sol\":16711:16871  require(... */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9821:9823   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16711:16871  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9803:9824   */\n      mstore\n        /* \"#utility.yul\":9860:9862   */\n      0x32\n        /* \"#utility.yul\":9840:9858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9833:9863   */\n      mstore\n        /* \"#utility.yul\":9899:9933   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9879:9897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9872:9934   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9950:9968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9943:9991   */\n      mstore\n        /* \"#utility.yul\":10008:10027   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16711:16871  require(... */\n      tag_55\n        /* \"#utility.yul\":9619:10033   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16711:16871  require(... */\n    tag_77:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16884:16900  address operator */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17001:17359  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_83:\n        /* \"TTT_ERC1155Token-Jason.sol\":17025:17028  ids */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":17025:17035  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17021:17022  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17021:17035  i < ids.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":17001:17359  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":17057:17067  uint256 id */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17070:17073  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17074:17075  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17070:17076  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17057:17076  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17091:17105  uint256 amount */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17108:17115  amounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17116:17117  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":17108:17118  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_90\n      tag_88\n      jump\t// in\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17091:17118  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17283  _balances[id][from].sub(... */\n      tag_91\n        /* \"TTT_ERC1155Token-Jason.sol\":17199:17205  amount */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17283  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17166  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17170  _balances[id] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17167:17169  id */\n      dup7\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17170  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17176  _balances[id][from] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17171:17175  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17176  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17180  _balances[id][from].sub */\n      tag_92\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17157:17283  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"TTT_ERC1155Token-Jason.sol\":17135:17148  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17135:17144  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17135:17148  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17135:17154  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17135:17283  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17318:17335  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17318:17347  _balances[id][to].add(amount) */\n      tag_93\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17340:17346  amount */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17318:17339  _balances[id][to].add */\n      tag_94\n        /* \"TTT_ERC1155Token-Jason.sol\":17318:17347  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_93:\n        /* \"TTT_ERC1155Token-Jason.sol\":17298:17311  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17298:17307  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17298:17311  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17298:17315  _balances[id][to] */\n      dup13\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17298:17347  _balances[id][to] = _balances[id][to].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17037:17040  ++i */\n      tag_95\n      dup2\n      tag_96\n      jump\t// in\n    tag_95:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17001:17359  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17406:17408  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17376:17423  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17400:17404  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17376:17423  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17390:17398  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17376:17423  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"TTT_ERC1155Token-Jason.sol\":17410:17413  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17415:17422  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17376:17423  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":17436:17511  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_99\n        /* \"TTT_ERC1155Token-Jason.sol\":17472:17480  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17482:17486  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17488:17490  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17492:17495  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17497:17504  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17506:17510  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17436:17471  _doSafeBatchTransferAcceptanceCheck */\n      tag_100\n        /* \"TTT_ERC1155Token-Jason.sol\":17436:17511  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_99:\n        /* \"TTT_ERC1155Token-Jason.sol\":16531:17519  {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16299:17519  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14053:14602  function balanceOfBatch(... */\n    tag_37:\n        /* \"TTT_ERC1155Token-Jason.sol\":14234:14250  uint256[] memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":14295:14298  ids */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14295:14305  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14276:14284  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14276:14291  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14276:14305  accounts.length == ids.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":14268:14351  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11114:11116   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14268:14351  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11096:11117   */\n      mstore\n        /* \"#utility.yul\":11153:11155   */\n      0x29\n        /* \"#utility.yul\":11133:11151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11126:11156   */\n      mstore\n        /* \"#utility.yul\":11192:11226   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":11172:11190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11165:11227   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":11243:11261   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11236:11275   */\n      mstore\n        /* \"#utility.yul\":11292:11311   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14268:14351  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10912:11317   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14268:14351  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_102:\n        /* \"TTT_ERC1155Token-Jason.sol\":14364:14394  uint256[] memory batchBalances */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14411:14419  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14411:14426  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14397:14427  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_108:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14364:14427  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14445:14454  uint256 i */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14440:14562  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_109:\n        /* \"TTT_ERC1155Token-Jason.sol\":14464:14472  accounts */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":14464:14479  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14460:14461  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14460:14479  i < accounts.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":14440:14562  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":14520:14550  balanceOf(accounts[i], ids[i]) */\n      tag_112\n        /* \"TTT_ERC1155Token-Jason.sol\":14530:14538  accounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14539:14540  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14530:14541  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_88\n      jump\t// in\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14543:14546  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14547:14548  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14543:14549  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_116\n      tag_88\n      jump\t// in\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14520:14529  balanceOf */\n      tag_15\n        /* \"TTT_ERC1155Token-Jason.sol\":14520:14550  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_112:\n        /* \"TTT_ERC1155Token-Jason.sol\":14501:14514  batchBalances */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14515:14516  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14501:14517  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_118\n      tag_88\n      jump\t// in\n    tag_118:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14501:14550  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14481:14484  ++i */\n      tag_119\n      dup2\n      tag_96\n      jump\t// in\n    tag_119:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14440:14562  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14581:14594  batchBalances */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":14053:14602  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14675:14986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14778:14802  _msgSender() != operator */\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14778:14802  _msgSender() != operator */\n      sub\n        /* \"TTT_ERC1155Token-Jason.sol\":14770:14848  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11524:11526   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14770:14848  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11506:11527   */\n      mstore\n        /* \"#utility.yul\":11563:11565   */\n      0x29\n        /* \"#utility.yul\":11543:11561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11536:11566   */\n      mstore\n        /* \"#utility.yul\":11602:11636   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":11582:11600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11575:11637   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":11653:11671   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11646:11685   */\n      mstore\n        /* \"#utility.yul\":11702:11721   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14770:14848  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":11322:11727   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14770:14848  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n    tag_122:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14893  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14879  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14893  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14903  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14914  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14930:14978  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14861:14903  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":14930:14978  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14930:14978  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TTT_ERC1155Token-Jason.sol\":14675:14986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":15298:16222  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15524:15540  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15516:15582  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_71\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15615:15635  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15615:15635  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":15615:15675  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_134\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":15639:15675  isApprovedForAll(from, _msgSender()) */\n      tag_134\n        /* \"TTT_ERC1155Token-Jason.sol\":15656:15660  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15058:15226  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15639:15675  isApprovedForAll(from, _msgSender()) */\n    tag_134:\n        /* \"TTT_ERC1155Token-Jason.sol\":15593:15744  require(... */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11934:11936   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":15593:15744  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11916:11937   */\n      mstore\n        /* \"#utility.yul\":11973:11975   */\n      0x29\n        /* \"#utility.yul\":11953:11971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11946:11976   */\n      mstore\n        /* \"#utility.yul\":12012:12046   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11992:12010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11985:12047   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":12063:12081   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12056:12095   */\n      mstore\n        /* \"#utility.yul\":12112:12131   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":15593:15744  require(... */\n      tag_55\n        /* \"#utility.yul\":11732:12137   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15593:15744  require(... */\n    tag_136:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15801:15897  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_140\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":15832:15836  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15838:15840  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15842:15863  _asSingletonArray(id) */\n      tag_141\n        /* \"TTT_ERC1155Token-Jason.sol\":15860:15862  id */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15842:15859  _asSingletonArray */\n      tag_142\n        /* \"TTT_ERC1155Token-Jason.sol\":15842:15863  _asSingletonArray(id) */\n      jump\t// in\n    tag_141:\n        /* \"TTT_ERC1155Token-Jason.sol\":15865:15890  _asSingletonArray(amount) */\n      tag_143\n        /* \"TTT_ERC1155Token-Jason.sol\":15883:15889  amount */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15865:15882  _asSingletonArray */\n      tag_142\n        /* \"TTT_ERC1155Token-Jason.sol\":15865:15890  _asSingletonArray(amount) */\n      jump\t// in\n    tag_143:\n        /* \"TTT_ERC1155Token-Jason.sol\":16299:17519  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15801:15897  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_140:\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:16009  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_144\n        /* \"TTT_ERC1155Token-Jason.sol\":15956:15962  amount */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:16009  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:15945  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:15941  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:15945  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:15951  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:16009  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:15955  _balances[id][from].sub */\n      tag_92\n        /* \"TTT_ERC1155Token-Jason.sol\":15932:16009  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_144:\n        /* \"TTT_ERC1155Token-Jason.sol\":15910:15923  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15910:15919  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15910:15923  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15910:15929  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15910:16009  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16040:16057  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":16040:16069  _balances[id][to].add(amount) */\n      tag_145\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":16062:16068  amount */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":16040:16061  _balances[id][to].add */\n      tag_94\n        /* \"TTT_ERC1155Token-Jason.sol\":16040:16069  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_145:\n        /* \"TTT_ERC1155Token-Jason.sol\":16020:16033  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16020:16029  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":16020:16033  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16020:16037  _balances[id][to] */\n      dup11\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":16020:16069  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16087:16133  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n        /* \"#utility.yul\":12316:12341   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12357:12375   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12350:12384   */\n      dup8\n      swap1\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16087:16133  TransferSingle(operator, from, to, id, amount) */\n      dup10\n      dup4\n      and\n      swap3\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12289:12307   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16087:16133  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":16146:16214  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_99\n        /* \"TTT_ERC1155Token-Jason.sol\":16177:16185  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16187:16191  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16193:16195  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16197:16199  id */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16201:16207  amount */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16209:16213  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16146:16176  _doSafeTransferAcceptanceCheck */\n      tag_149\n        /* \"TTT_ERC1155Token-Jason.sol\":16146:16214  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":33328:33494  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"TTT_ERC1155Token-Jason.sol\":33414:33421  uint256 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":33450:33462  errorMessage */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":33442:33448  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":33434:33463  require(b <= a, errorMessage) */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_153:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":33481:33486  a - b */\n      tag_155\n        /* \"TTT_ERC1155Token-Jason.sol\":33485:33486  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":33481:33482  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":33481:33486  a - b */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"TTT_ERC1155Token-Jason.sol\":33474:33486  return a - b */\n      swap5\n        /* \"TTT_ERC1155Token-Jason.sol\":33328:33494  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":30501:30680  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_94:\n        /* \"TTT_ERC1155Token-Jason.sol\":30559:30566  uint256 */\n      0x00\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":30591:30596  a + b */\n      tag_158\n        /* \"TTT_ERC1155Token-Jason.sol\":30595:30596  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30591:30592  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":30591:30596  a + b */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"TTT_ERC1155Token-Jason.sol\":30579:30596  uint256 c = a + b */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":30620:30621  a */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30615:30616  c */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":30615:30621  c >= a */\n      lt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":30607:30653  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12860:12862   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":30607:30653  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12842:12863   */\n      mstore\n        /* \"#utility.yul\":12899:12901   */\n      0x1b\n        /* \"#utility.yul\":12879:12897   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12872:12902   */\n      mstore\n        /* \"#utility.yul\":12938:12967   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":12918:12936   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12911:12968   */\n      mstore\n        /* \"#utility.yul\":12985:13003   */\n      0x64\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":30607:30653  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_55\n        /* \"#utility.yul\":12658:13009   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":30607:30653  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_160:\n        /* \"TTT_ERC1155Token-Jason.sol\":30671:30672  c */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":30501:30680  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":24227:25026  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24481:24494  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36216:36236  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36255:36263  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":24477:25019  if (to.isContract()) {... */\n      tag_99\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24517:24596  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24517:24560  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24517:24596  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_167\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24561:24569  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24571:24575  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24577:24580  ids */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24582:24589  amounts */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24591:24595  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24517:24596  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_168\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_170\n      swap2\n      dup2\n      add\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x01\n    tag_169:\n        /* \"TTT_ERC1155Token-Jason.sol\":24513:25008  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_172\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      dup1\n      0x08c379a0\n      sub\n      tag_175\n      jumpi\n      pop\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      dup1\n      tag_180\n      jumpi\n      pop\n      jump(tag_174)\n    tag_180:\n        /* \"TTT_ERC1155Token-Jason.sol\":24881:24887  reason */\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":24874:24888  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24513:25008  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_175:\n      pop\n    tag_174:\n        /* \"TTT_ERC1155Token-Jason.sol\":24930:24992  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15162:15164   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":24930:24992  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15144:15165   */\n      mstore\n        /* \"#utility.yul\":15201:15203   */\n      0x34\n        /* \"#utility.yul\":15181:15199   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15174:15204   */\n      mstore\n        /* \"#utility.yul\":15240:15274   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15220:15238   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15213:15275   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15291:15309   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15284:15334   */\n      mstore\n        /* \"#utility.yul\":15351:15370   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":24930:24992  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14960:15376   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":24513:25008  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_172:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":24646:24710  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":24642:24805  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_185\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24735:24785  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_187\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24642:24805  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_185:\n        /* \"TTT_ERC1155Token-Jason.sol\":24597:24820  returns (bytes4 response) {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":24227:25026  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":25034:25232  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_142:\n        /* \"TTT_ERC1155Token-Jason.sol\":25154:25170  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":25168:25169  1 */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":25154:25170  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25100:25116  uint256[] memory */\n      0x60\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25129:25151  uint256[] memory array */\n      0x00\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25154:25170  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25129:25170  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25192:25199  element */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":25181:25186  array */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":25187:25188  0 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":25181:25189  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_88\n      jump\t// in\n    tag_193:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":25181:25199  array[0] = element */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25219:25224  array */\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":25034:25232  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":23457:24219  function _doSafeTransferAcceptanceCheck(... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23686:23699  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36216:36236  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36255:36263  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":23682:24212  if (to.isContract()) {... */\n      tag_99\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23722:23794  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23722:23760  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23722:23794  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_197\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23761:23769  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23771:23775  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23777:23779  id */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23781:23787  amount */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23789:23793  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23722:23794  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_200\n      swap2\n      dup2\n      add\n      swap1\n      tag_171\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"TTT_ERC1155Token-Jason.sol\":23718:24201  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_201\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_201:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":23844:23903  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":23840:23998  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_185\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23928:23978  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_187\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_214:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_225:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_227:\n        /* \"#utility.yul\":360:389   */\n      tag_228\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_214\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_215:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_231:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_233:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_160\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_216:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_239:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_29:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_160\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_107:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_217:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_247\n      tag_107\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_218:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_250\n      tag_107\n      jump\t// in\n    tag_250:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_219:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_252:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_253\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_254\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_217\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_255:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_256:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_256)\n    tag_258:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_220:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_260:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_262\n      tag_107\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_263\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_264:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4855   */\n    tag_32:\n        /* \"#utility.yul\":4066:4072   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup1\n        /* \"#utility.yul\":4082:4088   */\n      0x00\n        /* \"#utility.yul\":4090:4096   */\n      dup1\n        /* \"#utility.yul\":4098:4104   */\n      0x00\n        /* \"#utility.yul\":4151:4154   */\n      0xa0\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4130:4137   */\n      dup9\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4155   */\n      slt\n        /* \"#utility.yul\":4119:4172   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4119:4172   */\n    tag_266:\n        /* \"#utility.yul\":4191:4220   */\n      tag_267\n        /* \"#utility.yul\":4210:4219   */\n      dup7\n        /* \"#utility.yul\":4191:4220   */\n      tag_214\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4181:4220   */\n      swap5\n      pop\n        /* \"#utility.yul\":4239:4277   */\n      tag_268\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup8\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4239:4277   */\n      tag_214\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4229:4277   */\n      swap4\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup7\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4300:4332   */\n      calldataload\n        /* \"#utility.yul\":4351:4369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4392:4394   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4395   */\n      gt\n        /* \"#utility.yul\":4378:4412   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4405:4406   */\n      dup1\n        /* \"#utility.yul\":4398:4410   */\n      revert\n        /* \"#utility.yul\":4378:4412   */\n    tag_269:\n        /* \"#utility.yul\":4431:4492   */\n      tag_270\n        /* \"#utility.yul\":4484:4491   */\n      dup10\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4464:4473   */\n      dup11\n        /* \"#utility.yul\":4460:4482   */\n      add\n        /* \"#utility.yul\":4431:4492   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4421:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x60\n        /* \"#utility.yul\":4534:4543   */\n      dup9\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n        /* \"#utility.yul\":4501:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      dup1\n        /* \"#utility.yul\":4564:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4577   */\n      gt\n        /* \"#utility.yul\":4558:4594   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4558:4594   */\n    tag_271:\n        /* \"#utility.yul\":4613:4676   */\n      tag_272\n        /* \"#utility.yul\":4668:4675   */\n      dup10\n        /* \"#utility.yul\":4657:4665   */\n      dup4\n        /* \"#utility.yul\":4646:4655   */\n      dup11\n        /* \"#utility.yul\":4642:4666   */\n      add\n        /* \"#utility.yul\":4613:4676   */\n      tag_219\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4603:4676   */\n      swap4\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4733   */\n      add\n        /* \"#utility.yul\":4701:4734   */\n      calldataload\n        /* \"#utility.yul\":4685:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      dup1\n        /* \"#utility.yul\":4749:4757   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      gt\n        /* \"#utility.yul\":4743:4779   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup1\n        /* \"#utility.yul\":4765:4777   */\n      revert\n        /* \"#utility.yul\":4743:4779   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":4798:4849   */\n      tag_274\n        /* \"#utility.yul\":4841:4848   */\n      dup9\n        /* \"#utility.yul\":4830:4838   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup10\n        /* \"#utility.yul\":4815:4839   */\n      add\n        /* \"#utility.yul\":4798:4849   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4788:4849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4855   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:6068   */\n    tag_36:\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":4986:4992   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5014:5037   */\n      sub\n        /* \"#utility.yul\":5010:5042   */\n      slt\n        /* \"#utility.yul\":5007:5059   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5007:5059   */\n    tag_276:\n        /* \"#utility.yul\":5095:5104   */\n      dup3\n        /* \"#utility.yul\":5082:5105   */\n      calldataload\n        /* \"#utility.yul\":5124:5142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5165:5167   */\n      dup1\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      gt\n        /* \"#utility.yul\":5151:5185   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5151:5185   */\n    tag_277:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5208:5217   */\n      dup6\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5271   */\n      dup6\n        /* \"#utility.yul\":5257:5261   */\n      0x1f\n        /* \"#utility.yul\":5253:5255   */\n      dup4\n        /* \"#utility.yul\":5249:5262   */\n      add\n        /* \"#utility.yul\":5245:5272   */\n      slt\n        /* \"#utility.yul\":5235:5290   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5283:5284   */\n      dup1\n        /* \"#utility.yul\":5276:5288   */\n      revert\n        /* \"#utility.yul\":5235:5290   */\n    tag_278:\n        /* \"#utility.yul\":5322:5324   */\n      dup2\n        /* \"#utility.yul\":5309:5325   */\n      calldataload\n        /* \"#utility.yul\":5344:5348   */\n      0x20\n        /* \"#utility.yul\":5367:5410   */\n      tag_279\n        /* \"#utility.yul\":5407:5409   */\n      dup3\n        /* \"#utility.yul\":5367:5410   */\n      tag_218\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5439:5441   */\n      0x40\n        /* \"#utility.yul\":5433:5442   */\n      mload\n        /* \"#utility.yul\":5451:5482   */\n      tag_280\n        /* \"#utility.yul\":5479:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5451:5482   */\n      tag_217\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5517:5535   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5606   */\n      0x05\n        /* \"#utility.yul\":5601:5611   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5593:5612   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5617   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5551:5566   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5648   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5626:5665   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5626:5665   */\n    tag_281:\n        /* \"#utility.yul\":5685:5696   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5705:5853   */\n    tag_282:\n        /* \"#utility.yul\":5721:5727   */\n      dup4\n        /* \"#utility.yul\":5716:5719   */\n      dup7\n        /* \"#utility.yul\":5713:5728   */\n      lt\n        /* \"#utility.yul\":5705:5853   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5787:5810   */\n      tag_285\n        /* \"#utility.yul\":5806:5809   */\n      dup7\n        /* \"#utility.yul\":5787:5810   */\n      tag_214\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5775:5811   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5738:5750   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5831:5843   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5705:5853   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":5872:5878   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5916:5934   */\n      dup7\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5947:5963   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5944:5980   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5973:5974   */\n      dup1\n        /* \"#utility.yul\":5966:5978   */\n      revert\n        /* \"#utility.yul\":5944:5980   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":5999:6062   */\n      tag_287\n        /* \"#utility.yul\":6054:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6051   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup7\n        /* \"#utility.yul\":6028:6052   */\n      add\n        /* \"#utility.yul\":5999:6062   */\n      tag_219\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5989:6062   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4860:6068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6508   */\n    tag_221:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6158:6170   */\n      mload\n        /* \"#utility.yul\":6191:6197   */\n      dup1\n        /* \"#utility.yul\":6186:6189   */\n      dup5\n        /* \"#utility.yul\":6179:6198   */\n      mstore\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6241:6244   */\n      dup6\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap5\n      pop\n        /* \"#utility.yul\":6283:6285   */\n      dup1\n        /* \"#utility.yul\":6276:6281   */\n      dup5\n        /* \"#utility.yul\":6272:6286   */\n      add\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6314:6483   */\n    tag_289:\n        /* \"#utility.yul\":6328:6334   */\n      dup4\n        /* \"#utility.yul\":6325:6326   */\n      dup2\n        /* \"#utility.yul\":6322:6335   */\n      lt\n        /* \"#utility.yul\":6314:6483   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6389:6402   */\n      dup2\n      mload\n        /* \"#utility.yul\":6377:6403   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6423:6435   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6458:6473   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6350:6351   */\n      0x01\n        /* \"#utility.yul\":6343:6352   */\n      add\n        /* \"#utility.yul\":6314:6483   */\n      jump(tag_289)\n    tag_291:\n      pop\n        /* \"#utility.yul\":6499:6502   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6073:6508   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6774   */\n    tag_39:\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup2\n        /* \"#utility.yul\":6674:6695   */\n      mstore\n        /* \"#utility.yul\":6655:6659   */\n      0x00\n        /* \"#utility.yul\":6712:6768   */\n      tag_160\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup4\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6712:6768   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":6779:7126   */\n    tag_42:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6884:6891   */\n      dup6\n        /* \"#utility.yul\":6880:6903   */\n      sub\n        /* \"#utility.yul\":6876:6908   */\n      slt\n        /* \"#utility.yul\":6873:6925   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6921:6922   */\n      0x00\n        /* \"#utility.yul\":6918:6919   */\n      dup1\n        /* \"#utility.yul\":6911:6923   */\n      revert\n        /* \"#utility.yul\":6873:6925   */\n    tag_295:\n        /* \"#utility.yul\":6944:6973   */\n      tag_296\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6944:6973   */\n      tag_214\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6934:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7026   */\n      add\n        /* \"#utility.yul\":6995:7027   */\n      calldataload\n        /* \"#utility.yul\":7070:7075   */\n      dup1\n        /* \"#utility.yul\":7063:7076   */\n      iszero\n        /* \"#utility.yul\":7056:7077   */\n      iszero\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7046:7078   */\n      eq\n        /* \"#utility.yul\":7036:7096   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7089:7090   */\n      dup1\n        /* \"#utility.yul\":7082:7094   */\n      revert\n        /* \"#utility.yul\":7036:7096   */\n    tag_297:\n        /* \"#utility.yul\":7115:7120   */\n      dup1\n        /* \"#utility.yul\":7105:7120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6779:7126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7391   */\n    tag_46:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7207:7213   */\n      dup1\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7248:7257   */\n      dup4\n        /* \"#utility.yul\":7239:7246   */\n      dup6\n        /* \"#utility.yul\":7235:7258   */\n      sub\n        /* \"#utility.yul\":7231:7263   */\n      slt\n        /* \"#utility.yul\":7228:7280   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7273:7274   */\n      dup1\n        /* \"#utility.yul\":7266:7278   */\n      revert\n        /* \"#utility.yul\":7228:7280   */\n    tag_299:\n        /* \"#utility.yul\":7299:7328   */\n      tag_300\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7299:7328   */\n      tag_214\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7289:7328   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7385   */\n      tag_301\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup5\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7347:7385   */\n      tag_214\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7337:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:8002   */\n    tag_51:\n        /* \"#utility.yul\":7500:7506   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup1\n        /* \"#utility.yul\":7516:7522   */\n      0x00\n        /* \"#utility.yul\":7524:7530   */\n      dup1\n        /* \"#utility.yul\":7532:7538   */\n      0x00\n        /* \"#utility.yul\":7585:7588   */\n      0xa0\n        /* \"#utility.yul\":7573:7582   */\n      dup7\n        /* \"#utility.yul\":7564:7571   */\n      dup9\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7589   */\n      slt\n        /* \"#utility.yul\":7553:7606   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7553:7606   */\n    tag_303:\n        /* \"#utility.yul\":7625:7654   */\n      tag_304\n        /* \"#utility.yul\":7644:7653   */\n      dup7\n        /* \"#utility.yul\":7625:7654   */\n      tag_214\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7615:7654   */\n      swap5\n      pop\n        /* \"#utility.yul\":7673:7711   */\n      tag_305\n        /* \"#utility.yul\":7707:7709   */\n      0x20\n        /* \"#utility.yul\":7696:7705   */\n      dup8\n        /* \"#utility.yul\":7692:7710   */\n      add\n        /* \"#utility.yul\":7673:7711   */\n      tag_214\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7663:7711   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7762   */\n      calldataload\n        /* \"#utility.yul\":7720:7762   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7798:7807   */\n      dup7\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7781:7813   */\n      calldataload\n        /* \"#utility.yul\":7771:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7864:7867   */\n      0x80\n        /* \"#utility.yul\":7853:7862   */\n      dup7\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7836:7869   */\n      calldataload\n        /* \"#utility.yul\":7892:7910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7884:7890   */\n      dup2\n        /* \"#utility.yul\":7881:7911   */\n      gt\n        /* \"#utility.yul\":7878:7928   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7924:7925   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup1\n        /* \"#utility.yul\":7914:7926   */\n      revert\n        /* \"#utility.yul\":7878:7928   */\n    tag_306:\n        /* \"#utility.yul\":7947:7996   */\n      tag_274\n        /* \"#utility.yul\":7988:7995   */\n      dup9\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7968:7977   */\n      dup10\n        /* \"#utility.yul\":7964:7986   */\n      add\n        /* \"#utility.yul\":7947:7996   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":8419:8799   */\n    tag_60:\n        /* \"#utility.yul\":8498:8499   */\n      0x01\n        /* \"#utility.yul\":8494:8506   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8541:8553   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8562:8623   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":8616:8620   */\n      0x7f\n        /* \"#utility.yul\":8608:8614   */\n      dup3\n        /* \"#utility.yul\":8604:8621   */\n      and\n        /* \"#utility.yul\":8594:8621   */\n      swap2\n      pop\n        /* \"#utility.yul\":8562:8623   */\n    tag_310:\n        /* \"#utility.yul\":8669:8671   */\n      0x20\n        /* \"#utility.yul\":8661:8667   */\n      dup3\n        /* \"#utility.yul\":8658:8672   */\n      lt\n        /* \"#utility.yul\":8638:8656   */\n      dup2\n        /* \"#utility.yul\":8635:8673   */\n      sub\n        /* \"#utility.yul\":8632:8793   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":8715:8725   */\n      0x4e487b71\n        /* \"#utility.yul\":8710:8713   */\n      0xe0\n        /* \"#utility.yul\":8706:8726   */\n      shl\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8696:8727   */\n      mstore\n        /* \"#utility.yul\":8750:8754   */\n      0x22\n        /* \"#utility.yul\":8747:8748   */\n      0x04\n        /* \"#utility.yul\":8740:8755   */\n      mstore\n        /* \"#utility.yul\":8778:8782   */\n      0x24\n        /* \"#utility.yul\":8775:8776   */\n      0x00\n        /* \"#utility.yul\":8768:8783   */\n      revert\n        /* \"#utility.yul\":8632:8793   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":8419:8799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9213:9614   */\n    tag_71:\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"#utility.yul\":9397:9418   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9454:9456   */\n      0x25\n        /* \"#utility.yul\":9434:9452   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9427:9457   */\n      mstore\n        /* \"#utility.yul\":9493:9527   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":9488:9490   */\n      0x40\n        /* \"#utility.yul\":9473:9491   */\n      dup3\n      add\n        /* \"#utility.yul\":9466:9528   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9559:9561   */\n      0x60\n        /* \"#utility.yul\":9544:9562   */\n      dup3\n      add\n        /* \"#utility.yul\":9537:9572   */\n      mstore\n        /* \"#utility.yul\":9604:9607   */\n      0x80\n        /* \"#utility.yul\":9589:9608   */\n      add\n      swap1\n        /* \"#utility.yul\":9213:9614   */\n      jump\t// out\n        /* \"#utility.yul\":10038:10165   */\n    tag_88:\n        /* \"#utility.yul\":10099:10109   */\n      0x4e487b71\n        /* \"#utility.yul\":10094:10097   */\n      0xe0\n        /* \"#utility.yul\":10090:10110   */\n      shl\n        /* \"#utility.yul\":10087:10088   */\n      0x00\n        /* \"#utility.yul\":10080:10111   */\n      mstore\n        /* \"#utility.yul\":10130:10134   */\n      0x32\n        /* \"#utility.yul\":10127:10128   */\n      0x04\n        /* \"#utility.yul\":10120:10135   */\n      mstore\n        /* \"#utility.yul\":10154:10158   */\n      0x24\n        /* \"#utility.yul\":10151:10152   */\n      0x00\n        /* \"#utility.yul\":10144:10159   */\n      revert\n        /* \"#utility.yul\":10170:10297   */\n    tag_222:\n        /* \"#utility.yul\":10231:10241   */\n      0x4e487b71\n        /* \"#utility.yul\":10226:10229   */\n      0xe0\n        /* \"#utility.yul\":10222:10242   */\n      shl\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10212:10243   */\n      mstore\n        /* \"#utility.yul\":10262:10266   */\n      0x11\n        /* \"#utility.yul\":10259:10260   */\n      0x04\n        /* \"#utility.yul\":10252:10267   */\n      mstore\n        /* \"#utility.yul\":10286:10290   */\n      0x24\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10276:10291   */\n      revert\n        /* \"#utility.yul\":10302:10437   */\n    tag_96:\n        /* \"#utility.yul\":10341:10344   */\n      0x00\n        /* \"#utility.yul\":10362:10379   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10359:10402   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":10382:10400   */\n      tag_319\n      tag_222\n      jump\t// in\n    tag_319:\n      pop\n        /* \"#utility.yul\":10429:10430   */\n      0x01\n        /* \"#utility.yul\":10418:10431   */\n      add\n      swap1\n        /* \"#utility.yul\":10302:10437   */\n      jump\t// out\n        /* \"#utility.yul\":10442:10907   */\n    tag_98:\n        /* \"#utility.yul\":10699:10701   */\n      0x40\n        /* \"#utility.yul\":10688:10697   */\n      dup2\n        /* \"#utility.yul\":10681:10702   */\n      mstore\n        /* \"#utility.yul\":10662:10666   */\n      0x00\n        /* \"#utility.yul\":10725:10781   */\n      tag_321\n        /* \"#utility.yul\":10777:10779   */\n      0x40\n        /* \"#utility.yul\":10766:10775   */\n      dup4\n        /* \"#utility.yul\":10762:10780   */\n      add\n        /* \"#utility.yul\":10754:10760   */\n      dup6\n        /* \"#utility.yul\":10725:10781   */\n      tag_221\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10829:10838   */\n      dup3\n        /* \"#utility.yul\":10821:10827   */\n      dup2\n        /* \"#utility.yul\":10817:10839   */\n      sub\n        /* \"#utility.yul\":10812:10814   */\n      0x20\n        /* \"#utility.yul\":10801:10810   */\n      dup5\n        /* \"#utility.yul\":10797:10815   */\n      add\n        /* \"#utility.yul\":10790:10840   */\n      mstore\n        /* \"#utility.yul\":10857:10901   */\n      tag_322\n        /* \"#utility.yul\":10894:10900   */\n      dup2\n        /* \"#utility.yul\":10886:10892   */\n      dup6\n        /* \"#utility.yul\":10857:10901   */\n      tag_221\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10849:10901   */\n      swap6\n        /* \"#utility.yul\":10442:10907   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12395:12523   */\n    tag_156:\n        /* \"#utility.yul\":12462:12471   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12483:12494   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12480:12517   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":12497:12515   */\n      tag_53\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":12528:12653   */\n    tag_159:\n        /* \"#utility.yul\":12593:12602   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12614:12624   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12611:12647   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":12627:12645   */\n      tag_53\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":13014:13841   */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13411:13426   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13393:13427   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13463:13478   */\n      dup6\n      and\n        /* \"#utility.yul\":13458:13460   */\n      0x20\n        /* \"#utility.yul\":13443:13461   */\n      dup3\n      add\n        /* \"#utility.yul\":13436:13479   */\n      mstore\n        /* \"#utility.yul\":13373:13376   */\n      0xa0\n        /* \"#utility.yul\":13510:13512   */\n      0x40\n        /* \"#utility.yul\":13495:13513   */\n      dup3\n      add\n        /* \"#utility.yul\":13488:13519   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13336:13340   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13542:13599   */\n      tag_335\n      swap1\n        /* \"#utility.yul\":13579:13598   */\n      dup4\n      add\n        /* \"#utility.yul\":13571:13577   */\n      dup7\n        /* \"#utility.yul\":13542:13599   */\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13647:13656   */\n      dup3\n        /* \"#utility.yul\":13639:13645   */\n      dup2\n        /* \"#utility.yul\":13635:13657   */\n      sub\n        /* \"#utility.yul\":13630:13632   */\n      0x60\n        /* \"#utility.yul\":13619:13628   */\n      dup5\n        /* \"#utility.yul\":13615:13633   */\n      add\n        /* \"#utility.yul\":13608:13658   */\n      mstore\n        /* \"#utility.yul\":13681:13725   */\n      tag_336\n        /* \"#utility.yul\":13718:13724   */\n      dup2\n        /* \"#utility.yul\":13710:13716   */\n      dup7\n        /* \"#utility.yul\":13681:13725   */\n      tag_221\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13667:13725   */\n      swap1\n      pop\n        /* \"#utility.yul\":13774:13783   */\n      dup3\n        /* \"#utility.yul\":13766:13772   */\n      dup2\n        /* \"#utility.yul\":13762:13784   */\n      sub\n        /* \"#utility.yul\":13756:13759   */\n      0x80\n        /* \"#utility.yul\":13745:13754   */\n      dup5\n        /* \"#utility.yul\":13741:13760   */\n      add\n        /* \"#utility.yul\":13734:13785   */\n      mstore\n        /* \"#utility.yul\":13802:13835   */\n      tag_337\n        /* \"#utility.yul\":13828:13834   */\n      dup2\n        /* \"#utility.yul\":13820:13826   */\n      dup6\n        /* \"#utility.yul\":13802:13835   */\n      tag_216\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13794:13835   */\n      swap9\n        /* \"#utility.yul\":13014:13841   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13846:14095   */\n    tag_171:\n        /* \"#utility.yul\":13915:13921   */\n      0x00\n        /* \"#utility.yul\":13968:13970   */\n      0x20\n        /* \"#utility.yul\":13956:13965   */\n      dup3\n        /* \"#utility.yul\":13947:13954   */\n      dup5\n        /* \"#utility.yul\":13943:13966   */\n      sub\n        /* \"#utility.yul\":13939:13971   */\n      slt\n        /* \"#utility.yul\":13936:13988   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":13984:13985   */\n      0x00\n        /* \"#utility.yul\":13981:13982   */\n      dup1\n        /* \"#utility.yul\":13974:13986   */\n      revert\n        /* \"#utility.yul\":13936:13988   */\n    tag_339:\n        /* \"#utility.yul\":14016:14025   */\n      dup2\n        /* \"#utility.yul\":14010:14026   */\n      mload\n        /* \"#utility.yul\":14035:14065   */\n      tag_160\n        /* \"#utility.yul\":14059:14064   */\n      dup2\n        /* \"#utility.yul\":14035:14065   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":14100:14279   */\n    tag_177:\n        /* \"#utility.yul\":14135:14138   */\n      0x00\n        /* \"#utility.yul\":14177:14178   */\n      0x03\n        /* \"#utility.yul\":14159:14175   */\n      returndatasize\n        /* \"#utility.yul\":14156:14179   */\n      gt\n        /* \"#utility.yul\":14153:14273   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":14223:14224   */\n      0x04\n        /* \"#utility.yul\":14220:14221   */\n      0x00\n        /* \"#utility.yul\":14217:14218   */\n      dup1\n        /* \"#utility.yul\":14202:14225   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14260:14261   */\n      0x00\n        /* \"#utility.yul\":14254:14262   */\n      mload\n        /* \"#utility.yul\":14249:14252   */\n      0xe0\n        /* \"#utility.yul\":14245:14263   */\n      shr\n        /* \"#utility.yul\":14153:14273   */\n    tag_342:\n        /* \"#utility.yul\":14100:14279   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14284:14955   */\n    tag_179:\n        /* \"#utility.yul\":14323:14326   */\n      0x00\n        /* \"#utility.yul\":14365:14369   */\n      0x44\n        /* \"#utility.yul\":14347:14363   */\n      returndatasize\n        /* \"#utility.yul\":14344:14370   */\n      lt\n        /* \"#utility.yul\":14341:14380   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14341:14380   */\n    tag_344:\n        /* \"#utility.yul\":14407:14409   */\n      0x40\n        /* \"#utility.yul\":14401:14410   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14472:14488   */\n      returndatasize\n        /* \"#utility.yul\":14468:14493   */\n      dup2\n      add\n        /* \"#utility.yul\":14465:14466   */\n      0x04\n        /* \"#utility.yul\":14401:14410   */\n      dup4\n        /* \"#utility.yul\":14444:14494   */\n      returndatacopy\n        /* \"#utility.yul\":14523:14527   */\n      dup2\n        /* \"#utility.yul\":14517:14528   */\n      mload\n        /* \"#utility.yul\":14547:14563   */\n      returndatasize\n        /* \"#utility.yul\":14582:14600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14653:14655   */\n      dup2\n        /* \"#utility.yul\":14646:14650   */\n      0x24\n        /* \"#utility.yul\":14638:14644   */\n      dup5\n        /* \"#utility.yul\":14634:14651   */\n      add\n        /* \"#utility.yul\":14631:14656   */\n      gt\n        /* \"#utility.yul\":14626:14628   */\n      dup2\n        /* \"#utility.yul\":14618:14624   */\n      dup5\n        /* \"#utility.yul\":14615:14629   */\n      gt\n        /* \"#utility.yul\":14612:14657   */\n      or\n        /* \"#utility.yul\":14609:14667   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14660:14665   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14609:14667   */\n    tag_345:\n        /* \"#utility.yul\":14697:14703   */\n      dup3\n        /* \"#utility.yul\":14691:14695   */\n      dup6\n        /* \"#utility.yul\":14687:14704   */\n      add\n        /* \"#utility.yul\":14676:14704   */\n      swap2\n      pop\n        /* \"#utility.yul\":14733:14736   */\n      dup2\n        /* \"#utility.yul\":14727:14737   */\n      mload\n        /* \"#utility.yul\":14760:14762   */\n      dup2\n        /* \"#utility.yul\":14752:14758   */\n      dup2\n        /* \"#utility.yul\":14749:14763   */\n      gt\n        /* \"#utility.yul\":14746:14773   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14766:14771   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14746:14773   */\n    tag_346:\n        /* \"#utility.yul\":14850:14852   */\n      dup5\n        /* \"#utility.yul\":14831:14847   */\n      returndatasize\n        /* \"#utility.yul\":14825:14829   */\n      dup8\n        /* \"#utility.yul\":14821:14848   */\n      add\n        /* \"#utility.yul\":14817:14853   */\n      add\n        /* \"#utility.yul\":14810:14814   */\n      0x20\n        /* \"#utility.yul\":14801:14807   */\n      dup3\n        /* \"#utility.yul\":14796:14799   */\n      dup6\n        /* \"#utility.yul\":14792:14808   */\n      add\n        /* \"#utility.yul\":14788:14815   */\n      add\n        /* \"#utility.yul\":14785:14854   */\n      gt\n        /* \"#utility.yul\":14782:14864   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14857:14862   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14782:14864   */\n    tag_347:\n        /* \"#utility.yul\":14873:14930   */\n      tag_348\n        /* \"#utility.yul\":14924:14928   */\n      0x20\n        /* \"#utility.yul\":14915:14921   */\n      dup3\n        /* \"#utility.yul\":14907:14913   */\n      dup7\n        /* \"#utility.yul\":14903:14922   */\n      add\n        /* \"#utility.yul\":14899:14929   */\n      add\n        /* \"#utility.yul\":14893:14897   */\n      dup8\n        /* \"#utility.yul\":14873:14930   */\n      tag_217\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":14946:14949   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14284:14955   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15381:15785   */\n    tag_187:\n        /* \"#utility.yul\":15583:15585   */\n      0x20\n        /* \"#utility.yul\":15565:15586   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15622:15624   */\n      0x28\n        /* \"#utility.yul\":15602:15620   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15595:15625   */\n      mstore\n        /* \"#utility.yul\":15661:15695   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15656:15658   */\n      0x40\n        /* \"#utility.yul\":15641:15659   */\n      dup3\n      add\n        /* \"#utility.yul\":15634:15696   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15727:15729   */\n      0x60\n        /* \"#utility.yul\":15712:15730   */\n      dup3\n      add\n        /* \"#utility.yul\":15705:15743   */\n      mstore\n        /* \"#utility.yul\":15775:15778   */\n      0x80\n        /* \"#utility.yul\":15760:15779   */\n      add\n      swap1\n        /* \"#utility.yul\":15381:15785   */\n      jump\t// out\n        /* \"#utility.yul\":15790:16351   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16087:16102   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16069:16103   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16139:16154   */\n      dup6\n      and\n        /* \"#utility.yul\":16134:16136   */\n      0x20\n        /* \"#utility.yul\":16119:16137   */\n      dup3\n      add\n        /* \"#utility.yul\":16112:16155   */\n      mstore\n        /* \"#utility.yul\":16186:16188   */\n      0x40\n        /* \"#utility.yul\":16171:16189   */\n      dup2\n      add\n        /* \"#utility.yul\":16164:16198   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16229:16231   */\n      0x60\n        /* \"#utility.yul\":16214:16232   */\n      dup2\n      add\n        /* \"#utility.yul\":16207:16241   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16049:16052   */\n      0xa0\n        /* \"#utility.yul\":16272:16275   */\n      0x80\n        /* \"#utility.yul\":16257:16276   */\n      dup3\n      add\n        /* \"#utility.yul\":16250:16282   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16012:16016   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16299:16345   */\n      tag_352\n      swap1\n        /* \"#utility.yul\":16325:16344   */\n      dup4\n      add\n        /* \"#utility.yul\":16317:16323   */\n      dup5\n        /* \"#utility.yul\":16299:16345   */\n      tag_216\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16291:16345   */\n      swap8\n        /* \"#utility.yul\":15790:16351   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n\n    auxdata: 0xa2646970667358221220d7e8271e015493a35587588199bceaf3d04c15d0fe819816ce34ccf7f469c20264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_registerInterface_87": {
									"entryPoint": 124,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 256,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4136:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:951:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:1"
															},
															"nodeType": "YulIf",
															"src": "268:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:1"
															},
															"nodeType": "YulIf",
															"src": "405:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:1"
															},
															"nodeType": "YulIf",
															"src": "489:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:1"
															},
															"nodeType": "YulIf",
															"src": "581:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:1"
															},
															"nodeType": "YulIf",
															"src": "764:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:1"
															},
															"nodeType": "YulIf",
															"src": "903:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:1",
																"statements": []
															},
															"src": "984:129:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1145:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1133:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1176:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "146:1042:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1414:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1407:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1457:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1468:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1453:18:1"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1473:30:1",
																		"type": "",
																		"value": "ERC165: invalid interface id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1446:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1513:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1513:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1193:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1615:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1632:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1646:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1676:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1650:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1723:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1739:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1725:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1703:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:26:1"
															},
															"nodeType": "YulIf",
															"src": "1693:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1813:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1841:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1846:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1878:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1871:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1871:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1899:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1899:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1769:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1800:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1789:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1766:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:38:1"
															},
															"nodeType": "YulIf",
															"src": "1763:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1585:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1594:6:1",
														"type": ""
													}
												],
												"src": "1550:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2011:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2032:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1974:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1982:4:1",
														"type": ""
													}
												],
												"src": "1935:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2142:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2175:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2189:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2199:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2193:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2220:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2224:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2213:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2213:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2213:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2243:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2265:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2269:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2255:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2255:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2247:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2287:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2310:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2320:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2327:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2339:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2323:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2323:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2316:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2316:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2306:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2306:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2291:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2381:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2383:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2398:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2383:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2363:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2360:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2360:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2357:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2417:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2431:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2441:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2448:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2453:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2444:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2444:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2437:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2437:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2427:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2421:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2471:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2484:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2475:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2569:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2578:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2585:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2571:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2571:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2571:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2519:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2526:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2516:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2516:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2530:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2532:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2545:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2552:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2541:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2541:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2532:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2512:3:1",
																			"statements": []
																		},
																		"src": "2508:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2158:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2155:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:11:1"
															},
															"nodeType": "YulIf",
															"src": "2152:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2114:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2121:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2126:10:1",
														"type": ""
													}
												],
												"src": "2061:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2696:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2706:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2721:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2739:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2742:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2735:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2735:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2752:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2748:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2731:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2731:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2727:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2727:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2717:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2763:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2766:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2714:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2673:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2679:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2687:4:1",
														"type": ""
													}
												],
												"src": "2611:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2888:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2908:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2902:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2892:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2955:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2957:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2957:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2957:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2927:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2943:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2947:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2939:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2939:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:30:1"
															},
															"nodeType": "YulIf",
															"src": "2921:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3030:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3068:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3062:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3062:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3036:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2986:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2986:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3092:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3109:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3096:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3119:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3138:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3123:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3151:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3164:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3151:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3221:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3235:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3254:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3266:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3262:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3262:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3250:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3250:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3239:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3283:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3327:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3297:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3297:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3287:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3345:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3354:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3349:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3432:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3457:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3475:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3480:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3471:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3471:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3465:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3465:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3450:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3450:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3450:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3509:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3523:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3531:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3519:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3519:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3509:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3550:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3567:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3578:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3563:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3563:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3550:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3379:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3382:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3376:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3376:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3391:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3393:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3402:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3405:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3398:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3398:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3393:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3372:3:1",
																					"statements": []
																				},
																				"src": "3368:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3652:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3670:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3697:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3702:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3693:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3693:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3687:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3687:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3674:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3737:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3749:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3776:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3779:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3772:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3772:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3788:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3768:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3768:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3798:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3794:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3794:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3764:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3764:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3760:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3760:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3745:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3745:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3730:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3730:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3730:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3623:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3632:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3620:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3620:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3617:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3838:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3852:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3855:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3848:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3848:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3864:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3844:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3844:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3831:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3831:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3831:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3214:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3219:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3894:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3908:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3912:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3957:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3975:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3994:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3999:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3990:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3990:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3984:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3984:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3975:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3938:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3935:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4044:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4103:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4110:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4050:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4050:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4037:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4037:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4037:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3886:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3202:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3184:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2863:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2869:3:1",
														"type": ""
													}
												],
												"src": "2782:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200178338038062001783833981016040819052620000349162000128565b620000466301ffc9a760e01b6200007c565b620000518162000100565b62000063636cdb3d1360e11b6200007c565b620000756303a24d0760e21b6200007c565b5062000358565b6001600160e01b03198082169003620000db5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60036200010e82826200028c565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b818501915085601f8301126200016957600080fd5b8151818111156200017e576200017e62000112565b604051601f8201601f19908116603f01168101908382118183101715620001a957620001a962000112565b816040528281528886848701011115620001c257600080fd5b600093505b82841015620001e65784840186015181850187015292850192620001c7565b600086848301015280965050505050505092915050565b600181811c908216806200021257607f821691505b6020821081036200023357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028757600081815260208120601f850160051c81016020861015620002625750805b601f850160051c820191505b8181101562000283578281556001016200026e565b5050505b505050565b81516001600160401b03811115620002a857620002a862000112565b620002c081620002b98454620001fd565b8462000239565b602080601f831160018114620002f85760008415620002df5750858301515b600019600386901b1c1916600185901b17855562000283565b600085815260208120601f198616915b82811015620003295788860151825594840194600190910190840162000308565b5085821015620003485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61141b80620003686000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610124578063a22cb46514610144578063e985e9c514610157578063f242432a1461019357600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100ef5780632eb2c2d61461010f575b600080fd5b61009f61009a366004610c40565b6101a6565b6040519081526020015b60405180910390f35b6100df6100c0366004610c83565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020016100a9565b6101026100fd366004610ca0565b610242565b6040516100a99190610cff565b61012261011d366004610e5e565b6102d6565b005b610137610132366004610f08565b61056a565b6040516100a9919061100e565b610122610152366004611021565b610694565b6100df61016536600461105d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6101226101a1366004611090565b61076a565b60006001600160a01b0383166102175760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b606060038054610251906110f5565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906110f5565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b50505050509050919050565b81518351146103385760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161020e565b6001600160a01b03841661035e5760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b03851633148061037a575061037a8533610165565b6103e15760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161020e565b3360005b84518110156104fc57600085828151811061040257610402611174565b60200260200101519050600085838151811061042057610420611174565b6020026020010151905061048d816040518060600160405280602a81526020016113bc602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205461091d9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546104c49082610954565b60009283526001602090815260408085206001600160a01b038c16865290915290922091909155506104f5816111a0565b90506103e5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161054c9291906111b9565b60405180910390a46105628187878787876109ba565b505050505050565b606081518351146105cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161020e565b6000835167ffffffffffffffff8111156105eb576105eb610d12565b604051908082528060200260200182016040528015610614578160200160208202803683370190505b50905060005b845181101561068c5761065f85828151811061063857610638611174565b602002602001015185838151811061065257610652611174565b60200260200101516101a6565b82828151811061067157610671611174565b6020908102919091010152610685816111a0565b905061061a565b509392505050565b6001600160a01b03821633036106fe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161020e565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0384166107905760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b0385163314806107ac57506107ac8533610165565b61080a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161020e565b3361082a81878761081a88610b1e565b61082388610b1e565b5050505050565b610871836040518060600160405280602a81526020016113bc602a913960008781526001602090815260408083206001600160a01b038d168452909152902054919061091d565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546108a89084610954565b60008581526001602090815260408083206001600160a01b038a811680865291845293829020949094558051888152918201879052898316928516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610562818787878787610b69565b600081848411156109415760405162461bcd60e51b815260040161020e9190610cff565b5061094c83856111e7565b949350505050565b60008061096183856111fa565b9050838110156109b35760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161020e565b9392505050565b6001600160a01b0384163b156105625760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109fe908990899088908890889060040161120d565b6020604051808303816000875af1925050508015610a39575060408051601f3d908101601f19168201909252610a369181019061126b565b60015b610ae557610a45611288565b806308c379a003610a7e5750610a596112a4565b80610a645750610a80565b8060405162461bcd60e51b815260040161020e9190610cff565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161020e565b6001600160e01b0319811663bc197c8160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b5857610b58611174565b602090810291909101015292915050565b6001600160a01b0384163b156105625760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bad9089908990889088908890600401611376565b6020604051808303816000875af1925050508015610be8575060408051601f3d908101601f19168201909252610be59181019061126b565b60015b610bf457610a45611288565b6001600160e01b0319811663f23a6e6160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b80356001600160a01b0381168114610c3b57600080fd5b919050565b60008060408385031215610c5357600080fd5b610c5c83610c24565b946020939093013593505050565b6001600160e01b031981168114610c8057600080fd5b50565b600060208284031215610c9557600080fd5b81356109b381610c6a565b600060208284031215610cb257600080fd5b5035919050565b6000815180845260005b81811015610cdf57602081850181015186830182015201610cc3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109b36020830184610cb9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610d4e57610d4e610d12565b6040525050565b600067ffffffffffffffff821115610d6f57610d6f610d12565b5060051b60200190565b600082601f830112610d8a57600080fd5b81356020610d9782610d55565b604051610da48282610d28565b83815260059390931b8501820192828101915086841115610dc457600080fd5b8286015b84811015610ddf5780358352918301918301610dc8565b509695505050505050565b600082601f830112610dfb57600080fd5b813567ffffffffffffffff811115610e1557610e15610d12565b604051610e2c601f8301601f191660200182610d28565b818152846020838601011115610e4157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e7657600080fd5b610e7f86610c24565b9450610e8d60208701610c24565b9350604086013567ffffffffffffffff80821115610eaa57600080fd5b610eb689838a01610d79565b94506060880135915080821115610ecc57600080fd5b610ed889838a01610d79565b93506080880135915080821115610eee57600080fd5b50610efb88828901610dea565b9150509295509295909350565b60008060408385031215610f1b57600080fd5b823567ffffffffffffffff80821115610f3357600080fd5b818501915085601f830112610f4757600080fd5b81356020610f5482610d55565b604051610f618282610d28565b83815260059390931b8501820192828101915089841115610f8157600080fd5b948201945b83861015610fa657610f9786610c24565b82529482019490820190610f86565b96505086013592505080821115610fbc57600080fd5b50610fc985828601610d79565b9150509250929050565b600081518084526020808501945080840160005b8381101561100357815187529582019590820190600101610fe7565b509495945050505050565b6020815260006109b36020830184610fd3565b6000806040838503121561103457600080fd5b61103d83610c24565b91506020830135801515811461105257600080fd5b809150509250929050565b6000806040838503121561107057600080fd5b61107983610c24565b915061108760208401610c24565b90509250929050565b600080600080600060a086880312156110a857600080fd5b6110b186610c24565b94506110bf60208701610c24565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110e957600080fd5b610efb88828901610dea565b600181811c9082168061110957607f821691505b60208210810361112957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016111b2576111b261118a565b5060010190565b6040815260006111cc6040830185610fd3565b82810360208401526111de8185610fd3565b95945050505050565b8181038181111561023c5761023c61118a565b8082018082111561023c5761023c61118a565b6001600160a01b0386811682528516602082015260a06040820181905260009061123990830186610fd3565b828103606084015261124b8186610fd3565b9050828103608084015261125f8185610cb9565b98975050505050505050565b60006020828403121561127d57600080fd5b81516109b381610c6a565b600060033d11156112a15760046000803e5060005160e01c5b90565b600060443d10156112b25790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112e257505050505090565b82850191508151818111156112fa5750505050505090565b843d87010160208285010111156113145750505050505090565b61132360208286010187610d28565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113b090830184610cb9565b97965050505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a2646970667358221220d7e8271e015493a35587588199bceaf3d04c15d0fe819816ce34ccf7f469c20264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1783 CODESIZE SUB DUP1 PUSH3 0x1783 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x128 JUMP JUMPDEST PUSH3 0x46 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x7C JUMP JUMPDEST PUSH3 0x51 DUP2 PUSH3 0x100 JUMP JUMPDEST PUSH3 0x63 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x7C JUMP JUMPDEST PUSH3 0x75 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x7C JUMP JUMPDEST POP PUSH3 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP1 SUB PUSH3 0xDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH3 0x10E DUP3 DUP3 PUSH3 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1A9 JUMPI PUSH3 0x1A9 PUSH3 0x112 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1E6 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1C7 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x212 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x233 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x287 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x262 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x283 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x26E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2A8 JUMPI PUSH3 0x2A8 PUSH3 0x112 JUMP JUMPDEST PUSH3 0x2C0 DUP2 PUSH3 0x2B9 DUP5 SLOAD PUSH3 0x1FD JUMP JUMPDEST DUP5 PUSH3 0x239 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2DF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x283 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x329 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x308 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x348 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x141B DUP1 PUSH3 0x368 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x122 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27D SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x37A JUMPI POP PUSH2 0x37A DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x91D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C4 SWAP1 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x4F5 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x54C SWAP3 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x614 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH2 0x65F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x671 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH2 0x7AC DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH2 0x82A DUP2 DUP8 DUP8 PUSH2 0x81A DUP9 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x823 DUP9 PUSH2 0xB1E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x871 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8A8 SWAP1 DUP5 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP PUSH2 0x94C DUP4 DUP6 PUSH2 0x11E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 DUP4 DUP6 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA39 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA36 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA7E JUMPI POP PUSH2 0xA59 PUSH2 0x12A4 JUMP JUMPDEST DUP1 PUSH2 0xA64 JUMPI POP PUSH2 0xA80 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF4 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCC3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD97 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDDF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDC8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE15 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8D PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB6 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED8 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF54 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF61 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xF97 DUP7 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFE7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 PUSH1 0x20 DUP5 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B1 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0x10BF PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1109 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x118A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DE DUP2 DUP6 PUSH2 0xFD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1239 SWAP1 DUP4 ADD DUP7 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x124B DUP2 DUP7 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x125F DUP2 DUP6 PUSH2 0xCB9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E2 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12FA JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1314 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xD28 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xE8 0x27 0x1E ADD SLOAD SWAP4 LOG3 SSTORE DUP8 PC DUP2 SWAP10 0xBC 0xEA RETURN 0xD0 0x4C ISZERO 0xD0 INVALID DUP2 SWAP9 AND 0xCE CALLVALUE 0xCC 0xF7 DELEGATECALL PUSH10 0xC20264736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "11144:14091:0:-:0;;;12632:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2474:40;-1:-1:-1;;;2474:18:0;:40::i;:::-;12676:13;12684:4;12676:7;:13::i;:::-;12781:41;-1:-1:-1;;;12781:18:0;:41::i;:::-;12925:54;-1:-1:-1;;;12925:18:0;:54::i;:::-;12632:355;11144:14091;;3236:201;-1:-1:-1;;;;;;3320:25:0;;;;;3312:66;;;;-1:-1:-1;;;3312:66:0;;1395:2:1;3312:66:0;;;1377:21:1;1434:2;1414:18;;;1407:30;1473;1453:18;;;1446:58;1521:18;;3312:66:0;;;;;;;;-1:-1:-1;;;;;;3389:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;3389:40:0;3425:4;3389:40;;;3236:201::o;18363:88::-;18430:4;:13;18437:6;18430:4;:13;:::i;:::-;;18363:88;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:1;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:1;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1550:380::-;1629:1;1625:12;;;;1672;;;1693:61;;1747:4;1739:6;1735:17;1725:27;;1693:61;1800:2;1792:6;1789:14;1769:18;1766:38;1763:161;;1846:10;1841:3;1837:20;1834:1;1827:31;1881:4;1878:1;1871:15;1909:4;1906:1;1899:15;1763:161;;1550:380;;;:::o;2061:545::-;2163:2;2158:3;2155:11;2152:448;;;2199:1;2224:5;2220:2;2213:17;2269:4;2265:2;2255:19;2339:2;2327:10;2323:19;2320:1;2316:27;2310:4;2306:38;2375:4;2363:10;2360:20;2357:47;;;-1:-1:-1;2398:4:1;2357:47;2453:2;2448:3;2444:12;2441:1;2437:20;2431:4;2427:31;2417:41;;2508:82;2526:2;2519:5;2516:13;2508:82;;;2571:17;;;2552:1;2541:13;2508:82;;;2512:3;;;2152:448;2061:545;;;:::o;2782:1352::-;2902:10;;-1:-1:-1;;;;;2924:30:1;;2921:56;;;2957:18;;:::i;:::-;2986:97;3076:6;3036:38;3068:4;3062:11;3036:38;:::i;:::-;3030:4;2986:97;:::i;:::-;3138:4;;3202:2;3191:14;;3219:1;3214:663;;;;3921:1;3938:6;3935:89;;;-1:-1:-1;3990:19:1;;;3984:26;3935:89;-1:-1:-1;;2739:1:1;2735:11;;;2731:24;2727:29;2717:40;2763:1;2759:11;;;2714:57;4037:81;;3184:944;;3214:663;2008:1;2001:14;;;2045:4;2032:18;;-1:-1:-1;;3250:20:1;;;3368:236;3382:7;3379:1;3376:14;3368:236;;;3471:19;;;3465:26;3450:42;;3563:27;;;;3531:1;3519:14;;;;3398:19;;3368:236;;;3372:3;3632:6;3623:7;3620:19;3617:201;;;3693:19;;;3687:26;-1:-1:-1;;3776:1:1;3772:14;;;3788:3;3768:24;3764:37;3760:42;3745:58;3730:74;;3617:201;-1:-1:-1;;;;;3864:1:1;3848:14;;;3844:22;3831:36;;-1:-1:-1;2782:1352:1:o;:::-;11144:14091:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1409": {
									"entryPoint": 2846,
									"id": 1409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1249": {
									"entryPoint": null,
									"id": 1249,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1381": {
									"entryPoint": 2490,
									"id": 1381,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1314": {
									"entryPoint": 2921,
									"id": 1314,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_1628": {
									"entryPoint": 2388,
									"id": 1628,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfBatch_569": {
									"entryPoint": 1386,
									"id": 569,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_505": {
									"entryPoint": 422,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_865": {
									"entryPoint": 726,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_727": {
									"entryPoint": 1898,
									"id": 727,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_603": {
									"entryPoint": 1684,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1752": {
									"entryPoint": 2333,
									"id": 1752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_477": {
									"entryPoint": 578,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16353:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:33:1"
															},
															"nodeType": "YulIf",
															"src": "4119:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4191:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4239:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4286:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4290:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4341:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4351:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4345:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4384:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4381:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:14:1"
															},
															"nodeType": "YulIf",
															"src": "4378:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4421:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4484:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4431:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4505:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4574:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4561:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:16:1"
															},
															"nodeType": "YulIf",
															"src": "4558:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4668:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4613:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4685:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4701:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4689:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4772:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4749:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4759:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4746:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:16:1"
															},
															"nodeType": "YulIf",
															"src": "4743:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4788:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4830:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4841:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4798:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4090:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4098:6:1",
														"type": ""
													}
												],
												"src": "3912:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:32:1"
															},
															"nodeType": "YulIf",
															"src": "5007:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5095:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5124:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5118:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:14:1"
															},
															"nodeType": "YulIf",
															"src": "5151:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5253:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5257:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulIf",
															"src": "5235:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5322:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5309:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5303:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5357:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5367:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5361:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5419:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5423:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5479:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5451:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5491:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5502:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5495:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5532:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5544:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5555:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5575:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5597:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5605:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5614:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5579:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5649:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5640:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:19:1"
															},
															"nodeType": "YulIf",
															"src": "5626:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5674:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5693:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5678:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5761:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5782:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5806:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5787:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5787:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5824:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5840:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5831:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5713:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5729:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5731:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5747:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5731:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5709:3:1",
																"statements": []
															},
															"src": "5705:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5862:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5872:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5887:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5931:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5891:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5966:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5950:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5960:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:16:1"
															},
															"nodeType": "YulIf",
															"src": "5944:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5989:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6043:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6054:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5999:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4955:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4966:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4986:6:1",
														"type": ""
													}
												],
												"src": "4860:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6164:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6276:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6283:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6295:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6304:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6299:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6363:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6395:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6389:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6389:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6448:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6458:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6336:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6347:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6343:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6318:3:1",
																"statements": []
															},
															"src": "6314:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6499:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6111:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6118:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6126:3:1",
														"type": ""
													}
												],
												"src": "6073:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6664:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6712:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6655:4:1",
														"type": ""
													}
												],
												"src": "6513:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6921:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6884:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:32:1"
															},
															"nodeType": "YulIf",
															"src": "6873:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6944:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6995:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6986:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7082:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7070:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7063:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7063:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7056:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:40:1"
															},
															"nodeType": "YulIf",
															"src": "7036:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7115:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6832:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6852:6:1",
														"type": ""
													}
												],
												"src": "6779:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7218:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:32:1"
															},
															"nodeType": "YulIf",
															"src": "7228:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7299:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7347:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7176:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7187:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7199:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7207:6:1",
														"type": ""
													}
												],
												"src": "7131:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:33:1"
															},
															"nodeType": "YulIf",
															"src": "7553:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7625:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7663:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7673:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7771:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7781:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7822:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7864:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7826:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7912:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:30:1"
															},
															"nodeType": "YulIf",
															"src": "7878:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7964:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7988:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7947:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7516:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7524:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7532:6:1",
														"type": ""
													}
												],
												"src": "7396:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8287:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:1"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8381:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8393:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8404:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8389:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8389:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8381:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8158:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8172:4:1",
														"type": ""
													}
												],
												"src": "8007:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8474:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8484:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8501:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8484:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8515:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8545:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8541:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8519:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8592:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8594:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8608:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8616:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8604:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8604:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8594:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8572:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:26:1"
															},
															"nodeType": "YulIf",
															"src": "8562:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8710:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8715:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8706:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8706:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8696:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8696:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8747:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8750:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8740:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8740:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8740:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8778:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8768:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8638:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8661:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8658:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:38:1"
															},
															"nodeType": "YulIf",
															"src": "8632:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8454:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8463:6:1",
														"type": ""
													}
												],
												"src": "8419:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8978:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8988:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9018:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9079:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9084:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9139:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9150:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9135:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9155:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9187:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8955:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8969:4:1",
														"type": ""
													}
												],
												"src": "8804:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9387:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9397:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9454:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9488:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9493:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9466:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9559:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9544:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9564:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9537:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9581:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9604:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9581:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9364:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9378:4:1",
														"type": ""
													}
												],
												"src": "9213:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9793:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9810:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9803:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9860:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9833:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9894:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9879:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9899:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9872:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9872:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9965:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9950:18:1"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9970:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9943:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9943:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10000:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10012:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10023:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10008:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10000:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9770:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9784:4:1",
														"type": ""
													}
												],
												"src": "9619:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10070:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10094:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10099:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10090:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10151:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10038:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10202:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10226:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10231:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10222:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10212:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10259:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10262:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10252:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10276:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10276:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10170:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10349:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10380:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10382:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10382:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10382:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10365:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:17:1"
															},
															"nodeType": "YulIf",
															"src": "10359:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10411:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10422:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10429:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10331:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10341:3:1",
														"type": ""
													}
												],
												"src": "10302:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10671:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10688:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10699:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10711:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10754:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10725:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10715:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10801:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10821:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10829:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10849:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10886:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10894:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10857:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10857:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10849:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10632:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10643:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10651:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10662:4:1",
														"type": ""
													}
												],
												"src": "10442:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11086:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11096:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11096:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11133:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11126:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11126:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11172:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11165:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11165:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11258:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11243:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11263:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11236:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11236:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11284:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11296:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11307:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11063:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11077:4:1",
														"type": ""
													}
												],
												"src": "10912:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11496:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11558:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11563:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11536:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11597:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11582:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11602:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11575:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11668:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11653:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11673:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11646:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11694:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11717:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11694:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11487:4:1",
														"type": ""
													}
												],
												"src": "11322:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11906:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11968:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11953:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11973:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11946:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12007:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11992:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12012:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12078:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12063:18:1"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12083:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12056:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12056:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12104:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12127:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12112:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12104:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11883:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11897:4:1",
														"type": ""
													}
												],
												"src": "11732:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12271:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12281:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12293:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12304:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12281:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12323:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12334:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12316:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12316:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12372:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12357:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12377:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12350:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12232:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12243:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12251:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12262:4:1",
														"type": ""
													}
												],
												"src": "12142:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12444:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12454:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12466:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12469:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12462:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12454:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12495:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12497:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12497:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12497:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12486:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12492:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12483:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:11:1"
															},
															"nodeType": "YulIf",
															"src": "12480:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12426:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12429:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12435:4:1",
														"type": ""
													}
												],
												"src": "12395:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12576:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12586:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12597:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12600:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12586:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12625:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12627:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12627:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12627:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12617:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12620:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12614:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:10:1"
															},
															"nodeType": "YulIf",
															"src": "12611:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12559:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12562:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12568:3:1",
														"type": ""
													}
												],
												"src": "12528:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12832:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12842:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12894:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12879:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12899:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12872:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12933:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12938:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12911:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12911:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12977:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12989:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13000:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12985:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12977:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12809:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12823:4:1",
														"type": ""
													}
												],
												"src": "12658:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13345:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13355:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13373:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13378:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13369:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13382:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13365:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13359:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13400:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13415:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13423:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13411:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13393:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13393:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13458:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13443:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13467:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13475:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13463:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13436:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13436:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13510:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13495:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13488:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13488:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13528:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13594:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13579:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13542:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13532:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13639:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13647:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13635:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13667:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13710:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13718:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13681:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13681:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13671:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13756:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13741:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13766:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13774:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13762:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13734:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13734:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13794:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13820:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13828:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13802:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13794:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13282:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13293:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13301:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13309:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13317:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13325:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13336:4:1",
														"type": ""
													}
												],
												"src": "13014:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13926:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13972:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13981:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13984:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13974:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13974:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13974:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13947:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13956:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13968:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13939:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13939:32:1"
															},
															"nodeType": "YulIf",
															"src": "13936:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13997:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14016:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14010:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14010:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14001:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14059:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14035:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14035:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14084:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14074:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13915:6:1",
														"type": ""
													}
												],
												"src": "13846:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14143:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14188:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14217:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14220:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14202:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14202:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14202:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14238:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14249:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14260:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14254:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14254:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14245:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14245:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14238:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14159:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14177:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14156:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14156:23:1"
															},
															"nodeType": "YulIf",
															"src": "14153:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14135:3:1",
														"type": ""
													}
												],
												"src": "14100:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14331:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14371:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14373:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14347:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14365:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14344:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:26:1"
															},
															"nodeType": "YulIf",
															"src": "14341:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14389:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14401:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14401:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14393:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14419:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14433:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14423:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14459:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14465:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14472:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14472:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14490:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14468:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14444:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14444:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14444:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14503:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14523:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14517:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14507:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14537:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14547:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14547:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14541:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14572:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14582:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14576:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14658:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14660:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14618:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14626:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14615:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14615:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14638:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14646:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14634:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14634:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14653:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14631:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14612:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14612:45:1"
															},
															"nodeType": "YulIf",
															"src": "14609:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14676:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14691:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14697:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14680:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14713:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14733:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14727:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14727:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14717:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14764:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14766:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14752:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14760:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14749:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14749:14:1"
															},
															"nodeType": "YulIf",
															"src": "14746:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14855:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14857:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14796:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14801:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14792:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14792:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14810:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14788:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14825:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14831:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14831:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14821:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14821:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14850:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14817:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14785:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14785:69:1"
															},
															"nodeType": "YulIf",
															"src": "14782:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14893:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14907:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14915:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14903:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14903:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14924:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14899:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14873:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14873:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14873:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14939:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14946:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14939:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14323:3:1",
														"type": ""
													}
												],
												"src": "14284:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15134:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15144:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15144:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15196:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15181:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15174:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15174:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15224:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15235:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15220:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15240:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15213:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15213:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15295:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15306:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15291:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15311:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15284:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15284:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15343:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15366:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15351:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15343:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15111:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15125:4:1",
														"type": ""
													}
												],
												"src": "14960:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15555:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15572:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15583:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15565:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15606:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15617:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15602:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15622:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15595:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15656:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15661:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15634:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15634:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15727:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15712:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15732:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15705:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15705:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15752:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15764:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15775:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15760:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15752:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15532:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15546:4:1",
														"type": ""
													}
												],
												"src": "15381:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16021:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16031:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16049:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16054:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16045:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16058:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16041:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16035:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16076:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16091:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16099:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16087:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16069:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16069:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16134:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16119:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16143:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16151:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16139:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16112:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16112:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16171:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16164:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16164:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16229:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16214:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16234:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16207:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16207:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16272:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16257:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16278:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16250:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16250:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16291:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16317:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16329:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16340:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16325:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16299:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16291:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15958:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15969:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15977:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15985:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15993:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16012:4:1",
														"type": ""
													}
												],
												"src": "15790:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x122 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27D SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x37A JUMPI POP PUSH2 0x37A DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x91D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C4 SWAP1 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x4F5 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x54C SWAP3 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x614 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH2 0x65F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x671 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH2 0x7AC DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH2 0x82A DUP2 DUP8 DUP8 PUSH2 0x81A DUP9 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x823 DUP9 PUSH2 0xB1E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x871 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8A8 SWAP1 DUP5 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP PUSH2 0x94C DUP4 DUP6 PUSH2 0x11E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 DUP4 DUP6 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA39 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA36 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA7E JUMPI POP PUSH2 0xA59 PUSH2 0x12A4 JUMP JUMPDEST DUP1 PUSH2 0xA64 JUMPI POP PUSH2 0xA80 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF4 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCC3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD97 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDDF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDC8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE15 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8D PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB6 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED8 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF54 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF61 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xF97 DUP7 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFE7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 PUSH1 0x20 DUP5 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B1 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0x10BF PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1109 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x118A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DE DUP2 DUP6 PUSH2 0xFD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1239 SWAP1 DUP4 ADD DUP7 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x124B DUP2 DUP7 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x125F DUP2 DUP6 PUSH2 0xCB9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E2 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12FA JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1314 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xD28 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xE8 0x27 0x1E ADD SLOAD SWAP4 LOG3 SSTORE DUP8 PC DUP2 SWAP10 0xBC 0xEA RETURN 0xD0 0x4C ISZERO 0xD0 INVALID DUP2 SWAP9 AND 0xCE CALLVALUE 0xCC 0xF7 DELEGATECALL PUSH10 0xC20264736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "11144:14091:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13656:231;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;13656:231:0;;;;;;;;2679:150;;;;;;:::i;:::-;-1:-1:-1;;;;;;2788:33:0;2764:4;2788:33;;;;;;;;;;;;;;2679:150;;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;2679:150:0;1019:187:1;13398:107:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16299:1220::-;;;;;;:::i;:::-;;:::i;:::-;;14053:549;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14675:311::-;;;;;;:::i;:::-;;:::i;15058:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15181:27:0;;;15157:4;15181:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;15058:168;15298:924;;;;;;:::i;:::-;;:::i;13656:231::-;13742:7;-1:-1:-1;;;;;13770:21:0;;13762:77;;;;-1:-1:-1;;;13762:77:0;;8209:2:1;13762:77:0;;;8191:21:1;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:1;;;8331:41;8389:19;;13762:77:0;;;;;;;;;-1:-1:-1;13857:13:0;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;13857:22:0;;;;;;;;;;13656:231;;;;;:::o;13398:107::-;13460:13;13493:4;13486:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13398:107;;;:::o;16299:1220::-;16564:7;:14;16550:3;:10;:28;16542:81;;;;-1:-1:-1;;;16542:81:0;;9006:2:1;16542:81:0;;;8988:21:1;9045:2;9025:18;;;9018:30;9084:34;9064:18;;;9057:62;-1:-1:-1;;;9135:18:1;;;9128:38;9183:19;;16542:81:0;8804:404:1;16542:81:0;-1:-1:-1;;;;;16642:16:0;;16634:66;;;;-1:-1:-1;;;16634:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;16733:20:0;;1697:10;16733:20;;:60;;-1:-1:-1;16757:36:0;16774:4;1697:10;15058:168;:::i;16757:36::-;16711:160;;;;-1:-1:-1;;;16711:160:0;;9821:2:1;16711:160:0;;;9803:21:1;9860:2;9840:18;;;9833:30;9899:34;9879:18;;;9872:62;-1:-1:-1;;;9950:18:1;;;9943:48;10008:19;;16711:160:0;9619:414:1;16711:160:0;1697:10;16884:16;17001:358;17025:3;:10;17021:1;:14;17001:358;;;17057:10;17070:3;17074:1;17070:6;;;;;;;;:::i;:::-;;;;;;;17057:19;;17091:14;17108:7;17116:1;17108:10;;;;;;;;:::i;:::-;;;;;;;17091:27;;17157:126;17199:6;17157:126;;;;;;;;;;;;;;;;;:9;:13;17167:2;17157:13;;;;;;;;;;;:19;17171:4;-1:-1:-1;;;;;17157:19:0;-1:-1:-1;;;;;17157:19:0;;;;;;;;;;;;;:23;;:126;;;;;:::i;:::-;17135:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17135:19:0;;;;;;;;;;:148;;;;17318:17;;;;;;:29;;17340:6;17318:21;:29::i;:::-;17298:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17298:17:0;;;;;;;;;;:49;;;;-1:-1:-1;17037:3:0;;;:::i;:::-;;;17001:358;;;;17406:2;-1:-1:-1;;;;;17376:47:0;17400:4;-1:-1:-1;;;;;17376:47:0;17390:8;-1:-1:-1;;;;;17376:47:0;;17410:3;17415:7;17376:47;;;;;;;:::i;:::-;;;;;;;;17436:75;17472:8;17482:4;17488:2;17492:3;17497:7;17506:4;17436:35;:75::i;:::-;16531:988;16299:1220;;;;;:::o;14053:549::-;14234:16;14295:3;:10;14276:8;:15;:29;14268:83;;;;-1:-1:-1;;;14268:83:0;;11114:2:1;14268:83:0;;;11096:21:1;11153:2;11133:18;;;11126:30;11192:34;11172:18;;;11165:62;-1:-1:-1;;;11243:18:1;;;11236:39;11292:19;;14268:83:0;10912:405:1;14268:83:0;14364:30;14411:8;:15;14397:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14397:30:0;;14364:63;;14445:9;14440:122;14464:8;:15;14460:1;:19;14440:122;;;14520:30;14530:8;14539:1;14530:11;;;;;;;;:::i;:::-;;;;;;;14543:3;14547:1;14543:6;;;;;;;;:::i;:::-;;;;;;;14520:9;:30::i;:::-;14501:13;14515:1;14501:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;14481:3;;;:::i;:::-;;;14440:122;;;-1:-1:-1;14581:13:0;14053:549;-1:-1:-1;;;14053:549:0:o;14675:311::-;-1:-1:-1;;;;;14778:24:0;;1697:10;14778:24;14770:78;;;;-1:-1:-1;;;14770:78:0;;11524:2:1;14770:78:0;;;11506:21:1;11563:2;11543:18;;;11536:30;11602:34;11582:18;;;11575:62;-1:-1:-1;;;11653:18:1;;;11646:39;11702:19;;14770:78:0;11322:405:1;14770:78:0;1697:10;14861:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;14861:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;14861:53:0;;;;;;;;;;14930:48;;1159:41:1;;;14861:42:0;;1697:10;14930:48;;1132:18:1;14930:48:0;;;;;;;14675:311;;:::o;15298:924::-;-1:-1:-1;;;;;15524:16:0;;15516:66;;;;-1:-1:-1;;;15516:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15615:20:0;;1697:10;15615:20;;:60;;-1:-1:-1;15639:36:0;15656:4;1697:10;15058:168;:::i;15639:36::-;15593:151;;;;-1:-1:-1;;;15593:151:0;;11934:2:1;15593:151:0;;;11916:21:1;11973:2;11953:18;;;11946:30;12012:34;11992:18;;;11985:62;-1:-1:-1;;;12063:18:1;;;12056:39;12112:19;;15593:151:0;11732:405:1;15593:151:0;1697:10;15801:96;1697:10;15832:4;15838:2;15842:21;15860:2;15842:17;:21::i;:::-;15865:25;15883:6;15865:17;:25::i;:::-;16299:1220;;;;;;15801:96;15932:77;15956:6;15932:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15932:19:0;;;;;;;;;;;:77;:23;:77::i;:::-;15910:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15910:19:0;;;;;;;;;;:99;;;;16040:17;;;;;;:29;;16062:6;16040:21;:29::i;:::-;16020:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;16020:17:0;;;;;;;;;;;;;:49;;;;16087:46;;12316:25:1;;;12357:18;;;12350:34;;;16087:46:0;;;;;;;;;12289:18:1;16087:46:0;;;;;;;16146:68;16177:8;16187:4;16193:2;16197;16201:6;16209:4;16146:30;:68::i;33328:166::-;33414:7;33450:12;33442:6;;;;33434:29;;;;-1:-1:-1;;;33434:29:0;;;;;;;;:::i;:::-;-1:-1:-1;33481:5:0;33485:1;33481;:5;:::i;:::-;33474:12;33328:166;-1:-1:-1;;;;33328:166:0:o;30501:179::-;30559:7;;30591:5;30595:1;30591;:5;:::i;:::-;30579:17;;30620:1;30615;:6;;30607:46;;;;-1:-1:-1;;;30607:46:0;;12860:2:1;30607:46:0;;;12842:21:1;12899:2;12879:18;;;12872:30;12938:29;12918:18;;;12911:57;12985:18;;30607:46:0;12658:351:1;30607:46:0;30671:1;30501:179;-1:-1:-1;;;30501:179:0:o;24227:799::-;-1:-1:-1;;;;;24481:13:0;;36216:20;36255:8;24477:542;;24517:79;;-1:-1:-1;;;24517:79:0;;-1:-1:-1;;;;;24517:43:0;;;;;:79;;24561:8;;24571:4;;24577:3;;24582:7;;24591:4;;24517:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24517:79:0;;;;;;;;-1:-1:-1;;24517:79:0;;;;;;;;;;;;:::i;:::-;;;24513:495;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;24881:6;24874:14;;-1:-1:-1;;;24874:14:0;;;;;;;;:::i;24513:495::-;;;24930:62;;-1:-1:-1;;;24930:62:0;;15162:2:1;24930:62:0;;;15144:21:1;15201:2;15181:18;;;15174:30;15240:34;15220:18;;;15213:62;-1:-1:-1;;;15291:18:1;;;15284:50;15351:19;;24930:62:0;14960:416:1;24513:495:0;-1:-1:-1;;;;;;24646:64:0;;-1:-1:-1;;;24646:64:0;24642:163;;24735:50;;-1:-1:-1;;;24735:50:0;;;;;;;:::i;24642:163::-;24597:223;24227:799;;;;;;:::o;25034:198::-;25154:16;;;25168:1;25154:16;;;;;;;;;25100;;25129:22;;25154:16;;;;;;;;;;;;-1:-1:-1;25154:16:0;25129:41;;25192:7;25181:5;25187:1;25181:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;25219:5;25034:198;-1:-1:-1;;25034:198:0:o;23457:762::-;-1:-1:-1;;;;;23686:13:0;;36216:20;36255:8;23682:530;;23722:72;;-1:-1:-1;;;23722:72:0;;-1:-1:-1;;;;;23722:38:0;;;;;:72;;23761:8;;23771:4;;23777:2;;23781:6;;23789:4;;23722:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23722:72:0;;;;;;;;-1:-1:-1;;23722:72:0;;;;;;;;;;;;:::i;:::-;;;23718:483;;;;:::i;:::-;-1:-1:-1;;;;;;23844:59:0;;-1:-1:-1;;;23844:59:0;23840:158;;23928:50;;-1:-1:-1;;;23928:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:1;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:1;;5903:32;;-1:-1:-1;;5947:16:1;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:1;;6073:435;-1:-1:-1;;;;;6073:435:1:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8419:380::-;8498:1;8494:12;;;;8541;;;8562:61;;8616:4;8608:6;8604:17;8594:27;;8562:61;8669:2;8661:6;8658:14;8638:18;8635:38;8632:161;;8715:10;8710:3;8706:20;8703:1;8696:31;8750:4;8747:1;8740:15;8778:4;8775:1;8768:15;8632:161;;8419:380;;;:::o;9213:401::-;9415:2;9397:21;;;9454:2;9434:18;;;9427:30;9493:34;9488:2;9473:18;;9466:62;-1:-1:-1;;;9559:2:1;9544:18;;9537:35;9604:3;9589:19;;9213:401::o;10038:127::-;10099:10;10094:3;10090:20;10087:1;10080:31;10130:4;10127:1;10120:15;10154:4;10151:1;10144:15;10170:127;10231:10;10226:3;10222:20;10219:1;10212:31;10262:4;10259:1;10252:15;10286:4;10283:1;10276:15;10302:135;10341:3;10362:17;;;10359:43;;10382:18;;:::i;:::-;-1:-1:-1;10429:1:1;10418:13;;10302:135::o;10442:465::-;10699:2;10688:9;10681:21;10662:4;10725:56;10777:2;10766:9;10762:18;10754:6;10725:56;:::i;:::-;10829:9;10821:6;10817:22;10812:2;10801:9;10797:18;10790:50;10857:44;10894:6;10886;10857:44;:::i;:::-;10849:52;10442:465;-1:-1:-1;;;;;10442:465:1:o;12395:128::-;12462:9;;;12483:11;;;12480:37;;;12497:18;;:::i;12528:125::-;12593:9;;;12614:10;;;12611:36;;;12627:18;;:::i;13014:827::-;-1:-1:-1;;;;;13411:15:1;;;13393:34;;13463:15;;13458:2;13443:18;;13436:43;13373:3;13510:2;13495:18;;13488:31;;;13336:4;;13542:57;;13579:19;;13571:6;13542:57;:::i;:::-;13647:9;13639:6;13635:22;13630:2;13619:9;13615:18;13608:50;13681:44;13718:6;13710;13681:44;:::i;:::-;13667:58;;13774:9;13766:6;13762:22;13756:3;13745:9;13741:19;13734:51;13802:33;13828:6;13820;13802:33;:::i;:::-;13794:41;13014:827;-1:-1:-1;;;;;;;;13014:827:1:o;13846:249::-;13915:6;13968:2;13956:9;13947:7;13943:23;13939:32;13936:52;;;13984:1;13981;13974:12;13936:52;14016:9;14010:16;14035:30;14059:5;14035:30;:::i;14100:179::-;14135:3;14177:1;14159:16;14156:23;14153:120;;;14223:1;14220;14217;14202:23;-1:-1:-1;14260:1:1;14254:8;14249:3;14245:18;14153:120;14100:179;:::o;14284:671::-;14323:3;14365:4;14347:16;14344:26;14341:39;;;14284:671;:::o;14341:39::-;14407:2;14401:9;-1:-1:-1;;14472:16:1;14468:25;;14465:1;14401:9;14444:50;14523:4;14517:11;14547:16;14582:18;14653:2;14646:4;14638:6;14634:17;14631:25;14626:2;14618:6;14615:14;14612:45;14609:58;;;14660:5;;;;;14284:671;:::o;14609:58::-;14697:6;14691:4;14687:17;14676:28;;14733:3;14727:10;14760:2;14752:6;14749:14;14746:27;;;14766:5;;;;;;14284:671;:::o;14746:27::-;14850:2;14831:16;14825:4;14821:27;14817:36;14810:4;14801:6;14796:3;14792:16;14788:27;14785:69;14782:82;;;14857:5;;;;;;14284:671;:::o;14782:82::-;14873:57;14924:4;14915:6;14907;14903:19;14899:30;14893:4;14873:57;:::i;:::-;-1:-1:-1;14946:3:1;;14284:671;-1:-1:-1;;;;;14284:671:1:o;15381:404::-;15583:2;15565:21;;;15622:2;15602:18;;;15595:30;15661:34;15656:2;15641:18;;15634:62;-1:-1:-1;;;15727:2:1;15712:18;;15705:38;15775:3;15760:19;;15381:404::o;15790:561::-;-1:-1:-1;;;;;16087:15:1;;;16069:34;;16139:15;;16134:2;16119:18;;16112:43;16186:2;16171:18;;16164:34;;;16229:2;16214:18;;16207:34;;;16049:3;16272;16257:19;;16250:32;;;16012:4;;16299:46;;16325:19;;16317:6;16299:46;:::i;:::-;16291:54;15790:561;-1:-1:-1;;;;;;;15790:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1029400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2680",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "2575",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12632,
									"end": 12987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2474,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2474,
									"end": 2492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2474,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2474,
									"end": 2514,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2474,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12676,
									"end": 12689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12684,
									"end": 12688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12676,
									"end": 12683,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12676,
									"end": 12689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12676,
									"end": 12689,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12676,
									"end": 12689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12781,
									"end": 12822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12781,
									"end": 12799,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12781,
									"end": 12822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12781,
									"end": 12822,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12781,
									"end": 12822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12925,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12925,
									"end": 12943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12925,
									"end": 12979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12925,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12925,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12632,
									"end": 12987,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3437,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3236,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3320,
									"end": 3345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3320,
									"end": 3345,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3320,
									"end": 3345,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3320,
									"end": 3345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3320,
									"end": 3345,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1395,
									"end": 1397,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1377,
									"end": 1398,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH",
									"source": 1,
									"value": "1C"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1437,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1521,
									"end": 1539,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3312,
									"end": 3378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3422,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3425,
									"end": 3429,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3389,
									"end": 3429,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3236,
									"end": 3437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18363,
									"end": 18451,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18363,
									"end": 18451,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18434,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18430,
									"end": 18443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18437,
									"end": 18443,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18434,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18430,
									"end": 18443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18443,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18430,
									"end": 18443,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18443,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18363,
									"end": 18451,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18363,
									"end": 18451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1751,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1752,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1752,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1769,
									"end": 1787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1804,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1856,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1841,
									"end": 1844,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1835,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1827,
									"end": 1858,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1881,
									"end": 1885,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1878,
									"end": 1879,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1871,
									"end": 1886,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1906,
									"end": 1907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2165,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2158,
									"end": 2161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2166,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2199,
									"end": 2200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2222,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2269,
									"end": 2273,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2265,
									"end": 2267,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2341,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2327,
									"end": 2337,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2321,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2316,
									"end": 2343,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2306,
									"end": 2344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2363,
									"end": 2373,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2380,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2398,
									"end": 2402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2453,
									"end": 2455,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2448,
									"end": 2451,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2456,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2442,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2437,
									"end": 2457,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2458,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2526,
									"end": 2528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2519,
									"end": 2524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2529,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2553,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2541,
									"end": 2554,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2902,
									"end": 2912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2902,
									"end": 2912,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2924,
									"end": 2954,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2954,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2957,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3076,
									"end": 3082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3068,
									"end": 3072,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3073,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3036,
									"end": 3074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3030,
									"end": 3034,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2986,
									"end": 3083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3138,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3138,
									"end": 3142,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3202,
									"end": 3204,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3191,
									"end": 3205,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3191,
									"end": 3205,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3219,
									"end": 3220,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3921,
									"end": 3922,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3938,
									"end": 3944,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2739,
									"end": 2740,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2755,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2727,
									"end": 2756,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2717,
									"end": 2757,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 2771,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4118,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4118,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3184,
									"end": 4128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3184,
									"end": 4128,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2045,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2050,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3390,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3465,
									"end": 3491,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3450,
									"end": 3492,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3450,
									"end": 3492,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3531,
									"end": 3532,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3417,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3372,
									"end": 3375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3638,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3623,
									"end": 3630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3620,
									"end": 3639,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3687,
									"end": 3713,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3776,
									"end": 3777,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3788,
									"end": 3791,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3801,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3802,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3745,
									"end": 3803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3804,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3864,
									"end": 3865,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3844,
									"end": 3866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3867,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2782,
									"end": 4134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11144,
									"end": 25235,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d7e8271e015493a35587588199bceaf3d04c15d0fe819816ce34ccf7f469c20264736f6c63430008130033",
									".code": [
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11144,
											"end": 25235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13656,
											"end": 13887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13656,
											"end": 13887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13398,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13398,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13398,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16299,
											"end": 17519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16299,
											"end": 17519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14053,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14053,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14053,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14675,
											"end": 14986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14675,
											"end": 14986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15058,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15208,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15181,
											"end": 15218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15298,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15298,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13770,
											"end": 13791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13770,
											"end": 13791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13762,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13460,
											"end": 13473,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13486,
											"end": 13497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13486,
											"end": 13497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16564,
											"end": 16571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16564,
											"end": 16578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9128,
											"end": 9166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9183,
											"end": 9202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8804,
											"end": 9208,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16542,
											"end": 16623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16642,
											"end": 16658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16642,
											"end": 16658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16634,
											"end": 16700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16634,
											"end": 16700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16733,
											"end": 16753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16733,
											"end": 16793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16757,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16774,
											"end": 16778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15058,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16793,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16757,
											"end": 16793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9860,
											"end": 9862,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 9933,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10027,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10008,
											"end": 10027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9619,
											"end": 10033,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16711,
											"end": 16871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17028,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17073,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17070,
											"end": 17076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17108,
											"end": 17118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17199,
											"end": 17205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17169,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17171,
											"end": 17175,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17157,
											"end": 17180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17157,
											"end": 17283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17283,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17318,
											"end": 17347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17340,
											"end": 17346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17318,
											"end": 17347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17347,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17318,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17298,
											"end": 17347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17037,
											"end": 17040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17001,
											"end": 17359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17406,
											"end": 17408,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17400,
											"end": 17404,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 17398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 17410,
											"end": 17413,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17415,
											"end": 17422,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17376,
											"end": 17423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17423,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17472,
											"end": 17480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17482,
											"end": 17486,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17488,
											"end": 17490,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17492,
											"end": 17495,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17504,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17510,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17436,
											"end": 17511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17436,
											"end": 17511,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17436,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14234,
											"end": 14250,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14295,
											"end": 14298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14295,
											"end": 14305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11226,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11292,
											"end": 11311,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11292,
											"end": 11311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10912,
											"end": 11317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14268,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14411,
											"end": 14419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14411,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14397,
											"end": 14427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14460,
											"end": 14479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14530,
											"end": 14538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14530,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14546,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14543,
											"end": 14549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14520,
											"end": 14550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14520,
											"end": 14550,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14520,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14515,
											"end": 14516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14501,
											"end": 14517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14481,
											"end": 14484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14440,
											"end": 14562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14581,
											"end": 14594,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14053,
											"end": 14602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14778,
											"end": 14802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14778,
											"end": 14802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14778,
											"end": 14802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11636,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11322,
											"end": 11727,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14770,
											"end": 14848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14879,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14675,
											"end": 14986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15298,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15524,
											"end": 15540,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15516,
											"end": 15582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15516,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15615,
											"end": 15675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15639,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15058,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15058,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15675,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15639,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11934,
											"end": 11936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11973,
											"end": 11975,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11946,
											"end": 11976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12046,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12112,
											"end": 12131,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12112,
											"end": 12131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11732,
											"end": 12137,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15593,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15801,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15836,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15840,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15860,
											"end": 15862,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15842,
											"end": 15863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15863,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15842,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15883,
											"end": 15889,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15865,
											"end": 15890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15890,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15865,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 17519,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15801,
											"end": 15897,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 15801,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15956,
											"end": 15962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15941,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15932,
											"end": 16009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15932,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15919,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15923,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 16009,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 16009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 16009,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 16009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16040,
											"end": 16069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16062,
											"end": 16068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16040,
											"end": 16069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16040,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16069,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16069,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16069,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16133,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16177,
											"end": 16185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16187,
											"end": 16191,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16195,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16199,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16207,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16209,
											"end": 16213,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16146,
											"end": 16214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33494,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33328,
											"end": 33494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33414,
											"end": 33421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33450,
											"end": 33462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33448,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33442,
											"end": 33448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 33434,
											"end": 33463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33434,
											"end": 33463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33481,
											"end": 33486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33485,
											"end": 33486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33481,
											"end": 33482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33481,
											"end": 33486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 33481,
											"end": 33486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33481,
											"end": 33486,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33481,
											"end": 33486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33486,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33328,
											"end": 33494,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33328,
											"end": 33494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30501,
											"end": 30680,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30501,
											"end": 30680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30559,
											"end": 30566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30559,
											"end": 30566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30591,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30595,
											"end": 30596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30591,
											"end": 30592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30591,
											"end": 30596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30591,
											"end": 30596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30591,
											"end": 30596,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30591,
											"end": 30596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30579,
											"end": 30596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30579,
											"end": 30596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30620,
											"end": 30621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12967,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12911,
											"end": 12968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12985,
											"end": 13003,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12985,
											"end": 13003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12658,
											"end": 13009,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30607,
											"end": 30653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30671,
											"end": 30672,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30501,
											"end": 30680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30501,
											"end": 30680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24481,
											"end": 24494,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24481,
											"end": 24494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36216,
											"end": 36236,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36255,
											"end": 36263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24477,
											"end": 25019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24477,
											"end": 25019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24560,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24560,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 24517,
											"end": 24560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24561,
											"end": 24569,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24561,
											"end": 24569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24571,
											"end": 24575,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24571,
											"end": 24575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24580,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24582,
											"end": 24589,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24582,
											"end": 24589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24591,
											"end": 24595,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24591,
											"end": 24595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24517,
											"end": 24596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24517,
											"end": 24596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24517,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24513,
											"end": 25008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24513,
											"end": 25008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24881,
											"end": 24887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24874,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24874,
											"end": 24888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15162,
											"end": 15164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15274,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15351,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15351,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24930,
											"end": 24992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14960,
											"end": 15376,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24513,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24646,
											"end": 24710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24646,
											"end": 24710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24646,
											"end": 24710,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24642,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 24642,
											"end": 24805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24735,
											"end": 24785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24642,
											"end": 24805,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 24642,
											"end": 24805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24597,
											"end": 24820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24227,
											"end": 25026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25034,
											"end": 25232,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25034,
											"end": 25232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25100,
											"end": 25116,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25100,
											"end": 25116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25129,
											"end": 25151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25129,
											"end": 25151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25154,
											"end": 25170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25129,
											"end": 25170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25129,
											"end": 25170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25192,
											"end": 25199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25187,
											"end": 25188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25181,
											"end": 25189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25181,
											"end": 25199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25034,
											"end": 25232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25034,
											"end": 25232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23457,
											"end": 24219,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23457,
											"end": 24219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36216,
											"end": 36236,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36255,
											"end": 36263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23682,
											"end": 24212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23682,
											"end": 24212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23722,
											"end": 23760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23760,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 23722,
											"end": 23760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23761,
											"end": 23769,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23761,
											"end": 23769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23775,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23771,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23777,
											"end": 23779,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23777,
											"end": 23779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23781,
											"end": 23787,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23781,
											"end": 23787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23789,
											"end": 23793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23789,
											"end": 23793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23722,
											"end": 23794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23722,
											"end": 23794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23722,
											"end": 23794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23718,
											"end": 24201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23718,
											"end": 24201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23844,
											"end": 23903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23844,
											"end": 23903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23844,
											"end": 23903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23840,
											"end": 23998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 23840,
											"end": 23998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23928,
											"end": 23978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4191,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4239,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4431,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4613,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4798,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5042,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5367,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5451,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5787,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6335,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6712,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6908,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6944,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7299,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7347,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7625,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7673,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7911,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7947,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8672,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8710,
											"end": 8713,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8740,
											"end": 8755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8782,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9614,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 9213,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 9488,
											"end": 9490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9607,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9589,
											"end": 9608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10165,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10038,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10094,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10127,
											"end": 10128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10158,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10297,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10170,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10226,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10437,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10302,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10359,
											"end": 10402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10382,
											"end": 10400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10681,
											"end": 10702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 10760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10725,
											"end": 10781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10894,
											"end": 10900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10857,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10901,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10442,
											"end": 10907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12523,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12395,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12497,
											"end": 12515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12528,
											"end": 12653,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 12528,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12627,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13478,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13478,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13458,
											"end": 13460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13510,
											"end": 13512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13542,
											"end": 13599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13657,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13619,
											"end": 13628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 13718,
											"end": 13724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13716,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13681,
											"end": 13725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13774,
											"end": 13783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13766,
											"end": 13772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13762,
											"end": 13784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13759,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13741,
											"end": 13760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13820,
											"end": 13826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 13802,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13794,
											"end": 13835,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13014,
											"end": 13841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13846,
											"end": 14095,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 13846,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 13954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 13966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 13971,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 13982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 13986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14035,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14059,
											"end": 14064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14035,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14035,
											"end": 14065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14135,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14177,
											"end": 14178,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 14159,
											"end": 14175,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14179,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14223,
											"end": 14224,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14220,
											"end": 14221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14217,
											"end": 14218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14202,
											"end": 14225,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14260,
											"end": 14261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14249,
											"end": 14252,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14245,
											"end": 14263,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14365,
											"end": 14369,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14347,
											"end": 14363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14407,
											"end": 14409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14472,
											"end": 14488,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14465,
											"end": 14466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14494,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14517,
											"end": 14528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14563,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14653,
											"end": 14655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14650,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14638,
											"end": 14644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14634,
											"end": 14651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14631,
											"end": 14656,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14618,
											"end": 14624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14615,
											"end": 14629,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14612,
											"end": 14657,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14695,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14687,
											"end": 14704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14727,
											"end": 14737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14760,
											"end": 14762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14749,
											"end": 14763,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14850,
											"end": 14852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14831,
											"end": 14847,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14825,
											"end": 14829,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14796,
											"end": 14799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14792,
											"end": 14808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14788,
											"end": 14815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14785,
											"end": 14854,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14915,
											"end": 14921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14899,
											"end": 14929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14873,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15381,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15622,
											"end": 15624,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15695,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15656,
											"end": 15658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 15696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15727,
											"end": 15729,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15705,
											"end": 15743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15775,
											"end": 15778,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15760,
											"end": 15779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15760,
											"end": 15779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16069,
											"end": 16103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16069,
											"end": 16103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16171,
											"end": 16189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16231,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16052,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16299,
											"end": 16345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16291,
											"end": 16345,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15790,
											"end": 16351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572"
									}
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 432,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 438,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 440,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							}
						},
						"stateVariables": {
							"_supportedInterfaces": {
								"details": "Mapping of interface ids to whether or not it's supported."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_Available since v3.1._\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "_Available since v3.1._",
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 309,
								"contract": "TTT_ERC1155Token-Jason.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":28374:35164  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":28374:35164  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209eb7b80b5f015585fb0dd0586d91074a319c2f4c4d79ac73cc6d52027cc58fe264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209eb7b80b5f015585fb0dd0586d91074a319c2f4c4d79ac73cc6d52027cc58fe264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xB7 0xB8 SIGNEXTEND 0x5F ADD SSTORE DUP6 0xFB 0xD 0xD0 PC PUSH14 0x91074A319C2F4C4D79AC73CC6D52 MUL PUSH29 0xC58FE264736F6C63430008130033000000000000000000000000000000 ",
							"sourceMap": "28374:6790:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;28374:6790:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209eb7b80b5f015585fb0dd0586d91074a319c2f4c4d79ac73cc6d52027cc58fe264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xB7 0xB8 SIGNEXTEND 0x5F ADD SSTORE DUP6 0xFB 0xD 0xD0 PC PUSH14 0x91074A319C2F4C4D79AC73CC6D52 MUL PUSH29 0xC58FE264736F6C63430008130033000000000000000000000000000000 ",
							"sourceMap": "28374:6790:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28374,
									"end": 35164,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209eb7b80b5f015585fb0dd0586d91074a319c2f4c4d79ac73cc6d52027cc58fe264736f6c63430008130033",
									".code": [
										{
											"begin": 28374,
											"end": 35164,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28374,
											"end": 35164,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":7839:8701  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":7839:8701  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ae3794e7ad0520f6218e01f888b0747de76463d9093b40be478071edbf4581fc64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae3794e7ad0520f6218e01f888b0747de76463d9093b40be478071edbf4581fc64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE CALLDATACOPY SWAP5 0xE7 0xAD SDIV KECCAK256 0xF6 0x21 DUP15 ADD 0xF8 DUP9 0xB0 PUSH21 0x7DE76463D9093B40BE478071EDBF4581FC64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "7839:862:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7839:862:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae3794e7ad0520f6218e01f888b0747de76463d9093b40be478071edbf4581fc64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE CALLDATACOPY SWAP5 0xE7 0xAD SDIV KECCAK256 0xF6 0x21 DUP15 ADD 0xF8 DUP9 0xB0 PUSH21 0x7DE76463D9093B40BE478071EDBF4581FC64736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "7839:862:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7839,
									"end": 8701,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae3794e7ad0520f6218e01f888b0747de76463d9093b40be478071edbf4581fc64736f6c63430008130033",
									".code": [
										{
											"begin": 7839,
											"end": 8701,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 8701,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xc25c6665a4461186a05e79ce0187b63b4edbf4a4a3311c40d45c173a29cf1b33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2cc95fc5e49cb9392b77946c18619624bdc10b7987332ddebaac20a0e4df53d\",\"dweb:/ipfs/QmTs8pr8NiGBgb9xZcthni9VZ9iSeGmsryWxz96L9sjn5A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TTT_ERC1155Token-Jason.sol": {
				"ast": {
					"absolutePath": "TTT_ERC1155Token-Jason.sol",
					"exportedSymbols": {
						"Address": [
							2095
						],
						"Context": [
							35
						],
						"ERC1155": [
							1410
						],
						"ERC165": [
							88
						],
						"IERC1155": [
							207
						],
						"IERC1155MetadataURI": [
							219
						],
						"IERC1155Receiver": [
							1448
						],
						"IERC165": [
							11
						],
						"Ownable": [
							411
						],
						"SafeMath": [
							1801
						],
						"Strings": [
							304
						]
					},
					"id": 2096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "308:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "607:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "622:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "984:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1009:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1002:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:6:0"
									},
									"scope": 11,
									"src": "975:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2096,
							"src": "597:457:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "Context",
							"nameLocation": "1586:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "1671:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1697:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1701:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 16,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1689:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 15,
												"id": 21,
												"nodeType": "Return",
												"src": "1682:26:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1610:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:17:0"
									},
									"scope": 35,
									"src": "1601:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1789:168:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "1800:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$35",
														"typeString": "contract Context"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "1800:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 30,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1941:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1945:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1941:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 27,
												"id": 32,
												"nodeType": "Return",
												"src": "1934:15:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1733:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1775:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1775:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:14:0"
									},
									"scope": 35,
									"src": "1724:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2096,
							"src": "1568:392:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 36,
										"name": "IERC165",
										"nameLocations": [
											"1992:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1992:7:0"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88,
								11
							],
							"name": "ERC165",
							"nameLocation": "1982:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nameLocation": "2117:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "2093:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 38,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "2093:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783031666663396137",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2140:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2159:84:0",
										"text": " @dev Mapping of interface ids to whether or not it's supported."
									},
									"id": 45,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nameLocation": "2281:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "2249:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 42,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "2257:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "2249:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2267:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2325:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2493:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 48,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2474:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2474:40:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2322:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2325:0:0"
									},
									"scope": 88,
									"src": "2310:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2770:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 62,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "2788:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 64,
													"indexExpression": {
														"id": 63,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2809:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2788:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "2781:40:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2530:143:0",
										"text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2688:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2746:8:0"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2713:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2706:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 55,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:20:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:6:0"
									},
									"scope": 88,
									"src": "2679:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3301:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "3320:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30786666666666666666",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3335:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "3320:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3347:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3312:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "3312:66:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 80,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3389:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 82,
														"indexExpression": {
															"id": 81,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3410:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3389:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3425:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3389:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "3389:40:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2837:393:0",
										"text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nameLocation": "3245:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3271:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 69,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3301:0:0"
									},
									"scope": 88,
									"src": "3236:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2096,
							"src": "1964:1476:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 90,
										"name": "IERC165",
										"nameLocations": [
											"3640:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "3640:7:0"
									},
									"id": 91,
									"nodeType": "InheritanceSpecifier",
									"src": "3640:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "3446:170:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 207,
							"linearizedBaseContracts": [
								207,
								11
							],
							"name": "IERC1155",
							"nameLocation": "3628:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3655:123:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 104,
									"name": "TransferSingle",
									"nameLocation": "3790:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3805:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3869:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3853:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3881:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3873:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3893:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3885:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:95:0"
									},
									"src": "3784:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3908:147:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 119,
									"name": "TransferBatch",
									"nameLocation": "4067:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4097:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4081:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4123:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4107:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4145:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4129:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4149:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "4149:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4164:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 115,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 116,
													"nodeType": "ArrayTypeName",
													"src": "4164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4080:101:0"
									},
									"src": "4061:121:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "4190:150:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 128,
									"name": "ApprovalForAll",
									"nameLocation": "4352:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4367:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4408:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4392:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4423:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4418:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:66:0"
									},
									"src": "4346:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4441:349:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 135,
									"name": "URI",
									"nameLocation": "4802:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4806:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4820:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:34:0"
									},
									"src": "4796:44:0"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4848:179:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5042:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5077:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5069:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5051:29:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5103:9:0"
									},
									"scope": 207,
									"src": "5033:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5121:194:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "5330:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "5364:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5345:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 147,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5345:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 148,
													"nodeType": "ArrayTypeName",
													"src": "5345:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5393:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5374:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 150,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5374:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 151,
													"nodeType": "ArrayTypeName",
													"src": "5374:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5344:53:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5421:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5421:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 155,
													"nodeType": "ArrayTypeName",
													"src": "5421:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5420:18:0"
									},
									"scope": 207,
									"src": "5321:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5447:256:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5718:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5744:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5736:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5759:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5754:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5754:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5735:33:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5777:0:0"
									},
									"scope": 207,
									"src": "5709:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5786:139:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5940:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5974:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:35:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6015:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:6:0"
									},
									"scope": 207,
									"src": "5931:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "6029:571:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6615:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6640:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6632:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6654:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6646:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6666:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6658:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6701:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6686:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6686:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6631:75:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6715:0:0"
									},
									"scope": 207,
									"src": "6606:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "6724:400:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "7139:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7183:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7175:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7206:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7187:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 196,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 197,
													"nodeType": "ArrayTypeName",
													"src": "7187:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7230:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7211:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 199,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"nodeType": "ArrayTypeName",
													"src": "7211:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7254:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7239:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7160:99:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:0"
									},
									"scope": 207,
									"src": "7130:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2096,
							"src": "3618:3654:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 209,
										"name": "IERC1155",
										"nameLocations": [
											"7510:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "7510:8:0"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "7510:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 208,
								"nodeType": "StructuredDocumentation",
								"src": "7276:199:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219,
								207,
								11
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "7487:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "7526:197:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "7738:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7750:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7742:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:12:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7777:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7777:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7776:15:0"
									},
									"scope": 219,
									"src": "7729:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2096,
							"src": "7477:318:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "7801:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "Strings",
							"nameLocation": "7847:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "8023:675:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 228,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "8229:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8229:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "8225:53:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "8241:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8263:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 227,
															"id": 232,
															"nodeType": "Return",
															"src": "8256:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "8296:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8288:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"id": 237,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "8303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8288:20:0"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "8327:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8319:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"nodeType": "VariableDeclarationStatement",
												"src": "8319:14:0"
											},
											{
												"body": {
													"id": 252,
													"nodeType": "Block",
													"src": "8362:60:0",
													"statements": [
														{
															"expression": {
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8377:8:0",
																"subExpression": {
																	"id": 245,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "8377:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "8377:8:0"
														},
														{
															"expression": {
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 248,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8400:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8408:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "8400:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "8400:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 242,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8351:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8351:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "WhileStatement",
												"src": "8344:78:0"
											},
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "8445:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8432:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 254,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"id": 258,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8464:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8454:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 256,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8458:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8454:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8432:39:0"
											},
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "8490:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8482:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "digits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "8498:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8498:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8482:26:0"
											},
											{
												"expression": {
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 267,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8519:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 268,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "8526:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8519:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "8519:12:0"
											},
											{
												"body": {
													"id": 295,
													"nodeType": "Block",
													"src": "8560:99:0",
													"statements": [
														{
															"expression": {
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 274,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "8575:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 277,
																	"indexExpression": {
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "8582:7:0",
																		"subExpression": {
																			"id": 275,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 262,
																			"src": "8582:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8575:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8606:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 283,
																							"name": "temp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 236,
																							"src": "8611:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8618:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "8611:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8606:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8600:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 280,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8600:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8600:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8593:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 278,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "8593:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8593:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "8575:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 290,
															"nodeType": "ExpressionStatement",
															"src": "8575:47:0"
														},
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 291,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8637:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8645:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "8637:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "8637:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8549:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8557:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8549:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "WhileStatement",
												"src": "8542:117:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "8683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8676:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 297,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8676:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8676:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 301,
												"nodeType": "Return",
												"src": "8669:21:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7862:84:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` representation."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "7961:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "7970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:15:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "8008:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8008:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8007:15:0"
									},
									"scope": 304,
									"src": "7952:746:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2096,
							"src": "7839:862:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 306,
										"name": "Context",
										"nameLocations": [
											"9241:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "9241:7:0"
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "9241:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "8705:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 411,
							"linearizedBaseContracts": [
								411,
								35
							],
							"name": "Ownable",
							"nameLocation": "9230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "9272:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "9256:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 308,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9256:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 315,
									"name": "OwnershipTransferred",
									"nameLocation": "9293:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "9330:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "9314:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9361:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "9345:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9313:57:0"
									},
									"src": "9287:84:0"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "9493:139:0",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "9512:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "9504:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9504:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 321,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9524:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9504:32:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "9547:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9556:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9547:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "9547:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 333,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "9614:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "9581:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9581:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "EmitStatement",
												"src": "9576:48:0"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9379:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 337,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9490:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9493:0:0"
									},
									"scope": 411,
									"src": "9478:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "9768:32:0",
										"statements": [
											{
												"expression": {
													"id": 343,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "9786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 342,
												"id": 344,
												"nodeType": "Return",
												"src": "9779:13:0"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "9640:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "9722:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9727:2:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "9759:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9758:9:0"
									},
									"scope": 411,
									"src": "9713:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "9914:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 350,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "9933:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9933:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 352,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "9944:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9944:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9933:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9925:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "9925:68:0"
											},
											{
												"id": 358,
												"nodeType": "PlaceholderStatement",
												"src": "10004:1:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "9808:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 360,
									"name": "onlyOwner",
									"nameLocation": "9902:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9911:2:0"
									},
									"src": "9893:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "10418:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 367,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "10455:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10463:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10463:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 366,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "10434:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10434:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "10429:45:0"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "10485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10502:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10494:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10494:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10494:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10485:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "10485:19:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "10021:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 363,
												"name": "onlyOwner",
												"nameLocations": [
													"10408:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "10408:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10408:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "10373:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10390:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10418:0:0"
									},
									"scope": 411,
									"src": "10364:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "10737:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10756:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10776:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10768:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 392,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10768:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10768:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10756:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10780:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10748:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "10748:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 401,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "10858:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "10866:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "10837:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10837:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "EmitStatement",
												"src": "10832:43:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "10886:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 406,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "10895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10886:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "10886:17:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "10520:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyOwner",
												"nameLocations": [
													"10727:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "10727:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10727:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "10676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "10694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10693:18:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10737:0:0"
									},
									"scope": 411,
									"src": "10667:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2096,
							"src": "9212:1702:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"11164:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "11164:7:0"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "11164:7:0"
								},
								{
									"baseName": {
										"id": 415,
										"name": "ERC165",
										"nameLocations": [
											"11173:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 88,
										"src": "11173:6:0"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "11173:6:0"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC1155",
										"nameLocations": [
											"11181:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "11181:8:0"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "11181:8:0"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"11191:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "11191:19:0"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "11191:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "10918:224:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								219,
								207,
								88,
								11,
								35
							],
							"name": "ERC1155",
							"nameLocation": "11153:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 423,
									"libraryName": {
										"id": 421,
										"name": "SafeMath",
										"nameLocations": [
											"11224:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "11224:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11218:27:0",
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 426,
									"libraryName": {
										"id": 424,
										"name": "Address",
										"nameLocations": [
											"11257:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2095,
										"src": "11257:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11251:26:0",
									"typeName": {
										"id": 425,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11269:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11392:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11335:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 427,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11344:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11335:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 430,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11363:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11355:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 429,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11374:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "11515:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11461:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 437,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11470:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11461:45:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 436,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 434,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11489:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11481:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 435,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11500:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "11672:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11657:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 439,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11657:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 443,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155",
									"nameLocation": "12386:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "12362:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 441,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "12362:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 442,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12410:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 446,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nameLocation": "12530:34:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "12506:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 444,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "12506:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783065383933343163",
										"id": 445,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12567:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "12665:322:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 452,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "12676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12676:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "12676:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "12800:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 456,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "12781:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12781:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "12781:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "12944:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 460,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "12925:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12925:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12925:54:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "12586:40:0",
										"text": " @dev See {_setURI}."
									},
									"id": 465,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "12659:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "12645:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12644:20:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12665:0:0"
									},
									"scope": 1410,
									"src": "12632:355:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										218
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "13475:30:0",
										"statements": [
											{
												"expression": {
													"id": 474,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "13493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "13486:11:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "12995:397:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "13407:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13442:8:0"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "13411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13410:9:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "13460:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13460:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13459:15:0"
									},
									"scope": 1410,
									"src": "13398:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "13751:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "13770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13789:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13781:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13781:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13770:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13793:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13762:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13762:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "13857:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "13867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13857:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 502,
													"indexExpression": {
														"id": 501,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "13871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13857:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 503,
												"nodeType": "Return",
												"src": "13850:29:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "13513:137:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13665:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 484,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13724:8:0"
									},
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13674:29:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13741:9:0"
									},
									"scope": 1410,
									"src": "13656:231:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "14257:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 520,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "14276:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14285:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14276:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 522,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "14295:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14299:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14276:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14307:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14268:83:0"
											},
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "14381:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "14364:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 530,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14364:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 531,
															"nodeType": "ArrayTypeName",
															"src": "14364:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 536,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "14411:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14420:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14411:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14397:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 533,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14401:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 534,
															"nodeType": "ArrayTypeName",
															"src": "14401:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14397:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14364:63:0"
											},
											{
												"body": {
													"id": 564,
													"nodeType": "Block",
													"src": "14486:76:0",
													"statements": [
														{
															"expression": {
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 551,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "14501:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 553,
																	"indexExpression": {
																		"id": 552,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "14515:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14501:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 555,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "14530:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 557,
																			"indexExpression": {
																				"id": 556,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "14539:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14530:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 558,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "14543:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 560,
																			"indexExpression": {
																				"id": 559,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "14547:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14543:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 554,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "14520:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14520:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14501:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "14501:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 544,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14460:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 545,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "14464:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14473:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14464:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14460:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"initializationExpression": {
													"assignments": [
														541
													],
													"declarations": [
														{
															"constant": false,
															"id": 541,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14453:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 565,
															"src": "14445:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 540,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 543,
													"initialValue": {
														"hexValue": "30",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14457:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14445:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "14481:3:0",
														"subExpression": {
															"id": 548,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "14483:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 550,
													"nodeType": "ExpressionStatement",
													"src": "14481:3:0"
												},
												"nodeType": "ForStatement",
												"src": "14440:122:0"
											},
											{
												"expression": {
													"id": 566,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "14581:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 518,
												"id": 567,
												"nodeType": "Return",
												"src": "14574:20:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "13895:152:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "14062:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14207:8:0"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "14104:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14087:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 507,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14087:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 508,
													"nodeType": "ArrayTypeName",
													"src": "14087:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14140:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14123:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 510,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 511,
													"nodeType": "ArrayTypeName",
													"src": "14123:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14076:74:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14234:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "14234:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:18:0"
									},
									"scope": 1410,
									"src": "14053:549:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "14759:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 579,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14778:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14778:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 581,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "14794:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14778:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14804:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14770:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "14770:78:0"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 586,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "14861:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 590,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 587,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14880:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14880:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14861:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 591,
														"indexExpression": {
															"id": 589,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "14894:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14861:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "14906:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14861:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "14861:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 596,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "14945:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14945:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 598,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "14959:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 595,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "14930:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14930:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "14925:53:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "14610:59:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "14684:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14750:8:0"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14710:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "14702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "14725:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "14720:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14701:33:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14759:0:0"
									},
									"scope": 1410,
									"src": "14675:311:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "15163:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 614,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "15181:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 615,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "15200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15181:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 618,
													"indexExpression": {
														"id": 617,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "15209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15181:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 619,
												"nodeType": "Return",
												"src": "15174:44:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "14994:58:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "15067:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 610,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15139:8:0"
									},
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:35:0"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15157:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:6:0"
									},
									"scope": 1410,
									"src": "15058:168:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										190
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "15505:717:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "15524:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15538:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15530:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15524:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15542:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15516:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15516:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 647,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "15615:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 648,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "15623:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15623:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "15615:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "15656:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 653,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "15662:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15662:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 651,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "15639:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15639:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15615:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15690:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15593:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "15593:151:0"
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "15765:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "15757:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 660,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15757:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 662,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "15776:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15776:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15757:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 666,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "15822:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "15832:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "15838:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 670,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "15860:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 669,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "15842:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15842:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 673,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "15883:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 672,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "15865:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15865:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "15892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 665,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "15801:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15801:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "15801:96:0"
											},
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 678,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "15910:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 681,
															"indexExpression": {
																"id": 679,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "15920:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15910:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "15924:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15910:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "15956:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15964:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 683,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "15932:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 685,
																	"indexExpression": {
																		"id": 684,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "15942:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15932:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 686,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "15946:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15932:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15952:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1752,
															"src": "15932:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15932:77:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15910:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "15910:99:0"
											},
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 694,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "16020:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 697,
															"indexExpression": {
																"id": 695,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "16030:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16020:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 698,
														"indexExpression": {
															"id": 696,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16034:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16020:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "16062:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 699,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "16040:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 701,
																	"indexExpression": {
																		"id": 700,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "16050:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16040:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "16054:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16040:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16058:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1628,
															"src": "16040:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16040:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16020:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "16020:49:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 710,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "16102:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "16112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16118:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16122:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "16087:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16087:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "EmitStatement",
												"src": "16082:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "16177:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "16187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16193:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16197:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 722,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16201:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "16209:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 717,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "16146:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16146:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "16146:68:0"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "15234:58:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15307:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 634,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15491:8:0"
									},
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15342:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15334:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15365:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15357:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15386:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15378:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15407:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15437:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15424:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15424:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15323:125:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15505:0:0"
									},
									"scope": 1410,
									"src": "15298:924:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										206
									],
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "16531:988:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 745,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "16550:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16554:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16550:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 747,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "16564:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16572:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16564:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16550:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16580:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16542:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16542:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "16642:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16656:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16648:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16648:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16648:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16642:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16660:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16634:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "16634:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "16733:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 765,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "16741:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16741:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "16733:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 769,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "16774:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 770,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "16780:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16780:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 768,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "16757:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16757:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16733:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16808:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16711:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "16711:160:0"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "16892:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "16884:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 777,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 779,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "16903:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16903:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16884:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "16949:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "16959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "16965:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "16969:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 787,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "16974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 788,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "16983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "16928:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16928:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "16928:60:0"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "17042:317:0",
													"statements": [
														{
															"assignments": [
																803
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 803,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "17065:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "17057:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 807,
															"initialValue": {
																"baseExpression": {
																	"id": 804,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "17070:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "17074:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17070:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17057:19:0"
														},
														{
															"assignments": [
																809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 809,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "17099:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "17091:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 808,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17091:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 813,
															"initialValue": {
																"baseExpression": {
																	"id": 810,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "17108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"id": 811,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "17116:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17108:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17091:27:0"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 814,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "17135:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 817,
																		"indexExpression": {
																			"id": 815,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "17145:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17135:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 818,
																	"indexExpression": {
																		"id": 816,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "17149:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17135:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 825,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "17199:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17224:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 819,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "17157:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 821,
																				"indexExpression": {
																					"id": 820,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "17167:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "17157:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 730,
																				"src": "17171:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17157:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17177:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1752,
																		"src": "17157:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17157:126:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17135:148:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "17135:148:0"
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 830,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "17298:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 833,
																		"indexExpression": {
																			"id": 831,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "17308:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17298:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 834,
																	"indexExpression": {
																		"id": 832,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "17312:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17298:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 841,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "17340:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 835,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "17318:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 837,
																				"indexExpression": {
																					"id": 836,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "17328:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "17318:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 839,
																			"indexExpression": {
																				"id": 838,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "17332:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17318:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17336:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1628,
																		"src": "17318:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17318:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17298:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "17298:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "17021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 796,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17025:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17029:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17025:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17021:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														792
													],
													"declarations": [
														{
															"constant": false,
															"id": 792,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17014:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "17006:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 791,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17006:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 794,
													"initialValue": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17018:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17006:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17037:3:0",
														"subExpression": {
															"id": 799,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "17039:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 801,
													"nodeType": "ExpressionStatement",
													"src": "17037:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17001:358:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "17390:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17400:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "17406:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17410:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "17376:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17376:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "17371:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "17472:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17482:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "17488:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17492:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "17506:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "17436:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17436:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "17436:75:0"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "16230:63:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "16308:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16517:8:0"
									},
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16348:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16340:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16371:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16363:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16401:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16384:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 734,
													"nodeType": "ArrayTypeName",
													"src": "16384:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16415:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "16415:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16463:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16450:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16329:145:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16531:0:0"
									},
									"scope": 1410,
									"src": "16299:1220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "18419:32:0",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "18430:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "18437:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18430:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "18430:13:0"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "17527:830:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "18372:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "18394:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "18380:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18379:22:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18419:0:0"
									},
									"scope": 1410,
									"src": "18363:88:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "18948:487:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "18967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18986:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18978:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18978:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18967:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18990:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18959:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "18959:67:0"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "19047:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "19039:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19039:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "19058:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19058:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19039:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19122:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19114:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19114:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "19153:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "19135:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19135:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "19176:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "19158:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19158:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "19185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "19083:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19083:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "19083:107:0"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "19203:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "19213:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19203:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19203:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 930,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19255:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 924,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "19228:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 926,
																	"indexExpression": {
																		"id": 925,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "19238:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19228:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 928,
																"indexExpression": {
																	"id": 927,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "19242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19228:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19251:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1628,
															"src": "19228:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19228:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19203:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "19203:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 935,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19293:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19303:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19303:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19303:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "19324:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "19328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "19278:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19278:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "EmitStatement",
												"src": "19273:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19397:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19389:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19389:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19389:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "19410:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 953,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "19414:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 954,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "19422:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 945,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "19348:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19348:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "19348:79:0"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "18459:387:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18861:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "18892:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18884:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18904:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18896:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18925:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18912:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18866:64:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18948:0:0"
									},
									"scope": 1410,
									"src": "18852:583:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "19907:607:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "19926:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19932:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19932:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19932:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19926:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19944:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19918:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "19918:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 983,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "19999:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20003:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 985,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "20013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20021:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "20013:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19999:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20029:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19991:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "19991:81:0"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "20101:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "20093:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20093:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "20112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20112:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20093:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20158:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20168:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20168:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20168:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20180:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20184:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1004,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "20198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 996,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "20137:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20137:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "20137:66:0"
											},
											{
												"body": {
													"id": 1040,
													"nodeType": "Block",
													"src": "20254:88:0",
													"statements": [
														{
															"expression": {
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1019,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "20269:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1024,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1020,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "20279:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1022,
																			"indexExpression": {
																				"id": 1021,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "20283:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20279:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20269:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1025,
																	"indexExpression": {
																		"id": 1023,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "20287:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20269:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1030,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "20308:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1034,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1031,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "20318:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1033,
																					"indexExpression": {
																						"id": 1032,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1009,
																						"src": "20322:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "20318:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "20308:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1036,
																			"indexExpression": {
																				"id": 1035,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "20326:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20308:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1026,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "20293:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1028,
																			"indexExpression": {
																				"id": 1027,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "20301:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20293:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20304:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1628,
																		"src": "20293:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20293:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20269:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "20269:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "20233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1013,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20237:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20241:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20237:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20233:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"initializationExpression": {
													"assignments": [
														1009
													],
													"declarations": [
														{
															"constant": false,
															"id": 1009,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20226:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1041,
															"src": "20221:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1008,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "20221:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1011,
													"initialValue": {
														"hexValue": "30",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20230:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20221:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "20249:3:0",
														"subExpression": {
															"id": 1016,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "20249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ExpressionStatement",
													"src": "20249:3:0"
												},
												"nodeType": "ForStatement",
												"src": "20216:126:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1043,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20373:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20383:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20383:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20395:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20399:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1050,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1042,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "20359:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20359:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "20354:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20461:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20471:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20471:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20471:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20483:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20487:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1061,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1062,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "20501:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1053,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "20425:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20425:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "20425:81:0"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "19443:342:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "19800:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19819:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19811:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "19840:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19823:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 962,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 963,
													"nodeType": "ArrayTypeName",
													"src": "19823:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "19862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19845:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 965,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 966,
													"nodeType": "ArrayTypeName",
													"src": "19845:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19884:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19871:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19871:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19810:79:0"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19907:0:0"
									},
									"scope": 1410,
									"src": "19791:723:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "20850:474:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "20869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20888:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20880:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20880:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20869:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20892:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20861:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "20861:69:0"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "20951:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "20943:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1086,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20943:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1088,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "20962:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20962:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20943:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "21008:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21035:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21027:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21027:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21027:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1099,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "21057:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1098,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "21039:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21039:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1102,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "21080:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1101,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "21062:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21062:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21089:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1091,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "20987:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20987:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "20987:105:0"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1107,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "21105:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1110,
															"indexExpression": {
																"id": 1108,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "21115:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21105:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1109,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21105:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "21171:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21192:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																},
																"value": "ERC1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1112,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "21130:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1114,
																	"indexExpression": {
																		"id": 1113,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "21140:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21130:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "21144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21130:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21153:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1752,
															"src": "21130:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21130:111:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21105:136:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "21105:136:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1124,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "21274:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21301:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21293:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21293:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21293:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "21305:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "21309:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "21259:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21259:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "EmitStatement",
												"src": "21254:62:0"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "20522:245:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "20782:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20796:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "20813:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20805:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20825:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20817:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20787:45:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20850:0:0"
									},
									"scope": 1410,
									"src": "20773:551:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "21629:619:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "21648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21667:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21659:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21659:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21659:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21648:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21671:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21640:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "21640:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1158,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "21728:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21732:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21728:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1160,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "21742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21750:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21742:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21728:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21758:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21720:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "21720:81:0"
											},
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "21822:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "21814:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21814:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1168,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "21833:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21833:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21814:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "21879:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "21889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21898:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21898:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1178,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "21910:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1179,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "21915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1171,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "21858:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21858:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "21858:69:0"
											},
											{
												"body": {
													"id": 1216,
													"nodeType": "Block",
													"src": "21978:187:0",
													"statements": [
														{
															"expression": {
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1194,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "21993:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1199,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1195,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "22003:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1197,
																			"indexExpression": {
																				"id": 1196,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "22007:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22003:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21993:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1200,
																	"indexExpression": {
																		"id": 1198,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "22011:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21993:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1209,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "22071:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1211,
																			"indexExpression": {
																				"id": 1210,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "22079:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22071:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22100:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1201,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "22022:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1205,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1202,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "22032:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1204,
																					"indexExpression": {
																						"id": 1203,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1184,
																						"src": "22036:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "22032:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "22022:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1207,
																			"indexExpression": {
																				"id": 1206,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "22040:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22022:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22049:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1752,
																		"src": "22022:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22022:131:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21993:160:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "21993:160:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "21957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1188,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "21961:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21965:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21961:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21957:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"initializationExpression": {
													"assignments": [
														1184
													],
													"declarations": [
														{
															"constant": false,
															"id": 1184,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21950:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1217,
															"src": "21945:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1183,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "21945:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1186,
													"initialValue": {
														"hexValue": "30",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21945:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21973:3:0",
														"subExpression": {
															"id": 1191,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "21973:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1193,
													"nodeType": "ExpressionStatement",
													"src": "21973:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21940:225:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1219,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "22196:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22223:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22215:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22215:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "22227:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1226,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "22232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1218,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "22182:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22182:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "EmitStatement",
												"src": "22177:63:0"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "21332:189:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "21536:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21555:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "21581:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21564:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1139,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1140,
													"nodeType": "ArrayTypeName",
													"src": "21564:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "21603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21586:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1142,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1143,
													"nodeType": "ArrayTypeName",
													"src": "21586:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21546:65:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21629:0:0"
									},
									"scope": 1410,
									"src": "21527:721:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "23446:3:0",
										"statements": []
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "22256:942:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "23213:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23252:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23244:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23271:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23302:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "23332:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23315:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1238,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1239,
													"nodeType": "ArrayTypeName",
													"src": "23315:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "23363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23346:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1241,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1242,
													"nodeType": "ArrayTypeName",
													"src": "23346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23394:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23381:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23233:172:0"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23446:0:0"
									},
									"scope": 1410,
									"src": "23204:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "23671:548:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1264,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "23686:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23689:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "23686:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23686:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "23682:530:0",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "23703:509:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1293,
																		"nodeType": "Block",
																		"src": "23821:192:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1280,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "23844:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1282,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "23873:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1281,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1448,
																									"src": "23856:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1283,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23856:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "23877:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1429,
																							"src": "23856:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "23895:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "23856:47:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "23844:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1292,
																				"nodeType": "IfStatement",
																				"src": "23840:158:0",
																				"trueBody": {
																					"id": 1291,
																					"nodeType": "Block",
																					"src": "23905:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1288,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "23935:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1287,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "23928:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1289,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23928:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1290,
																							"nodeType": "ExpressionStatement",
																							"src": "23928:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1294,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1279,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1278,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "23811:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1294,
																				"src": "23804:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1277,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "23804:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "23803:17:0"
																	},
																	"src": "23795:218:0"
																},
																{
																	"block": {
																		"id": 1302,
																		"nodeType": "Block",
																		"src": "24048:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1299,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1296,
																							"src": "24074:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1298,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24067:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24067:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1301,
																				"nodeType": "ExpressionStatement",
																				"src": "24067:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1303,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1297,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1296,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "24040:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1303,
																				"src": "24026:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1295,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "24026:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24025:22:0"
																	},
																	"src": "24014:83:0"
																},
																{
																	"block": {
																		"id": 1308,
																		"nodeType": "Block",
																		"src": "24104:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1305,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24130:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1304,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24123:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24123:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1307,
																				"nodeType": "ExpressionStatement",
																				"src": "24123:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1309,
																	"nodeType": "TryCatchClause",
																	"src": "24098:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1271,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "23761:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "23771:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "23777:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1274,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "23781:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1275,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "23789:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1268,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "23739:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1267,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "23722:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23722:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23743:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "23722:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23722:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1310,
															"nodeType": "TryStatement",
															"src": "23718:483:0"
														}
													]
												}
											}
										]
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "23466:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23515:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23507:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23565:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23557:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "23586:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23578:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23637:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23624:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23496:152:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23671:0:0"
									},
									"scope": 1410,
									"src": "23457:762:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "24466:560:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "24481:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24484:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "24481:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24481:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "24477:542:0",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "24498:521:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1360,
																		"nodeType": "Block",
																		"src": "24623:197:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1347,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1345,
																						"src": "24646:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1349,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1320,
																										"src": "24675:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1348,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1448,
																									"src": "24658:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1350,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24658:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1351,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "24679:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1447,
																							"src": "24658:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "24702:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "24658:52:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "24646:64:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1359,
																				"nodeType": "IfStatement",
																				"src": "24642:163:0",
																				"trueBody": {
																					"id": 1358,
																					"nodeType": "Block",
																					"src": "24712:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1355,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "24742:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1354,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "24735:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1356,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24735:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1357,
																							"nodeType": "ExpressionStatement",
																							"src": "24735:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1361,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1346,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1345,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "24613:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "24606:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1344,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "24606:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24605:17:0"
																	},
																	"src": "24597:223:0"
																},
																{
																	"block": {
																		"id": 1369,
																		"nodeType": "Block",
																		"src": "24855:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1366,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1363,
																							"src": "24881:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1365,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24874:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24874:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1368,
																				"nodeType": "ExpressionStatement",
																				"src": "24874:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1370,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1364,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1363,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "24847:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1370,
																				"src": "24833:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1362,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "24833:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24832:22:0"
																	},
																	"src": "24821:83:0"
																},
																{
																	"block": {
																		"id": 1375,
																		"nodeType": "Block",
																		"src": "24911:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1372,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24937:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1371,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24930:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24930:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1374,
																				"nodeType": "ExpressionStatement",
																				"src": "24930:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1376,
																	"nodeType": "TryCatchClause",
																	"src": "24905:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1338,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "24561:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1339,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "24571:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1340,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "24577:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "24582:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1342,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "24591:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1335,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "24534:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1334,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "24517:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24517:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24538:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1447,
																	"src": "24517:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24517:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1377,
															"nodeType": "TryStatement",
															"src": "24513:495:0"
														}
													]
												}
											}
										]
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "24236:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "24290:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24282:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24317:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24309:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24340:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24332:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "24370:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24353:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "24353:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "24401:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24384:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"nodeType": "ArrayTypeName",
													"src": "24384:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24419:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24419:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24271:172:0"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24466:0:0"
									},
									"scope": 1410,
									"src": "24227:799:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "25118:114:0",
										"statements": [
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "25146:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "25129:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1391,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"nodeType": "ArrayTypeName",
															"src": "25129:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25154:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1394,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25158:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1395,
															"nodeType": "ArrayTypeName",
															"src": "25158:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25154:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25129:41:0"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1400,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "25181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1402,
														"indexExpression": {
															"hexValue": "30",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1403,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "25192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25181:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "25181:18:0"
											},
											{
												"expression": {
													"id": 1406,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "25219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1388,
												"id": 1407,
												"nodeType": "Return",
												"src": "25212:12:0"
											}
										]
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "25043:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "25069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "25061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25060:17:0"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "25100:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1385,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1386,
													"nodeType": "ArrayTypeName",
													"src": "25100:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25099:18:0"
									},
									"scope": 1410,
									"src": "25034:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2096,
							"src": "11144:14091:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1412,
										"name": "IERC165",
										"nameLocations": [
											"25315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "25315:7:0"
									},
									"id": 1413,
									"nodeType": "InheritanceSpecifier",
									"src": "25315:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1411,
								"nodeType": "StructuredDocumentation",
								"src": "25247:36:0",
								"text": " _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								11
							],
							"name": "IERC1155Receiver",
							"nameLocation": "25295:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "25332:828:0",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "26175:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26211:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26203:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26238:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26230:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "26261:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26253:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26282:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26274:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26313:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26298:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26298:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26192:132:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26360:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "26360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26359:8:0"
									},
									"scope": 1448,
									"src": "26166:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "26376:989:0",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "27380:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27421:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27413:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "27482:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27463:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1436,
													"nodeType": "ArrayTypeName",
													"src": "27463:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "27515:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27496:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "27496:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27547:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27532:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27402:156:0"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27594:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27594:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27593:8:0"
									},
									"scope": 1448,
									"src": "27371:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2096,
							"src": "25285:2320:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1449,
								"nodeType": "StructuredDocumentation",
								"src": "27797:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "SafeMath",
							"nameLocation": "28382:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "28615:102:0",
										"statements": [
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "28634:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "28626:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1463,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "28638:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1464,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "28642:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28626:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1467,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "28658:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1468,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "28662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28658:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "28654:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28673:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28672:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1460,
													"id": 1473,
													"nodeType": "Return",
													"src": "28665:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28701:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1476,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "28707:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1477,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "28700:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1478,
												"nodeType": "Return",
												"src": "28693:16:0"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "28398:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "28548:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28563:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28555:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28574:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28566:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28554:22:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28600:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28599:15:0"
									},
									"scope": 1801,
									"src": "28539:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "28946:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "28961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1493,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "28965:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "28957:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28976:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28983:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1497,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28975:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1491,
													"id": 1498,
													"nodeType": "Return",
													"src": "28968:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "29010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1502,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "29014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1504,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29003:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1505,
												"nodeType": "Return",
												"src": "28996:20:0"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "28725:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "28879:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28894:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28886:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28905:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28897:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28885:22:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28930:15:0"
									},
									"scope": 1801,
									"src": "28870:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "29255:367:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "29491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "29487:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29507:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29513:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29506:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1518,
													"id": 1525,
													"nodeType": "Return",
													"src": "29499:16:0"
												}
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "29534:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "29526:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "29538:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1530,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "29542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29538:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29526:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1533,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "29558:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1534,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "29562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1536,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "29567:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29558:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "29554:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29578:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29585:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29577:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1518,
													"id": 1541,
													"nodeType": "Return",
													"src": "29570:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1544,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "29612:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1545,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29605:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1546,
												"nodeType": "Return",
												"src": "29598:16:0"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "29032:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "29188:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29203:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29195:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29214:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29194:22:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29239:15:0"
									},
									"scope": 1801,
									"src": "29179:443:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "29854:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "29869:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29874:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29869:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "29865:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29885:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29892:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1565,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29884:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1559,
													"id": 1566,
													"nodeType": "Return",
													"src": "29877:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "29919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1570,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "29923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1572,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29912:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1573,
												"nodeType": "Return",
												"src": "29905:20:0"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "29630:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "29787:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29802:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29794:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29813:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29793:22:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29839:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29845:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29838:15:0"
									},
									"scope": 1801,
									"src": "29778:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "30175:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "30190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30195:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1594,
												"nodeType": "IfStatement",
												"src": "30186:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30206:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30213:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1592,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30205:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1586,
													"id": 1593,
													"nodeType": "Return",
													"src": "30198:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "30240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "30244:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30240:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1599,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "30233:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1600,
												"nodeType": "Return",
												"src": "30226:20:0"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "29941:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "30108:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30123:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30134:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30126:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30114:22:0"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30160:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30159:15:0"
									},
									"scope": 1801,
									"src": "30099:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "30568:112:0",
										"statements": [
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "30587:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1627,
														"src": "30579:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1617,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1614,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "30591:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1615,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "30595:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30579:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1619,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "30615:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "30620:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30623:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30607:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "30607:46:0"
											},
											{
												"expression": {
													"id": 1625,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "30671:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1626,
												"nodeType": "Return",
												"src": "30664:8:0"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "30262:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "30510:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30533:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30525:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30513:22:0"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30558:9:0"
									},
									"scope": 1801,
									"src": "30501:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "31030:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "31049:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1640,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "31054:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31057:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31041:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "31041:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "31108:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1646,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "31112:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31108:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1648,
												"nodeType": "Return",
												"src": "31101:12:0"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "30688:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "30972:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30984:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "30976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30995:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "30987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30975:22:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "31021:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31020:9:0"
									},
									"scope": 1801,
									"src": "30963:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "31447:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "31462:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "31458:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1659,
													"id": 1664,
													"nodeType": "Return",
													"src": "31470:8:0"
												}
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "31497:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "31489:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "31501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1669,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "31505:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31489:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1673,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "31525:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1674,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "31529:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31525:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "31534:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31525:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31537:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31517:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "31517:56:0"
											},
											{
												"expression": {
													"id": 1681,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1667,
													"src": "31591:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1682,
												"nodeType": "Return",
												"src": "31584:8:0"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "31129:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "31389:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31401:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31412:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31404:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31392:22:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31437:9:0"
									},
									"scope": 1801,
									"src": "31380:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "32145:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "32164:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32164:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32171:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32156:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "32156:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "32218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1702,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "32222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1704,
												"nodeType": "Return",
												"src": "32211:12:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "31608:464:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "32087:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32099:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32091:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32110:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32102:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32090:22:0"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32135:9:0"
									},
									"scope": 1801,
									"src": "32078:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "32765:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "32784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32788:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32784:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32791:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32776:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "32776:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1723,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "32836:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1724,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "32840:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32836:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1726,
												"nodeType": "Return",
												"src": "32829:12:0"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "32239:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "32707:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32710:22:0"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32755:9:0"
									},
									"scope": 1801,
									"src": "32698:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "33423:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1741,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "33442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1742,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "33447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33442:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1744,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "33450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33434:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "33434:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "33481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "33485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1739,
												"id": 1750,
												"nodeType": "Return",
												"src": "33474:12:0"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "32857:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "33337:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "33377:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33363:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33340:50:0"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33413:9:0"
									},
									"scope": 1801,
									"src": "33328:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "34263:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "34282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34286:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1768,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "34289:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34274:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "34274:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "34320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1772,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "34324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1774,
												"nodeType": "Return",
												"src": "34313:12:0"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "33502:660:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "34177:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34189:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34181:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34200:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34192:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "34217:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34203:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34180:50:0"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34253:9:0"
									},
									"scope": 1801,
									"src": "34168:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "35091:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1789,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "35110:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "35110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1792,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "35117:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35102:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "35102:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "35148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "35152:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35148:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1787,
												"id": 1798,
												"nodeType": "Return",
												"src": "35141:12:0"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "34341:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "35005:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35028:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35020:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "35045:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35031:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35031:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35008:50:0"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35081:9:0"
									},
									"scope": 1801,
									"src": "34996:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2096,
							"src": "28374:6790:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1802,
								"nodeType": "StructuredDocumentation",
								"src": "35168:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2095,
							"linearizedBaseContracts": [
								2095
							],
							"name": "Address",
							"nameLocation": "35247:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "35915:356:0",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "36125:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "36117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"nodeType": "VariableDeclarationStatement",
												"src": "36117:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36206:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36208:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "36228:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "36216:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "36216:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "36208:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1805,
														"isOffset": false,
														"isSlot": false,
														"src": "36228:7:0",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "36208:4:0",
														"valueSize": 1
													}
												],
												"id": 1813,
												"nodeType": "InlineAssembly",
												"src": "36197:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "36255:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36255:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1809,
												"id": 1817,
												"nodeType": "Return",
												"src": "36248:15:0"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "35262:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "35858:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "35877:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "35869:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35868:17:0"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "35909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35908:6:0"
									},
									"scope": 2095,
									"src": "35849:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "37277:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1830,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37304:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37296:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1828,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37296:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37296:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37310:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "37296:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "37321:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37296:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37329:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37288:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "37288:73:0"
											},
											{
												"assignments": [
													1839,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "37458:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "37453:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1838,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "37453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37503:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1840,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "37471:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37481:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "37471:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "37494:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "37471:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37471:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37452:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "37525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37534:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37517:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "37517:78:0"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "36279:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "37215:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "37241:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37225:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37225:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37260:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37252:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37224:43:0"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37277:0:0"
									},
									"scope": 2095,
									"src": "37206:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "38453:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "38482:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "38490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38496:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1863,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1870,
															1890
														],
														"referencedDeclaration": 1890,
														"src": "38469:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38469:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1868,
												"nodeType": "Return",
												"src": "38462:67:0"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "37611:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "38373:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38394:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38402:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38385:35:0"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38439:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38439:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38438:14:0"
									},
									"scope": 2095,
									"src": "38364:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "38884:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1883,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "38924:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "38932:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38938:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1886,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "38941:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1882,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1960
														],
														"referencedDeclaration": 1960,
														"src": "38902:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38902:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1888,
												"nodeType": "Return",
												"src": "38895:59:0"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "38545:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "38776:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38797:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38789:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38805:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38805:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38838:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38824:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38824:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38788:63:0"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38870:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38869:14:0"
									},
									"scope": 2095,
									"src": "38767:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "39450:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "39490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1904,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "39498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1905,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "39504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39511:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1902,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1960
														],
														"referencedDeclaration": 1960,
														"src": "39468:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39468:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1908,
												"nodeType": "Return",
												"src": "39461:94:0"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "38970:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "39346:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39376:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39397:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39384:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39384:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39367:50:0"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39436:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39435:14:0"
									},
									"scope": 2095,
									"src": "39337:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "39960:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "39987:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "39979:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1925,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "39979:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39979:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "39993:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "39979:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1930,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "40004:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39979:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40011:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39971:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "39971:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1937,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "40082:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1936,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "40071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40071:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40091:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40063:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "40063:60:0"
											},
											{
												"assignments": [
													1943,
													1945
												],
												"declarations": [
													{
														"constant": false,
														"id": 1943,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "40202:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "40197:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1942,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "40197:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1945,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "40224:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "40211:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1944,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "40211:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"arguments": [
														{
															"id": 1950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "40266:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1946,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "40238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40245:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "40238:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1948,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "40258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "40238:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40238:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40196:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1954,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "40307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1955,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "40316:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1956,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "40328:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1953,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "40289:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40289:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1958,
												"nodeType": "Return",
												"src": "40282:59:0"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "39571:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "39828:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39858:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39850:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39866:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39866:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39893:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39885:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "39914:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39900:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39849:78:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39946:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39945:14:0"
									},
									"scope": 2095,
									"src": "39819:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "40634:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1971,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "40671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "40679:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40685:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1970,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1977,
															2012
														],
														"referencedDeclaration": 2012,
														"src": "40652:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40652:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1975,
												"nodeType": "Return",
												"src": "40645:80:0"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "40357:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "40543:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "40570:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40562:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40591:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40578:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40578:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40561:35:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40620:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40619:14:0"
									},
									"scope": 2095,
									"src": "40534:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "41053:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1991,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1980,
																	"src": "41083:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1990,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "41072:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41072:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41092:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41064:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "41064:67:0"
											},
											{
												"assignments": [
													1997,
													1999
												],
												"declarations": [
													{
														"constant": false,
														"id": 1997,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41210:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "41205:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1996,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41205:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1999,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "41232:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "41219:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1998,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "41219:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2004,
												"initialValue": {
													"arguments": [
														{
															"id": 2002,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "41264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2000,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "41246:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41253:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "41246:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41246:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41204:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2006,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "41305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2007,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "41314:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2008,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "41326:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2005,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "41287:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41287:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2010,
												"nodeType": "Return",
												"src": "41280:59:0"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "40741:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "40934:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "40961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "40953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40982:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "40969:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "41002:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "40988:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40952:63:0"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "41039:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41038:14:0"
									},
									"scope": 2095,
									"src": "40925:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "41631:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "41670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "41678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41684:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2022,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2064
														],
														"referencedDeclaration": 2064,
														"src": "41649:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41649:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2027,
												"nodeType": "Return",
												"src": "41642:84:0"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "41355:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "41543:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "41572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41593:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41580:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41580:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41563:35:0"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41617:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41616:14:0"
									},
									"scope": 2095,
									"src": "41534:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "42053:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2043,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "42083:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2042,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "42072:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42072:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42092:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42064:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "42064:69:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42212:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "42207:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "42234:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "42221:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42221:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2056,
												"initialValue": {
													"arguments": [
														{
															"id": 2054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "42268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2052,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "42248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42255:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "42248:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42248:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42206:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2058,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "42309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2059,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "42318:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2060,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "42330:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2057,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "42291:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42291:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2062,
												"nodeType": "Return",
												"src": "42284:59:0"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "41742:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "41937:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "41966:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "41958:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41987:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "41974:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41974:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42007:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "41993:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41993:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41957:63:0"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "42039:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42038:14:0"
									},
									"scope": 2095,
									"src": "41928:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "42488:613:0",
										"statements": [
											{
												"condition": {
													"id": 2075,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2066,
													"src": "42503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "42562:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2079,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "42648:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42659:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "42648:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42668:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "42648:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2089,
																"nodeType": "Block",
																"src": "43028:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2086,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "43054:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2085,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "43047:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43047:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2088,
																		"nodeType": "ExpressionStatement",
																		"src": "43047:20:0"
																	}
																]
															},
															"id": 2090,
															"nodeType": "IfStatement",
															"src": "42644:439:0",
															"trueBody": {
																"id": 2084,
																"nodeType": "Block",
																"src": "42671:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "42859:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "42882:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "42911:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "42905:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "42905:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "42886:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "42955:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "42959:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "42951:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "42951:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "42972:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "42944:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "42944:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "42944:44:0"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 2068,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "42911:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2068,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "42959:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 2083,
																		"nodeType": "InlineAssembly",
																		"src": "42850:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "42499:595:0",
												"trueBody": {
													"id": 2078,
													"nodeType": "Block",
													"src": "42512:44:0",
													"statements": [
														{
															"expression": {
																"id": 2076,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "42534:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2074,
															"id": 2077,
															"nodeType": "Return",
															"src": "42527:17:0"
														}
													]
												}
											}
										]
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "42368:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "42391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42386:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "42413:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42400:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42439:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42425:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42425:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42385:67:0"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42474:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42474:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42473:14:0"
									},
									"scope": 2095,
									"src": "42359:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2096,
							"src": "35239:7865:0",
							"usedErrors": []
						}
					],
					"src": "33:43081:0"
				},
				"id": 0
			}
		}
	}
}