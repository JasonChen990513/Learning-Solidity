{
	"id": "480bf2ebaf9ada4f4a47fc449cbb77a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practical6-Buy-Token.sol": {
				"content": "    // SPDX-License-Identifier: MIT\r\n    pragma solidity 0.8.19;\r\n\r\n    import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n    contract BuyToken {\r\n        IERC20 public TTTToken = IERC20(0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7);\r\n        bool private locked;\r\n        address public owner;\r\n        uint256 public exchangeRate;\r\n        constructor(){\r\n            exchangeRate = 1000;\r\n        }\r\n\r\n        event topUpSuccessful (uint256 amount, address buyer);\r\n\r\n        //check the message sender is owner or not\r\n        modifier onlyOwner() {\r\n            require(msg.sender == owner, \"Not the owner\");\r\n            _;\r\n        }\r\n        //avoid re entry \r\n        modifier noReentrancy() {\r\n            require(!locked, \"Error: Reentrant call\");\r\n            locked = true;\r\n            _;\r\n            locked = false;\r\n        }\r\n\r\n        function changeEXCTRate(uint256 newRate) external onlyOwner{\r\n            exchangeRate = newRate;\r\n        }\r\n\r\n        function buyTTTToken() external payable noReentrancy{\r\n            require(msg.value >= 1 ether, \"Please at least send 1 ether!\");\r\n            require(payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value),\"transfer fail\");\r\n            uint256 buyAmount = (msg.value/1 ether)*exchangeRate;\r\n            //how to approve this transfer\r\n            //TTTToken.transferFrom(owner, msg.sender, buyAmount);\r\n\r\n            emit topUpSuccessful(buyAmount, msg.sender);\r\n\r\n        }\r\n\r\n        //TTTToken.Approval(owner, spender, value);\r\n    }"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <=0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25426f3e504d03db010ebc11385b2853f59b20e15c79375e9b08d2eea9f9ba05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b15634a3537cd402ee40a70b3f0f37a3b5e5d865a6c4b7a5eba8ed802c30fa8\",\"dweb:/ipfs/QmNeJ6cWMMvAeLUJXQq5CtQ7yvQmkdpLboQebUJbF3aeQs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Practical6-Buy-Token.sol": {
				"BuyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								}
							],
							"name": "topUpSuccessful",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TTTToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTTTToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "changeEXCTRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practical6-Buy-Token.sol\":136:1533  contract BuyToken {... */\n  mstore(0x40, 0x80)\n    /* \"Practical6-Buy-Token.sol\":165:240  IERC20 public TTTToken = IERC20(0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7) */\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Practical6-Buy-Token.sol\":197:239  0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7 */\n  0xc6bddcd0da1c50281f02a57b8d2ada2ebf76aec7\n    /* \"Practical6-Buy-Token.sol\":165:240  IERC20 public TTTToken = IERC20(0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7) */\n  or\n  swap1\n  sstore\n    /* \"Practical6-Buy-Token.sol\":350:409  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Practical6-Buy-Token.sol\":393:397  1000 */\n  0x03e8\n    /* \"Practical6-Buy-Token.sol\":378:390  exchangeRate */\n  0x02\n    /* \"Practical6-Buy-Token.sol\":378:397  exchangeRate = 1000 */\n  sstore\n    /* \"Practical6-Buy-Token.sol\":136:1533  contract BuyToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practical6-Buy-Token.sol\":136:1533  contract BuyToken {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x634a0234\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7effb427\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbbf1095a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Practical6-Buy-Token.sol\":312:339  uint256 public exchangeRate */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      sload(0x02)\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Practical6-Buy-Token.sol\":312:339  uint256 public exchangeRate */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practical6-Buy-Token.sol\":982:1471  function buyTTTToken() external payable noReentrancy{... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Practical6-Buy-Token.sol\":165:240  IERC20 public TTTToken = IERC20(0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sload(0x00)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":373:405   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":355:406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"Practical6-Buy-Token.sol\":165:240  IERC20 public TTTToken = IERC20(0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7) */\n      tag_10\n        /* \"#utility.yul\":196:412   */\n      jump\n        /* \"Practical6-Buy-Token.sol\":281:301  address public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      sload(0x01)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Practical6-Buy-Token.sol\":862:970  function changeEXCTRate(uint256 newRate) external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_12\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"Practical6-Buy-Token.sol\":982:1471  function buyTTTToken() external payable noReentrancy{... */\n    tag_13:\n        /* \"Practical6-Buy-Token.sol\":733:739  locked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Practical6-Buy-Token.sol\":732:739  !locked */\n      iszero\n        /* \"Practical6-Buy-Token.sol\":724:765  require(!locked, \"Error: Reentrant call\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1012:1014   */\n      0x20\n        /* \"Practical6-Buy-Token.sol\":724:765  require(!locked, \"Error: Reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":994:1015   */\n      mstore\n        /* \"#utility.yul\":1051:1053   */\n      0x15\n        /* \"#utility.yul\":1031:1049   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1024:1054   */\n      mstore\n      shl(0x5a, 0x115c9c9bdc8e881499595b9d1c985b9d0818d85b1b)\n        /* \"#utility.yul\":1070:1088   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1063:1114   */\n      mstore\n        /* \"#utility.yul\":1131:1149   */\n      0x64\n      add\n        /* \"Practical6-Buy-Token.sol\":724:765  require(!locked, \"Error: Reentrant call\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"Practical6-Buy-Token.sol\":780:786  locked */\n      0x00\n        /* \"Practical6-Buy-Token.sol\":780:793  locked = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"Practical6-Buy-Token.sol\":1070:1077  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Practical6-Buy-Token.sol\":1057:1066  msg.value */\n      callvalue\n        /* \"Practical6-Buy-Token.sol\":1057:1077  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"Practical6-Buy-Token.sol\":1049:1111  require(msg.value >= 1 ether, \"Please at least send 1 ether!\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"Practical6-Buy-Token.sol\":1049:1111  require(msg.value >= 1 ether, \"Please at least send 1 ether!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1344:1365   */\n      mstore\n        /* \"#utility.yul\":1401:1403   */\n      0x1d\n        /* \"#utility.yul\":1381:1399   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1374:1404   */\n      mstore\n        /* \"#utility.yul\":1440:1471   */\n      0x506c65617365206174206c656173742073656e64203120657468657221000000\n        /* \"#utility.yul\":1420:1438   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1413:1472   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x64\n      add\n        /* \"Practical6-Buy-Token.sol\":1049:1111  require(msg.value >= 1 ether, \"Please at least send 1 ether!\") */\n      tag_31\n        /* \"#utility.yul\":1160:1513   */\n      jump\n        /* \"Practical6-Buy-Token.sol\":1049:1111  require(msg.value >= 1 ether, \"Please at least send 1 ether!\") */\n    tag_34:\n        /* \"Practical6-Buy-Token.sol\":1134:1201  payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value) */\n      mload(0x40)\n        /* \"Practical6-Buy-Token.sol\":1142:1184  0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129 */\n      0x9163f6f9a843827ab2fc1b0fbd95b7ef77763129\n      swap1\n        /* \"Practical6-Buy-Token.sol\":1191:1200  msg.value */\n      callvalue\n        /* \"Practical6-Buy-Token.sol\":1134:1201  payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Practical6-Buy-Token.sol\":1191:1200  msg.value */\n      dup6\n        /* \"Practical6-Buy-Token.sol\":1142:1184  0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129 */\n      dup9\n        /* \"Practical6-Buy-Token.sol\":1134:1201  payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Practical6-Buy-Token.sol\":1126:1218  require(payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value),\"transfer fail\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"Practical6-Buy-Token.sol\":1126:1218  require(payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value),\"transfer fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1702:1723   */\n      mstore\n        /* \"#utility.yul\":1759:1761   */\n      0x0d\n        /* \"#utility.yul\":1739:1757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1732:1762   */\n      mstore\n      shl(0x9a, 0x1d1c985b9cd9995c8819985a5b)\n        /* \"#utility.yul\":1778:1796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1771:1814   */\n      mstore\n        /* \"#utility.yul\":1831:1849   */\n      0x64\n      add\n        /* \"Practical6-Buy-Token.sol\":1126:1218  require(payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value),\"transfer fail\") */\n      tag_31\n        /* \"#utility.yul\":1518:1855   */\n      jump\n        /* \"Practical6-Buy-Token.sol\":1126:1218  require(payable(0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129).send(msg.value),\"transfer fail\") */\n    tag_38:\n        /* \"Practical6-Buy-Token.sol\":1273:1285  exchangeRate */\n      sload(0x02)\n        /* \"Practical6-Buy-Token.sol\":1233:1250  uint256 buyAmount */\n      0x00\n      swap1\n        /* \"Practical6-Buy-Token.sol\":1254:1271  msg.value/1 ether */\n      tag_41\n        /* \"Practical6-Buy-Token.sol\":1264:1271  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Practical6-Buy-Token.sol\":1254:1263  msg.value */\n      callvalue\n        /* \"Practical6-Buy-Token.sol\":1254:1271  msg.value/1 ether */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Practical6-Buy-Token.sol\":1253:1285  (msg.value/1 ether)*exchangeRate */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"Practical6-Buy-Token.sol\":1419:1457  topUpSuccessful(buyAmount, msg.sender) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2526:2551   */\n      dup3\n      dup2\n      mstore\n        /* \"Practical6-Buy-Token.sol\":1446:1456  msg.sender */\n      caller\n        /* \"#utility.yul\":2582:2584   */\n      0x20\n        /* \"#utility.yul\":2567:2585   */\n      dup3\n      add\n        /* \"#utility.yul\":2560:2620   */\n      mstore\n        /* \"Practical6-Buy-Token.sol\":1233:1285  uint256 buyAmount = (msg.value/1 ether)*exchangeRate */\n      swap2\n      swap3\n      pop\n        /* \"Practical6-Buy-Token.sol\":1419:1457  topUpSuccessful(buyAmount, msg.sender) */\n      0x57be3b095691f7a70e80aaa69b69ec4b9713302028aebe76ce4629a95380978c\n      swap2\n        /* \"#utility.yul\":2499:2517   */\n      add\n        /* \"Practical6-Buy-Token.sol\":1419:1457  topUpSuccessful(buyAmount, msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"Practical6-Buy-Token.sol\":833:838  false */\n      0x00\n        /* \"Practical6-Buy-Token.sol\":824:838  locked = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"Practical6-Buy-Token.sol\":982:1471  function buyTTTToken() external payable noReentrancy{... */\n      jump\t// out\n        /* \"Practical6-Buy-Token.sol\":862:970  function changeEXCTRate(uint256 newRate) external onlyOwner{... */\n    tag_28:\n        /* \"Practical6-Buy-Token.sol\":597:602  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Practical6-Buy-Token.sol\":583:593  msg.sender */\n      caller\n        /* \"Practical6-Buy-Token.sol\":583:602  msg.sender == owner */\n      eq\n        /* \"Practical6-Buy-Token.sol\":575:620  require(msg.sender == owner, \"Not the owner\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2833:2835   */\n      0x20\n        /* \"Practical6-Buy-Token.sol\":575:620  require(msg.sender == owner, \"Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2815:2836   */\n      mstore\n        /* \"#utility.yul\":2872:2874   */\n      0x0d\n        /* \"#utility.yul\":2852:2870   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2845:2875   */\n      mstore\n      shl(0x99, 0x2737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":2891:2909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2884:2927   */\n      mstore\n        /* \"#utility.yul\":2944:2962   */\n      0x64\n      add\n        /* \"Practical6-Buy-Token.sol\":575:620  require(msg.sender == owner, \"Not the owner\") */\n      tag_31\n        /* \"#utility.yul\":2631:2968   */\n      jump\n        /* \"Practical6-Buy-Token.sol\":575:620  require(msg.sender == owner, \"Not the owner\") */\n    tag_48:\n        /* \"Practical6-Buy-Token.sol\":936:948  exchangeRate */\n      0x02\n        /* \"Practical6-Buy-Token.sol\":936:958  exchangeRate = newRate */\n      sstore\n        /* \"Practical6-Buy-Token.sol\":862:970  function changeEXCTRate(uint256 newRate) external onlyOwner{... */\n      jump\t// out\n        /* \"#utility.yul\":625:805   */\n    tag_27:\n        /* \"#utility.yul\":684:690   */\n      0x00\n        /* \"#utility.yul\":737:739   */\n      0x20\n        /* \"#utility.yul\":725:734   */\n      dup3\n        /* \"#utility.yul\":716:723   */\n      dup5\n        /* \"#utility.yul\":712:735   */\n      sub\n        /* \"#utility.yul\":708:740   */\n      slt\n        /* \"#utility.yul\":705:757   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":750:751   */\n      dup1\n        /* \"#utility.yul\":743:755   */\n      revert\n        /* \"#utility.yul\":705:757   */\n    tag_57:\n      pop\n        /* \"#utility.yul\":776:799   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":625:805   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:2077   */\n    tag_42:\n        /* \"#utility.yul\":1900:1901   */\n      0x00\n        /* \"#utility.yul\":1926:1927   */\n      dup3\n        /* \"#utility.yul\":1916:2048   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1970:1980   */\n      0x4e487b71\n        /* \"#utility.yul\":1965:1968   */\n      0xe0\n        /* \"#utility.yul\":1961:1981   */\n      shl\n        /* \"#utility.yul\":1958:1959   */\n      0x00\n        /* \"#utility.yul\":1951:1982   */\n      mstore\n        /* \"#utility.yul\":2005:2009   */\n      0x12\n        /* \"#utility.yul\":2002:2003   */\n      0x04\n        /* \"#utility.yul\":1995:2010   */\n      mstore\n        /* \"#utility.yul\":2033:2037   */\n      0x24\n        /* \"#utility.yul\":2030:2031   */\n      0x00\n        /* \"#utility.yul\":2023:2038   */\n      revert\n        /* \"#utility.yul\":1916:2048   */\n    tag_62:\n      pop\n        /* \"#utility.yul\":2062:2071   */\n      div\n      swap1\n        /* \"#utility.yul\":1860:2077   */\n      jump\t// out\n        /* \"#utility.yul\":2082:2347   */\n    tag_44:\n        /* \"#utility.yul\":2155:2164   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2186:2195   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2203:2218   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2197:2219   */\n      dup5\n      eq\n        /* \"#utility.yul\":2183:2220   */\n      or\n        /* \"#utility.yul\":2173:2341   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2263:2273   */\n      0x4e487b71\n        /* \"#utility.yul\":2258:2261   */\n      0xe0\n        /* \"#utility.yul\":2254:2274   */\n      shl\n        /* \"#utility.yul\":2251:2252   */\n      0x00\n        /* \"#utility.yul\":2244:2275   */\n      mstore\n        /* \"#utility.yul\":2298:2302   */\n      0x11\n        /* \"#utility.yul\":2295:2296   */\n      0x04\n        /* \"#utility.yul\":2288:2303   */\n      mstore\n        /* \"#utility.yul\":2326:2330   */\n      0x24\n        /* \"#utility.yul\":2323:2324   */\n      0x00\n        /* \"#utility.yul\":2316:2331   */\n      revert\n        /* \"#utility.yul\":2173:2341   */\n    tag_64:\n        /* \"#utility.yul\":2082:2347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3bd6c8f42c38753756a6eec2f4b156a51051f1b748e25e5ac0daac3ef93479a64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600080546001600160a01b03191673c6bddcd0da1c50281f02a57b8d2ada2ebf76aec717905534801561003657600080fd5b506103e860025561037f8061004c6000396000f3fe60806040526004361061004a5760003560e01c80633ba0b9a91461004f578063634a0234146100785780637effb427146100825780638da5cb5b146100ba578063bbf1095a146100da575b600080fd5b34801561005b57600080fd5b5061006560025481565b6040519081526020015b60405180910390f35b6100806100fa565b005b34801561008e57600080fd5b506000546100a2906001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b3480156100c657600080fd5b506001546100a2906001600160a01b031681565b3480156100e657600080fd5b506100806100f53660046102e3565b610294565b600054600160a01b900460ff16156101515760405162461bcd60e51b8152602060048201526015602482015274115c9c9bdc8e881499595b9d1c985b9d0818d85b1b605a1b60448201526064015b60405180910390fd5b6000805460ff60a01b1916600160a01b179055670de0b6b3a76400003410156101bc5760405162461bcd60e51b815260206004820152601d60248201527f506c65617365206174206c656173742073656e642031206574686572210000006044820152606401610148565b604051739163f6f9a843827ab2fc1b0fbd95b7ef77763129903480156108fc02916000818181858888f193505050506102275760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606401610148565b60025460009061023f670de0b6b3a7640000346102fc565b610249919061031e565b604080518281523360208201529192507f57be3b095691f7a70e80aaa69b69ec4b9713302028aebe76ce4629a95380978c910160405180910390a1506000805460ff60a01b19169055565b6001546001600160a01b031633146102de5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606401610148565b600255565b6000602082840312156102f557600080fd5b5035919050565b60008261031957634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761034357634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f3bd6c8f42c38753756a6eec2f4b156a51051f1b748e25e5ac0daac3ef93479a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC6BDDCD0DA1C50281F02A57B8D2ADA2EBF76AEC7 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH1 0x2 SSTORE PUSH2 0x37F DUP1 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x634A0234 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7EFFB427 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xBBF1095A EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115C9C9BDC8E881499595B9D1C985B9D0818D85B1B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C65617365206174206C656173742073656E64203120657468657221000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x9163F6F9A843827AB2FC1B0FBD95B7EF77763129 SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x23F PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x57BE3B095691F7A70E80AAA69B69EC4B9713302028AEBE76CE4629A95380978C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x319 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xBD PUSH13 0x8F42C38753756A6EEC2F4B156A MLOAD SDIV 0x1F SHL PUSH21 0x8E25E5AC0DAAC3EF93479A64736F6C634300081300 CALLER ",
							"sourceMap": "136:1397:1:-:0;;;165:75;;;-1:-1:-1;;;;;;165:75:1;197:42;165:75;;;350:59;;;;;;;;;-1:-1:-1;393:4:1;378:12;:19;136:1397;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TTTToken_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTTTToken_190": {
									"entryPoint": 250,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeEXCTRate_148": {
									"entryPoint": 660,
									"id": 148,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exchangeRate_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_90": {
									"entryPoint": null,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_705ae17775f3bd69642f9e14bcd50a32997f2b602f84ef4845722efae16cdaf7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da786e08eddeaa87687a48decd46aa97b4acdacd243581ddf35fe6873058617a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2970:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "393:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "389:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "389:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "402:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "385:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "385:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "373:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "373:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "355:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "355:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "290:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "301:4:2",
														"type": ""
													}
												],
												"src": "196:216:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "518:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "528:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "540:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "551:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "528:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "601:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "606:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "597:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "597:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "610:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "593:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "593:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "581:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "581:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "563:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "487:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "498:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "509:4:2",
														"type": ""
													}
												],
												"src": "417:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "695:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "741:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "750:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "753:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "743:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "743:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "716:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "725:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "737:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:32:2"
															},
															"nodeType": "YulIf",
															"src": "705:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "766:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "776:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "661:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "672:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "684:6:2",
														"type": ""
													}
												],
												"src": "625:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1001:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "994:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "994:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1035:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1046:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1074:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1085:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1070:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1070:18:2"
																	},
																	{
																		"hexValue": "4572726f723a205265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1090:23:2",
																		"type": "",
																		"value": "Error: Reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1063:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1123:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1135:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1146:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1123:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da786e08eddeaa87687a48decd46aa97b4acdacd243581ddf35fe6873058617a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "961:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "975:4:2",
														"type": ""
													}
												],
												"src": "810:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1334:179:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1344:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1396:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1374:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1374:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1424:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1435:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1420:18:2"
																	},
																	{
																		"hexValue": "506c65617365206174206c656173742073656e64203120657468657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1440:31:2",
																		"type": "",
																		"value": "Please at least send 1 ether!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1413:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1481:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1493:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1504:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1481:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_705ae17775f3bd69642f9e14bcd50a32997f2b602f84ef4845722efae16cdaf7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1325:4:2",
														"type": ""
													}
												],
												"src": "1160:353:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1692:163:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1709:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1754:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1759:2:2",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1732:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1782:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1793:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1778:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1778:18:2"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1798:15:2",
																		"type": "",
																		"value": "transfer fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1823:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1835:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1823:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1669:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1683:4:2",
														"type": ""
													}
												],
												"src": "1518:337:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1906:171:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1937:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1958:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1965:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1970:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1961:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1961:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1951:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1951:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1951:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2002:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2005:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1995:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1995:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2030:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2033:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2023:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2023:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1926:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:9:2"
															},
															"nodeType": "YulIf",
															"src": "1916:132:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2057:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1891:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1894:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1900:1:2",
														"type": ""
													}
												],
												"src": "1860:217:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:213:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2159:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2162:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2144:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2230:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2251:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2258:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2263:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2254:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2254:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2244:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2244:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2244:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2295:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2298:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2288:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2288:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2288:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2323:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2326:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2316:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2193:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2186:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2186:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2200:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2207:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2216:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2203:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2203:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2197:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2197:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2183:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:37:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:45:2"
															},
															"nodeType": "YulIf",
															"src": "2173:168:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2113:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2116:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2122:7:2",
														"type": ""
													}
												],
												"src": "2082:265:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2481:145:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2491:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2533:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2544:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2526:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2582:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2591:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2607:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2612:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2603:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2603:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2616:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2599:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2560:60:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2442:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2453:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2461:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2472:4:2",
														"type": ""
													}
												],
												"src": "2352:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2805:163:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2822:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2815:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2815:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2815:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:2:2",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2845:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2906:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:18:2"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2911:15:2",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2884:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2884:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2936:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2959:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2936:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2796:4:2",
														"type": ""
													}
												],
												"src": "2631:337:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_da786e08eddeaa87687a48decd46aa97b4acdacd243581ddf35fe6873058617a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Error: Reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_705ae17775f3bd69642f9e14bcd50a32997f2b602f84ef4845722efae16cdaf7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Please at least send 1 ether!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"transfer fail\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633ba0b9a91461004f578063634a0234146100785780637effb427146100825780638da5cb5b146100ba578063bbf1095a146100da575b600080fd5b34801561005b57600080fd5b5061006560025481565b6040519081526020015b60405180910390f35b6100806100fa565b005b34801561008e57600080fd5b506000546100a2906001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b3480156100c657600080fd5b506001546100a2906001600160a01b031681565b3480156100e657600080fd5b506100806100f53660046102e3565b610294565b600054600160a01b900460ff16156101515760405162461bcd60e51b8152602060048201526015602482015274115c9c9bdc8e881499595b9d1c985b9d0818d85b1b605a1b60448201526064015b60405180910390fd5b6000805460ff60a01b1916600160a01b179055670de0b6b3a76400003410156101bc5760405162461bcd60e51b815260206004820152601d60248201527f506c65617365206174206c656173742073656e642031206574686572210000006044820152606401610148565b604051739163f6f9a843827ab2fc1b0fbd95b7ef77763129903480156108fc02916000818181858888f193505050506102275760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606401610148565b60025460009061023f670de0b6b3a7640000346102fc565b610249919061031e565b604080518281523360208201529192507f57be3b095691f7a70e80aaa69b69ec4b9713302028aebe76ce4629a95380978c910160405180910390a1506000805460ff60a01b19169055565b6001546001600160a01b031633146102de5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b6044820152606401610148565b600255565b6000602082840312156102f557600080fd5b5035919050565b60008261031957634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761034357634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f3bd6c8f42c38753756a6eec2f4b156a51051f1b748e25e5ac0daac3ef93479a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x634A0234 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7EFFB427 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xBBF1095A EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115C9C9BDC8E881499595B9D1C985B9D0818D85B1B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C65617365206174206C656173742073656E64203120657468657221000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x9163F6F9A843827AB2FC1B0FBD95B7EF77763129 SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x23F PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x57BE3B095691F7A70E80AAA69B69EC4B9713302028AEBE76CE4629A95380978C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x319 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xBD PUSH13 0x8F42C38753756A6EEC2F4B156A MLOAD SDIV 0x1F SHL PUSH21 0x8E25E5AC0DAAC3EF93479A64736F6C634300081300 CALLER ",
							"sourceMap": "136:1397:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:27;;;;;;;;;;;;;;;;;;;160:25:2;;;148:2;133:18;312:27:1;;;;;;;;982:489;;;:::i;:::-;;165:75;;;;;;;;;;-1:-1:-1;165:75:1;;;;-1:-1:-1;;;;;165:75:1;;;;;;-1:-1:-1;;;;;373:32:2;;;355:51;;343:2;328:18;165:75:1;196:216:2;281:20:1;;;;;;;;;;-1:-1:-1;281:20:1;;;;-1:-1:-1;;;;;281:20:1;;;862:108;;;;;;;;;;-1:-1:-1;862:108:1;;;;;:::i;:::-;;:::i;982:489::-;733:6;;-1:-1:-1;;;733:6:1;;;;732:7;724:41;;;;-1:-1:-1;;;724:41:1;;1012:2:2;724:41:1;;;994:21:2;1051:2;1031:18;;;1024:30;-1:-1:-1;;;1070:18:2;;;1063:51;1131:18;;724:41:1;;;;;;;;;780:6;:13;;-1:-1:-1;;;;780:13:1;-1:-1:-1;;;780:13:1;;;1070:7:::1;1057:9;:20;;1049:62;;;::::0;-1:-1:-1;;;1049:62:1;;1362:2:2;1049:62:1::1;::::0;::::1;1344:21:2::0;1401:2;1381:18;;;1374:30;1440:31;1420:18;;;1413:59;1489:18;;1049:62:1::1;1160:353:2::0;1049:62:1::1;1134:67;::::0;1142:42:::1;::::0;1191:9:::1;1134:67:::0;::::1;;;::::0;::::1;::::0;;;1191:9;1142:42;1134:67;::::1;;;;;;1126:92;;;::::0;-1:-1:-1;;;1126:92:1;;1720:2:2;1126:92:1::1;::::0;::::1;1702:21:2::0;1759:2;1739:18;;;1732:30;-1:-1:-1;;;1778:18:2;;;1771:43;1831:18;;1126:92:1::1;1518:337:2::0;1126:92:1::1;1273:12;::::0;1233:17:::1;::::0;1254::::1;1264:7;1254:9;:17;:::i;:::-;1253:32;;;;:::i;:::-;1419:38;::::0;;2526:25:2;;;1446:10:1::1;2582:2:2::0;2567:18;;2560:60;1233:52:1;;-1:-1:-1;1419:38:1::1;::::0;2499:18:2;1419:38:1::1;;;;;;;-1:-1:-1::0;833:5:1;824:14;;-1:-1:-1;;;;824:14:1;;;982:489::o;862:108::-;597:5;;-1:-1:-1;;;;;597:5:1;583:10;:19;575:45;;;;-1:-1:-1;;;575:45:1;;2833:2:2;575:45:1;;;2815:21:2;2872:2;2852:18;;;2845:30;-1:-1:-1;;;2891:18:2;;;2884:43;2944:18;;575:45:1;2631:337:2;575:45:1;936:12:::1;:22:::0;862:108::o;625:180:2:-;684:6;737:2;725:9;716:7;712:23;708:32;705:52;;;753:1;750;743:12;705:52;-1:-1:-1;776:23:2;;625:180;-1:-1:-1;625:180:2:o;1860:217::-;1900:1;1926;1916:132;;1970:10;1965:3;1961:20;1958:1;1951:31;2005:4;2002:1;1995:15;2033:4;2030:1;2023:15;1916:132;-1:-1:-1;2062:9:2;;1860:217::o;2082:265::-;2155:9;;;2186;;2203:15;;;2197:22;;2183:37;2173:168;;2263:10;2258:3;2254:20;2251:1;2244:31;2298:4;2295:1;2288:15;2326:4;2323:1;2316:15;2173:168;2082:265;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "179000",
								"executionCost": "46562",
								"totalCost": "225562"
							},
							"external": {
								"TTTToken()": "2359",
								"buyTTTToken()": "infinite",
								"changeEXCTRate(uint256)": "24530",
								"exchangeRate()": "2262",
								"owner()": "2381"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 165,
									"end": 240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 165,
									"end": 240,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 165,
									"end": 240,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 197,
									"end": 239,
									"name": "PUSH",
									"source": 1,
									"value": "C6BDDCD0DA1C50281F02A57B8D2ADA2EBF76AEC7"
								},
								{
									"begin": 165,
									"end": 240,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 165,
									"end": 240,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 165,
									"end": 240,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 409,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 350,
									"end": 409,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 393,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 378,
									"end": 390,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 378,
									"end": 397,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1533,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3bd6c8f42c38753756a6eec2f4b156a51051f1b748e25e5ac0daac3ef93479a64736f6c63430008130033",
									".code": [
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "3BA0B9A9"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "634A0234"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "7EFFB427"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "BBF1095A"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 1533,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 982,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 373,
											"end": 405,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 355,
											"end": 406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 412,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 301,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 862,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 862,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 982,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 733,
											"end": 739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 732,
											"end": 739,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115C9C9BDC8E881499595B9D1C985B9D0818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1070,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 765,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 724,
											"end": 765,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 724,
											"end": 765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 780,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 780,
											"end": 793,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 780,
											"end": 793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 780,
											"end": 793,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 780,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 780,
											"end": 793,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1057,
											"end": 1066,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1077,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1077,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1049,
											"end": 1111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 1381,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1381,
											"end": 1399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "506C65617365206174206C656173742073656E64203120657468657221000000"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1472,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1160,
											"end": 1513,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9163F6F9A843827AB2FC1B0FBD95B7EF77763129"
										},
										{
											"begin": 1142,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1200,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1184,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1814,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1518,
											"end": 1855,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1126,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1273,
											"end": 1285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1264,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1254,
											"end": 1263,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1254,
											"end": 1271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1254,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1253,
											"end": 1285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1253,
											"end": 1285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1456,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2560,
											"end": 2620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "57BE3B095691F7A70E80AAA69B69EC4B9713302028AEBE76CE4629A95380978C"
										},
										{
											"begin": 1419,
											"end": 1457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1457,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 833,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 824,
											"end": 838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 824,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 838,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 862,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 602,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 597,
											"end": 602,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 593,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 583,
											"end": 602,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 575,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 575,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 575,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 575,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 575,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 575,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2631,
											"end": 2968,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 575,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 936,
											"end": 958,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 805,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 739,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 712,
											"end": 735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 708,
											"end": 740,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 705,
											"end": 757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 705,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 705,
											"end": 757,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 705,
											"end": 757,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 705,
											"end": 757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 799,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 625,
											"end": 805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 625,
											"end": 805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 2077,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1860,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1916,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1961,
											"end": 1981,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1916,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 2077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2220,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2258,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2288,
											"end": 2303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Practical6-Buy-Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TTTToken()": "7effb427",
							"buyTTTToken()": "634a0234",
							"changeEXCTRate(uint256)": "bbf1095a",
							"exchangeRate()": "3ba0b9a9",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"topUpSuccessful\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TTTToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTTTToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"changeEXCTRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practical6-Buy-Token.sol\":\"BuyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25426f3e504d03db010ebc11385b2853f59b20e15c79375e9b08d2eea9f9ba05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b15634a3537cd402ee40a70b3f0f37a3b5e5d865a6c4b7a5eba8ed802c30fa8\",\"dweb:/ipfs/QmNeJ6cWMMvAeLUJXQq5CtQ7yvQmkdpLboQebUJbF3aeQs\"]},\"Practical6-Buy-Token.sol\":{\"keccak256\":\"0xbb4f5d9b7f41f945ba3b667d81cec4baab62f629574088b7c015cf8cc6224b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf004b0904647b5c179b486be3ef6ace2ce3bb816225c6a993fe1798edfa468d\",\"dweb:/ipfs/Qmdwx9zzWaFAsxKhhkGDh27UHHe4S2sJMgakMN5oG8EFEV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "Practical6-Buy-Token.sol:BuyToken",
								"label": "TTTToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 88,
								"contract": "Practical6-Buy-Token.sol:BuyToken",
								"label": "locked",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 90,
								"contract": "Practical6-Buy-Token.sol:BuyToken",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 92,
								"contract": "Practical6-Buy-Token.sol:BuyToken",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "149:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "162:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "242:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:9:0"
									},
									"scope": 77,
									"src": "233:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "294:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "380:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "430:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:9:0"
									},
									"scope": 77,
									"src": "371:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "445:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "668:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "685:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "677:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:6:0"
									},
									"scope": 77,
									"src": "659:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "742:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1020:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1038:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1030:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1053:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1085:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:9:0"
									},
									"scope": 77,
									"src": "1011:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1100:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1756:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1772:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1815:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:6:0"
									},
									"scope": 77,
									"src": "1747:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1827:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2137:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2166:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2219:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:6:0"
									},
									"scope": 77,
									"src": "2128:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2231:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2400:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2409:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2447:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2431:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2459:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:57:0"
									},
									"src": "2394:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2472:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 76,
									"name": "Approval",
									"nameLocation": "2631:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2656:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2640:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2663:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2639:63:0"
									},
									"src": "2625:78:0"
								}
							],
							"scope": 78,
							"src": "139:2566:0",
							"usedErrors": []
						}
					],
					"src": "33:2673:0"
				},
				"id": 0
			},
			"Practical6-Buy-Token.sol": {
				"ast": {
					"absolutePath": "Practical6-Buy-Token.sol",
					"exportedSymbols": {
						"BuyToken": [
							191
						],
						"IERC20": [
							77
						]
					},
					"id": 192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 78,
							"src": "72:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BuyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191
							],
							"name": "BuyToken",
							"nameLocation": "145:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7effb427",
									"id": 86,
									"mutability": "mutable",
									"name": "TTTToken",
									"nameLocation": "179:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "165:75:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nameLocations": [
												"165:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "165:6:1"
										},
										"referencedDeclaration": 77,
										"src": "165:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307863366244644364304441316335303238316630326135374238443261646132656246373641454337",
												"id": 84,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "197:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xc6bDdCd0DA1c50281f02a57B8D2ada2ebF76AEC7"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 83,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "190:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "190:50:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "264:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "251:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 87,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "251:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 90,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "296:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "281:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 89,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "281:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 92,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "327:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "312:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "363:46:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "378:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "393:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "378:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "378:19:1"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:1"
									},
									"scope": 191,
									"src": "350:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "57be3b095691f7a70e80aaa69b69ec4b9713302028aebe76ce4629a95380978c",
									"id": 106,
									"name": "topUpSuccessful",
									"nameLocation": "427:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "452:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "444:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "460:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:31:1"
									},
									"src": "421:54:1"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "560:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "583:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "587:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "597:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "583:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "604:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "575:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "575:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "575:45:1"
											},
											{
												"id": 116,
												"nodeType": "PlaceholderStatement",
												"src": "635:1:1"
											}
										]
									},
									"id": 118,
									"name": "onlyOwner",
									"nameLocation": "548:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:1"
									},
									"src": "539:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "709:141:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "732:7:1",
															"subExpression": {
																"id": 121,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "733:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a205265656e7472616e742063616c6c",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "741:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da786e08eddeaa87687a48decd46aa97b4acdacd243581ddf35fe6873058617a",
																"typeString": "literal_string \"Error: Reentrant call\""
															},
															"value": "Error: Reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da786e08eddeaa87687a48decd46aa97b4acdacd243581ddf35fe6873058617a",
																"typeString": "literal_string \"Error: Reentrant call\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "724:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "724:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "724:41:1"
											},
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "780:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "789:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "780:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "780:13:1"
											},
											{
												"id": 130,
												"nodeType": "PlaceholderStatement",
												"src": "808:1:1"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "824:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "833:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "824:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "824:14:1"
											}
										]
									},
									"id": 136,
									"name": "noReentrancy",
									"nameLocation": "694:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"src": "685:165:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "921:49:1",
										"statements": [
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "936:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "936:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "936:22:1"
											}
										]
									},
									"functionSelector": "bbf1095a",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 140,
												"name": "onlyOwner",
												"nameLocations": [
													"912:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "912:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "912:9:1"
										}
									],
									"name": "changeEXCTRate",
									"nameLocation": "871:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:17:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:1"
									},
									"scope": 191,
									"src": "862:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1034:437:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 154,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1057:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1061:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1057:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1070:7:1",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1057:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365206174206c656173742073656e64203120657468657221",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1079:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_705ae17775f3bd69642f9e14bcd50a32997f2b602f84ef4845722efae16cdaf7",
																"typeString": "literal_string \"Please at least send 1 ether!\""
															},
															"value": "Please at least send 1 ether!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_705ae17775f3bd69642f9e14bcd50a32997f2b602f84ef4845722efae16cdaf7",
																"typeString": "literal_string \"Please at least send 1 ether!\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1049:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1049:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 167,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1191:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1195:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1191:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "307839313633663666394138343338323761423266433142306642643935423765463737373633313239",
																			"id": 164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1142:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"value": "0x9163f6f9A843827aB2fC1B0fBd95B7eF77763129"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1134:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 162,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1134:8:1",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1134:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1186:4:1",
																"memberName": "send",
																"nodeType": "MemberAccess",
																"src": "1134:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) returns (bool)"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1134:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1202:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															},
															"value": "transfer fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
																"typeString": "literal_string \"transfer fail\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1126:92:1"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "buyAmount",
														"nameLocation": "1241:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 189,
														"src": "1233:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 175,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1254:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1258:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1254:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1264:7:1",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "1254:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1253:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 180,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1253:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1233:52:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 184,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1435:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1446:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1450:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1446:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "topUpSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1419:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "EmitStatement",
												"src": "1414:43:1"
											}
										]
									},
									"functionSelector": "634a0234",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 150,
												"name": "noReentrancy",
												"nameLocations": [
													"1022:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 136,
												"src": "1022:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1022:12:1"
										}
									],
									"name": "buyTTTToken",
									"nameLocation": "991:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:2:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:1"
									},
									"scope": 191,
									"src": "982:489:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "136:1397:1",
							"usedErrors": []
						}
					],
					"src": "41:1492:1"
				},
				"id": 1
			}
		}
	}
}