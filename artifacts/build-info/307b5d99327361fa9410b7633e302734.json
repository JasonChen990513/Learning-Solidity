{
	"id": "307b5d99327361fa9410b7633e302734",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Practical2-RockPaperScissors-Jason.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ncontract RockPaperScissors {\n    //enum State{Rock, Paper, Scissors}\n    uint public lastChoice;\n\n    uint public playerOption;\n    uint[] public Options;\n    uint[] public randomNumSet;\n    uint public salt = 1;\n\n    function enterOption(uint256 userInput) external {\n        require(userInput <= 3, \"Error: Can't input more than 3\");\n        playerOption = userInput;\n        Options.push(playerOption);\n    }\n\n    function playMutiTimes() \n        external \n        returns (uint[] memory result) {\n            \n            //uint totalNunber = \n            for(uint i = 0; i < 3; i++){\n                randomNumSet.push(getRandomNumber());\n            }\n\n\n\n    \n        return (Options);\n    }\n\n    //declear user 1 and 2\n    // uint256 public user1Choose;\n    // uint256 public user2Choose;\n\n    //what they want to choose\n    function play(uint256 option) \n        external \n        returns (string memory result) {\n        uint256 randomChoice = getRandomNumber();\n        lastChoice = randomChoice;\n\n        require(option <= 3, \"Error: Can't input more than 3\");\n        // 1 = Rock 2 = Paper 3 = Scissors\n        if (option == randomChoice) {\n            return (\"Tied\");\n        }\n        if (\n            (option == 1 && randomChoice == 2) ||\n            (option == 3 && randomChoice == 1) ||\n            (option == 2 && randomChoice == 3)\n        ) {\n            return (\"You lose\");\n        } else {\n            return (\"You won\");\n        }\n    }\n\n    function getRandomNumber() public returns (uint256) {\n        // Increment the seed based on certain parameters\n        // uint256 seed = uint256(\n        //     keccak256(abi.encodePacked(block.timestamp, block.number))\n        // );\n\n        uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1))));\n         \n        // Use the seed to generate three random numbers\n        uint256 random1 = uint256(keccak256(abi.encodePacked(seed, salt)));\n        salt += 1;\n        // Get a random number between 1 and 3\n        return (random1 % 3) + 1;\n    }\n\n    // function user2Dicision(uint256 decisionofRockPaperScissors) external {\n    //     require(\n    //         decisionofRockPaperScissors <= 3,\n    //         \"Error: Can't input more than 3\"\n    //     );\n    //     user2Choose = decisionofRockPaperScissors;\n    // }\n\n    //logic checking\n    // 1 = Rock 2 = Paper 3 = Scissoes\n    // function logicCheck() external view returns (string memory) {\n    //     // if (user1Choose == 1) {\n    //     //     if (user2Choose == 1) return (\"Tie\");\n    //     //     if (user2Choose == 2) return (\"User2 Win!\");\n    //     //     else return (\"User1 Win!\");\n    //     // }\n    //     // if (user1Choose == 2) {\n    //     //     if (user2Choose == 2) return (\"Tie\");\n    //     //     if (user2Choose == 3) return (\"User2 Win!\");\n    //     //     else return (\"User1 Win!\");\n    //     // }\n    //     // if (user1Choose == 3) {\n    //     //     if (user2Choose == 3) return (\"Tie\");\n    //     //     if (user2Choose == 1) return (\"User2 Win!\");\n    //     //     else return (\"User1 Win!\");\n    //     // }\n    //     if (user1Choose == user2Choose) {\n    //         return (\"Tied\");\n    //     }\n\n    //     return (\"something wrong\");\n    // }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Practical2-RockPaperScissors-Jason.sol": {
				"RockPaperScissors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Options",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userInput",
									"type": "uint256"
								}
							],
							"name": "enterOption",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRandomNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastChoice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "option",
									"type": "uint256"
								}
							],
							"name": "play",
							"outputs": [
								{
									"internalType": "string",
									"name": "result",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playMutiTimes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "result",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playerOption",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "randomNumSet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Practical2-RockPaperScissors-Jason.sol\":57:3334  contract RockPaperScissors {... */\n  mstore(0x40, 0x80)\n    /* \"Practical2-RockPaperScissors-Jason.sol\":267:268  1 */\n  0x01\n    /* \"Practical2-RockPaperScissors-Jason.sol\":248:268  uint public salt = 1 */\n  0x04\n  sstore\n    /* \"Practical2-RockPaperScissors-Jason.sol\":57:3334  contract RockPaperScissors {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Practical2-RockPaperScissors-Jason.sol\":57:3334  contract RockPaperScissors {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x58da9da8\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x58da9da8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x614b3757\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6898f82b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbfa0b133\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdbdff2c1\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x010711e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x12220fe3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x233a1a76\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4028e0de\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Practical2-RockPaperScissors-Jason.sol\":130:152  uint public lastChoice */\n    tag_3:\n      tag_13\n      sload(0x00)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Practical2-RockPaperScissors-Jason.sol\":130:152  uint public lastChoice */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Practical2-RockPaperScissors-Jason.sol\":189:210  uint[] public Options */\n    tag_4:\n      tag_13\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"Practical2-RockPaperScissors-Jason.sol\":216:242  uint[] public randomNumSet */\n    tag_5:\n      tag_13\n      tag_23\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"Practical2-RockPaperScissors-Jason.sol\":159:183  uint public playerOption */\n    tag_6:\n      tag_13\n      sload(0x01)\n      dup2\n      jump\n        /* \"Practical2-RockPaperScissors-Jason.sol\":474:754  function playMutiTimes() ... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n        /* \"Practical2-RockPaperScissors-Jason.sol\":275:468  function enterOption(uint256 userInput) external {... */\n    tag_8:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":889:1518  function play(uint256 option) ... */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"Practical2-RockPaperScissors-Jason.sol\":248:268  uint public salt = 1 */\n    tag_10:\n      tag_13\n      sload(0x04)\n      dup2\n      jump\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1524:2133  function getRandomNumber() public returns (uint256) {... */\n    tag_11:\n      tag_13\n      tag_45\n      jump\t// in\n        /* \"Practical2-RockPaperScissors-Jason.sol\":189:210  uint[] public Options */\n    tag_20:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":216:242  uint[] public randomNumSet */\n    tag_24:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Practical2-RockPaperScissors-Jason.sol\":474:754  function playMutiTimes() ... */\n    tag_30:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":535:555  uint[] memory result */\n      0x60\n        /* \"Practical2-RockPaperScissors-Jason.sol\":622:628  uint i */\n      0x00\n        /* \"Practical2-RockPaperScissors-Jason.sol\":618:714  for(uint i = 0; i < 3; i++){... */\n    tag_52:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":638:639  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":634:635  i */\n      dup2\n        /* \"Practical2-RockPaperScissors-Jason.sol\":634:639  i < 3 */\n      lt\n        /* \"Practical2-RockPaperScissors-Jason.sol\":618:714  for(uint i = 0; i < 3; i++){... */\n      iszero\n      tag_53\n      jumpi\n        /* \"Practical2-RockPaperScissors-Jason.sol\":663:675  randomNumSet */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":681:698  getRandomNumber() */\n      tag_55\n        /* \"Practical2-RockPaperScissors-Jason.sol\":681:696  getRandomNumber */\n      tag_45\n        /* \"Practical2-RockPaperScissors-Jason.sol\":681:698  getRandomNumber() */\n      jump\t// in\n    tag_55:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":663:699  randomNumSet.push(getRandomNumber()) */\n      dup2\n      sload\n      0x01\n      dup2\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x20\n      swap1\n      swap3\n      keccak256\n      swap1\n      swap2\n      add\n      sstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":641:644  i++ */\n      dup1\n      tag_57\n      dup2\n      tag_58\n      jump\t// in\n    tag_57:\n      swap2\n      pop\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":618:714  for(uint i = 0; i < 3; i++){... */\n      jump(tag_52)\n    tag_53:\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":739:746  Options */\n      0x02\n        /* \"Practical2-RockPaperScissors-Jason.sol\":731:747  return (Options) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_60:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_60\n      jumpi\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":474:754  function playMutiTimes() ... */\n      swap1\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":275:468  function enterOption(uint256 userInput) external {... */\n    tag_35:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":355:356  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":342:351  userInput */\n      dup2\n        /* \"Practical2-RockPaperScissors-Jason.sol\":342:356  userInput <= 3 */\n      gt\n      iszero\n        /* \"Practical2-RockPaperScissors-Jason.sol\":334:391  require(userInput <= 3, \"Error: Can't input more than 3\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2045:2047   */\n      0x20\n        /* \"Practical2-RockPaperScissors-Jason.sol\":334:391  require(userInput <= 3, \"Error: Can't input more than 3\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2027:2048   */\n      mstore\n        /* \"#utility.yul\":2084:2086   */\n      0x1e\n        /* \"#utility.yul\":2064:2082   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2057:2087   */\n      mstore\n        /* \"#utility.yul\":2123:2155   */\n      0x4572726f723a2043616e277420696e707574206d6f7265207468616e20330000\n        /* \"#utility.yul\":2103:2121   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2096:2156   */\n      mstore\n        /* \"#utility.yul\":2173:2191   */\n      0x64\n      add\n        /* \"Practical2-RockPaperScissors-Jason.sol\":334:391  require(userInput <= 3, \"Error: Can't input more than 3\") */\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":401:413  playerOption */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":401:425  playerOption = userInput */\n      dup2\n      dup2\n      sstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":435:442  Options */\n      0x02\n        /* \"Practical2-RockPaperScissors-Jason.sol\":435:461  Options.push(playerOption) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      0x00\n      mstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      sstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":275:468  function enterOption(uint256 userInput) external {... */\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":889:1518  function play(uint256 option) ... */\n    tag_38:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":955:975  string memory result */\n      0x60\n        /* \"Practical2-RockPaperScissors-Jason.sol\":987:1007  uint256 randomChoice */\n      0x00\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1010:1027  getRandomNumber() */\n      tag_67\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1010:1025  getRandomNumber */\n      tag_45\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1010:1027  getRandomNumber() */\n      jump\t// in\n    tag_67:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1037:1047  lastChoice */\n      0x00\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1037:1062  lastChoice = randomChoice */\n      dup2\n      swap1\n      sstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":987:1027  uint256 randomChoice = getRandomNumber() */\n      swap1\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1091:1092  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1081:1092  option <= 3 */\n      dup4\n      gt\n      iszero\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1073:1127  require(option <= 3, \"Error: Can't input more than 3\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2045:2047   */\n      0x20\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1073:1127  require(option <= 3, \"Error: Can't input more than 3\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2027:2048   */\n      mstore\n        /* \"#utility.yul\":2084:2086   */\n      0x1e\n        /* \"#utility.yul\":2064:2082   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2057:2087   */\n      mstore\n        /* \"#utility.yul\":2123:2155   */\n      0x4572726f723a2043616e277420696e707574206d6f7265207468616e20330000\n        /* \"#utility.yul\":2103:2121   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2096:2156   */\n      mstore\n        /* \"#utility.yul\":2173:2191   */\n      0x64\n      add\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1073:1127  require(option <= 3, \"Error: Can't input more than 3\") */\n      tag_63\n        /* \"#utility.yul\":1843:2197   */\n      jump\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1073:1127  require(option <= 3, \"Error: Can't input more than 3\") */\n    tag_68:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1194:1206  randomChoice */\n      dup1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1184:1190  option */\n      dup4\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1184:1206  option == randomChoice */\n      sub\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1180:1248  if (option == randomChoice) {... */\n      tag_70\n      jumpi\n      pop\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1222:1237  return (\"Tied\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x151a5959)\n      0x20\n      dup3\n      add\n      mstore\n      swap2\n        /* \"Practical2-RockPaperScissors-Jason.sol\":889:1518  function play(uint256 option) ... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1180:1248  if (option == randomChoice) {... */\n    tag_70:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1275:1281  option */\n      dup3\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1285:1286  1 */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1275:1286  option == 1 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1275:1307  option == 1 && randomChoice == 2 */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1290:1302  randomChoice */\n      dup1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1306:1307  2 */\n      0x02\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1290:1307  randomChoice == 2 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1275:1307  option == 1 && randomChoice == 2 */\n    tag_71:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1274:1358  (option == 1 && randomChoice == 2) ||... */\n      dup1\n      tag_73\n      jumpi\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1325:1331  option */\n      dup3\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1335:1336  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1325:1336  option == 3 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1325:1357  option == 3 && randomChoice == 1 */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1340:1352  randomChoice */\n      dup1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1356:1357  1 */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1340:1357  randomChoice == 1 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1325:1357  option == 3 && randomChoice == 1 */\n    tag_73:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1274:1408  (option == 1 && randomChoice == 2) ||... */\n      dup1\n      tag_75\n      jumpi\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1375:1381  option */\n      dup3\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1385:1386  2 */\n      0x02\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1375:1386  option == 2 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1375:1407  option == 2 && randomChoice == 3 */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1390:1402  randomChoice */\n      dup1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1406:1407  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1390:1407  randomChoice == 3 */\n      eq\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1375:1407  option == 2 && randomChoice == 3 */\n    tag_75:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1257:1512  if (... */\n      iszero\n      tag_76\n      jumpi\n      pop\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1433:1452  return (\"You lose\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc0, 0x596f75206c6f7365)\n      0x20\n      dup3\n      add\n      mstore\n      swap2\n        /* \"Practical2-RockPaperScissors-Jason.sol\":889:1518  function play(uint256 option) ... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1257:1512  if (... */\n    tag_76:\n      pop\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1483:1501  return (\"You won\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x07\n      dup2\n      mstore\n      shl(0xc9, 0x2cb7ba903bb7b7)\n      0x20\n      dup3\n      add\n      mstore\n      swap2\n        /* \"Practical2-RockPaperScissors-Jason.sol\":889:1518  function play(uint256 option) ... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1524:2133  function getRandomNumber() public returns (uint256) {... */\n    tag_45:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1567:1574  uint256 */\n      0x00\n      dup1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1818:1833  block.timestamp */\n      timestamp\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1835:1851  block.difficulty */\n      prevrandao\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1863:1879  block.number - 1 */\n      tag_79\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1878:1879  1 */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1863:1875  block.number */\n      number\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1863:1879  block.number - 1 */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1801:1881  abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1)) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":2520:2539   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":2555:2567   */\n      dup4\n      add\n        /* \"#utility.yul\":2548:2576   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1853:1880  blockhash(block.number - 1) */\n      blockhash\n        /* \"#utility.yul\":2592:2604   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":2585:2613   */\n      mstore\n        /* \"#utility.yul\":2629:2641   */\n      0x80\n      add\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1801:1881  abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1)) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1791:1882  keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1))) */\n      dup1\n      mload\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1801:1881  abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1)) */\n      0x20\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1791:1882  keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1))) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2019:2023  salt */\n      sload(0x04)\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1996:2024  abi.encodePacked(seed, salt) */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":2809:2828   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2844:2856   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2837:2865   */\n      mstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1791:1882  keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1))) */\n      swap2\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1783:1883  uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1)))) */\n      0x00\n      swap1\n        /* \"#utility.yul\":2881:2893   */\n      0x60\n      add\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1996:2024  abi.encodePacked(seed, salt) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1986:2025  keccak256(abi.encodePacked(seed, salt)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1978:2026  uint256(keccak256(abi.encodePacked(seed, salt))) */\n      0x00\n      shr\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1960:2026  uint256 random1 = uint256(keccak256(abi.encodePacked(seed, salt))) */\n      swap1\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2044:2045  1 */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2036:2040  salt */\n      0x04\n      0x00\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2036:2045  salt += 1 */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2110:2121  random1 % 3 */\n      tag_87\n      swap1\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2120:2121  3 */\n      0x03\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2110:2117  random1 */\n      dup3\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2110:2121  random1 % 3 */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2109:2126  (random1 % 3) + 1 */\n      tag_89\n      swap1\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2125:2126  1 */\n      0x01\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2109:2126  (random1 % 3) + 1 */\n      tag_86\n      jump\t// in\n    tag_89:\n        /* \"Practical2-RockPaperScissors-Jason.sol\":2102:2126  return (random1 % 3) + 1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Practical2-RockPaperScissors-Jason.sol\":1524:2133  function getRandomNumber() public returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_19:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_94:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:1013   */\n    tag_32:\n        /* \"#utility.yul\":552:554   */\n      0x20\n        /* \"#utility.yul\":604:625   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":674:687   */\n      dup3\n      mload\n        /* \"#utility.yul\":577:595   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":696:718   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":523:527   */\n      0x00\n      swap2\n        /* \"#utility.yul\":552:554   */\n      swap1\n        /* \"#utility.yul\":775:790   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":749:751   */\n      0x40\n        /* \"#utility.yul\":734:752   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":523:527   */\n      dup5\n        /* \"#utility.yul\":818:987   */\n    tag_96:\n        /* \"#utility.yul\":832:838   */\n      dup2\n        /* \"#utility.yul\":829:830   */\n      dup2\n        /* \"#utility.yul\":826:839   */\n      lt\n        /* \"#utility.yul\":818:987   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":893:906   */\n      dup4\n      mload\n        /* \"#utility.yul\":881:907   */\n      dup4\n      mstore\n        /* \"#utility.yul\":962:977   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":927:939   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":854:855   */\n      0x01\n        /* \"#utility.yul\":847:856   */\n      add\n        /* \"#utility.yul\":818:987   */\n      jump(tag_96)\n    tag_98:\n      pop\n        /* \"#utility.yul\":1004:1007   */\n      swap1\n      swap7\n        /* \"#utility.yul\":381:1013   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1566   */\n    tag_40:\n        /* \"#utility.yul\":1130:1134   */\n      0x00\n        /* \"#utility.yul\":1159:1161   */\n      0x20\n        /* \"#utility.yul\":1188:1190   */\n      dup1\n        /* \"#utility.yul\":1177:1186   */\n      dup4\n        /* \"#utility.yul\":1170:1191   */\n      mstore\n        /* \"#utility.yul\":1220:1226   */\n      dup4\n        /* \"#utility.yul\":1214:1227   */\n      mload\n        /* \"#utility.yul\":1263:1269   */\n      dup1\n        /* \"#utility.yul\":1258:1260   */\n      dup3\n        /* \"#utility.yul\":1247:1256   */\n      dup6\n        /* \"#utility.yul\":1243:1261   */\n      add\n        /* \"#utility.yul\":1236:1270   */\n      mstore\n        /* \"#utility.yul\":1288:1289   */\n      0x00\n        /* \"#utility.yul\":1298:1438   */\n    tag_100:\n        /* \"#utility.yul\":1312:1318   */\n      dup2\n        /* \"#utility.yul\":1309:1310   */\n      dup2\n        /* \"#utility.yul\":1306:1319   */\n      lt\n        /* \"#utility.yul\":1298:1438   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1407:1421   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1403:1426   */\n      dup4\n      add\n        /* \"#utility.yul\":1397:1427   */\n      mload\n        /* \"#utility.yul\":1373:1390   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1392:1394   */\n      0x40\n        /* \"#utility.yul\":1369:1395   */\n      add\n        /* \"#utility.yul\":1362:1428   */\n      mstore\n        /* \"#utility.yul\":1327:1337   */\n      dup3\n      add\n        /* \"#utility.yul\":1298:1438   */\n      jump(tag_100)\n    tag_102:\n        /* \"#utility.yul\":1302:1305   */\n      pop\n        /* \"#utility.yul\":1487:1488   */\n      0x00\n        /* \"#utility.yul\":1482:1484   */\n      0x40\n        /* \"#utility.yul\":1473:1479   */\n      dup3\n        /* \"#utility.yul\":1462:1471   */\n      dup7\n        /* \"#utility.yul\":1458:1480   */\n      add\n        /* \"#utility.yul\":1454:1485   */\n      add\n        /* \"#utility.yul\":1447:1489   */\n      mstore\n        /* \"#utility.yul\":1557:1559   */\n      0x40\n        /* \"#utility.yul\":1550:1552   */\n      0x1f\n        /* \"#utility.yul\":1546:1553   */\n      not\n        /* \"#utility.yul\":1541:1543   */\n      0x1f\n        /* \"#utility.yul\":1533:1539   */\n      dup4\n        /* \"#utility.yul\":1529:1544   */\n      add\n        /* \"#utility.yul\":1525:1554   */\n      and\n        /* \"#utility.yul\":1514:1523   */\n      dup6\n        /* \"#utility.yul\":1510:1555   */\n      add\n        /* \"#utility.yul\":1506:1560   */\n      add\n        /* \"#utility.yul\":1498:1560   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1018:1566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1571:1698   */\n    tag_90:\n        /* \"#utility.yul\":1632:1642   */\n      0x4e487b71\n        /* \"#utility.yul\":1627:1630   */\n      0xe0\n        /* \"#utility.yul\":1623:1643   */\n      shl\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1613:1644   */\n      mstore\n        /* \"#utility.yul\":1663:1667   */\n      0x11\n        /* \"#utility.yul\":1660:1661   */\n      0x04\n        /* \"#utility.yul\":1653:1668   */\n      mstore\n        /* \"#utility.yul\":1687:1691   */\n      0x24\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1692   */\n      revert\n        /* \"#utility.yul\":1703:1838   */\n    tag_58:\n        /* \"#utility.yul\":1742:1745   */\n      0x00\n        /* \"#utility.yul\":1763:1780   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":1760:1803   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1783:1801   */\n      tag_106\n      tag_90\n      jump\t// in\n    tag_106:\n      pop\n        /* \"#utility.yul\":1830:1831   */\n      0x01\n        /* \"#utility.yul\":1819:1832   */\n      add\n      swap1\n        /* \"#utility.yul\":1703:1838   */\n      jump\t// out\n        /* \"#utility.yul\":2202:2330   */\n    tag_80:\n        /* \"#utility.yul\":2269:2278   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2290:2301   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2287:2324   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2304:2322   */\n      tag_110\n      tag_90\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2202:2330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2904:3029   */\n    tag_86:\n        /* \"#utility.yul\":2969:2978   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2990:3000   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2987:3023   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":3003:3021   */\n      tag_110\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":3034:3243   */\n    tag_88:\n        /* \"#utility.yul\":3066:3067   */\n      0x00\n        /* \"#utility.yul\":3092:3093   */\n      dup3\n        /* \"#utility.yul\":3082:3214   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":3136:3146   */\n      0x4e487b71\n        /* \"#utility.yul\":3131:3134   */\n      0xe0\n        /* \"#utility.yul\":3127:3147   */\n      shl\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3117:3148   */\n      mstore\n        /* \"#utility.yul\":3171:3175   */\n      0x12\n        /* \"#utility.yul\":3168:3169   */\n      0x04\n        /* \"#utility.yul\":3161:3176   */\n      mstore\n        /* \"#utility.yul\":3199:3203   */\n      0x24\n        /* \"#utility.yul\":3196:3197   */\n      0x00\n        /* \"#utility.yul\":3189:3204   */\n      revert\n        /* \"#utility.yul\":3082:3214   */\n    tag_117:\n      pop\n        /* \"#utility.yul\":3228:3237   */\n      mod\n      swap1\n        /* \"#utility.yul\":3034:3243   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fb314e90850608c270081c00151099a36dc767a64afdae60a07660912a44322b64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600160045534801561001557600080fd5b506105b2806100256000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806358da9da81161006657806358da9da8146100e3578063614b3757146100f85780636898f82b1461010d578063bfa0b1331461012d578063dbdff2c11461013657600080fd5b8063010711e31461009857806312220fe3146100b4578063233a1a76146100c75780634028e0de146100da575b600080fd5b6100a160005481565b6040519081526020015b60405180910390f35b6100a16100c2366004610454565b61013e565b6100a16100d5366004610454565b61015f565b6100a160015481565b6100eb61016f565b6040516100ab919061046d565b61010b610106366004610454565b610206565b005b61012061011b366004610454565b610292565b6040516100ab91906104b1565b6100a160045481565b6100a16103ab565b6002818154811061014e57600080fd5b600091825260209091200154905081565b6003818154811061014e57600080fd5b606060005b60038110156101af5760036101876103ab565b81546001810183556000928352602090922090910155806101a781610515565b915050610174565b5060028054806020026020016040519081016040528092919081815260200182805480156101fc57602002820191906000526020600020905b8154815260200190600101908083116101e8575b5050505050905090565b600381111561025c5760405162461bcd60e51b815260206004820152601e60248201527f4572726f723a2043616e277420696e707574206d6f7265207468616e2033000060448201526064015b60405180910390fd5b60018181556002805491820181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6060600061029e6103ab565b6000819055905060038311156102f65760405162461bcd60e51b815260206004820152601e60248201527f4572726f723a2043616e277420696e707574206d6f7265207468616e203300006044820152606401610253565b80830361031f575050604080518082019091526004815263151a595960e21b6020820152919050565b82600114801561032f5750806002145b8061034557508260031480156103455750806001145b8061035b575082600214801561035b5750806003145b15610386575050604080518082019091526008815267596f75206c6f736560c01b6020820152919050565b50506040805180820190915260078152662cb7ba903bb7b760c91b6020820152919050565b60008042446103bb60014361052e565b60408051602081019490945283019190915240606082015260800160408051601f1981840301815282825280516020918201206004549184018190529183015291506000906060016040516020818303038152906040528051906020012060001c90506001600460008282546104319190610547565b90915550610442905060038261055a565b61044d906001610547565b9250505090565b60006020828403121561046657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104a557835183529284019291840191600101610489565b50909695505050505050565b600060208083528351808285015260005b818110156104de578581018301518582016040015282016104c2565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b600060018201610527576105276104ff565b5060010190565b81810381811115610541576105416104ff565b92915050565b80820180821115610541576105416104ff565b60008261057757634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220fb314e90850608c270081c00151099a36dc767a64afdae60a07660912a44322b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B2 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58DA9DA8 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x58DA9DA8 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x614B3757 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xBFA0B133 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10711E3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x12220FE3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x233A1A76 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x4028E0DE EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH2 0xA1 PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x10B PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x3 PUSH2 0x187 PUSH2 0x3AB JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x1A7 DUP2 PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x174 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2043616E277420696E707574206D6F7265207468616E20330000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x29E PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2043616E277420696E707574206D6F7265207468616E20330000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x253 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x31F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x151A5959 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x32F JUMPI POP DUP1 PUSH1 0x2 EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP DUP3 PUSH1 0x3 EQ DUP1 ISZERO PUSH2 0x345 JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST DUP1 PUSH2 0x35B JUMPI POP DUP3 PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x35B JUMPI POP DUP1 PUSH1 0x3 EQ JUMPDEST ISZERO PUSH2 0x386 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x596F75206C6F7365 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x2CB7BA903BB7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PREVRANDAO PUSH2 0x3BB PUSH1 0x1 NUMBER PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x4 SLOAD SWAP2 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x547 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x442 SWAP1 POP PUSH1 0x3 DUP3 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x44D SWAP1 PUSH1 0x1 PUSH2 0x547 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x489 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4DE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4C2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x527 JUMPI PUSH2 0x527 PUSH2 0x4FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x541 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x541 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB BALANCE 0x4E SWAP1 DUP6 MOD ADDMOD 0xC2 PUSH17 0x81C00151099A36DC767A64AFDAE60A076 PUSH1 0x91 0x2A PREVRANDAO ORIGIN 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "57:3277:0:-:0;;;267:1;248:20;;57:3277;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Options_8": {
									"entryPoint": 318,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enterOption_37": {
									"entryPoint": 518,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRandomNumber_184": {
									"entryPoint": 939,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastChoice_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@playMutiTimes_66": {
									"entryPoint": 367,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@play_133": {
									"entryPoint": 658,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@playerOption_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@randomNumSet_11": {
									"entryPoint": 351,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@salt_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3245:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:1"
															},
															"nodeType": "YulIf",
															"src": "276:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:1",
														"type": ""
													}
												],
												"src": "196:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "532:481:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "542:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "552:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "546:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "563:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "581:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "592:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "567:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "611:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "622:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "604:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "604:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "634:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "645:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "638:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "660:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "680:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "674:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "664:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "703:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "696:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "727:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "761:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "779:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "787:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "765:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "799:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "808:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "803:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "867:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "888:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "899:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "893:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "893:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "881:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "881:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "881:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "920:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "931:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "936:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "927:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "927:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "920:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "952:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "966:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "974:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "962:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "962:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "829:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "832:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "826:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "840:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "842:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "851:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "847:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "842:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "822:3:1",
																"statements": []
															},
															"src": "818:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "996:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1004:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "996:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "501:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "512:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "523:4:1",
														"type": ""
													}
												],
												"src": "381:632:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1149:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1159:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1153:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1177:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1188:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1220:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1214:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1204:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1247:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1258:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1243:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1279:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1288:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1283:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1348:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1377:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1388:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1373:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1373:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1392:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1369:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1411:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1419:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1407:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1407:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1423:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1403:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1403:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1397:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1397:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1309:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1312:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1320:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1322:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1331:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1334:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1327:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1327:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1322:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1302:3:1",
																"statements": []
															},
															"src": "1298:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1462:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1458:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1482:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1447:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1498:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1514:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1533:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1541:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1529:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1529:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1550:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1546:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1546:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1525:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1525:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1510:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1498:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1108:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1119:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1130:4:1",
														"type": ""
													}
												],
												"src": "1018:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1627:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1632:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1613:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1571:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1750:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1781:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1783:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1783:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1766:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1777:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:17:1"
															},
															"nodeType": "YulIf",
															"src": "1760:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1812:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1823:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1830:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1732:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1742:3:1",
														"type": ""
													}
												],
												"src": "1703:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2017:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2034:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2027:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2079:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2064:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2057:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:1"
																	},
																	{
																		"hexValue": "4572726f723a2043616e277420696e707574206d6f7265207468616e2033",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2123:32:1",
																		"type": "",
																		"value": "Error: Can't input more than 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2096:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2165:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2177:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2188:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2173:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2165:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1994:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2008:4:1",
														"type": ""
													}
												],
												"src": "1843:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2273:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2276:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2269:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2261:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2302:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2304:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2304:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2304:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2293:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2299:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2290:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:11:1"
															},
															"nodeType": "YulIf",
															"src": "2287:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2233:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2236:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2242:4:1",
														"type": ""
													}
												],
												"src": "2202:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2510:137:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2527:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2532:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2520:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2559:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2555:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2548:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2601:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2622:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2633:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2470:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2475:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2483:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2491:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2502:3:1",
														"type": ""
													}
												],
												"src": "2335:312:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2799:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2816:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2821:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2809:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2848:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2858:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2837:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2874:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2885:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2890:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2767:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2772:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2791:3:1",
														"type": ""
													}
												],
												"src": "2652:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2962:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2973:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2976:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2962:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3001:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3003:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3003:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3003:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2993:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2996:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2990:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:10:1"
															},
															"nodeType": "YulIf",
															"src": "2987:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2935:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2938:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2944:3:1",
														"type": ""
													}
												],
												"src": "2904:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3103:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3131:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3136:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3127:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3127:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3168:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3171:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3161:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3161:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3189:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3189:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3092:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:9:1"
															},
															"nodeType": "YulIf",
															"src": "3082:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3223:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3232:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3235:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3223:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3057:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3060:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3066:1:1",
														"type": ""
													}
												],
												"src": "3034:209:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Error: Can't input more than 3\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        end := add(pos, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806358da9da81161006657806358da9da8146100e3578063614b3757146100f85780636898f82b1461010d578063bfa0b1331461012d578063dbdff2c11461013657600080fd5b8063010711e31461009857806312220fe3146100b4578063233a1a76146100c75780634028e0de146100da575b600080fd5b6100a160005481565b6040519081526020015b60405180910390f35b6100a16100c2366004610454565b61013e565b6100a16100d5366004610454565b61015f565b6100a160015481565b6100eb61016f565b6040516100ab919061046d565b61010b610106366004610454565b610206565b005b61012061011b366004610454565b610292565b6040516100ab91906104b1565b6100a160045481565b6100a16103ab565b6002818154811061014e57600080fd5b600091825260209091200154905081565b6003818154811061014e57600080fd5b606060005b60038110156101af5760036101876103ab565b81546001810183556000928352602090922090910155806101a781610515565b915050610174565b5060028054806020026020016040519081016040528092919081815260200182805480156101fc57602002820191906000526020600020905b8154815260200190600101908083116101e8575b5050505050905090565b600381111561025c5760405162461bcd60e51b815260206004820152601e60248201527f4572726f723a2043616e277420696e707574206d6f7265207468616e2033000060448201526064015b60405180910390fd5b60018181556002805491820181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6060600061029e6103ab565b6000819055905060038311156102f65760405162461bcd60e51b815260206004820152601e60248201527f4572726f723a2043616e277420696e707574206d6f7265207468616e203300006044820152606401610253565b80830361031f575050604080518082019091526004815263151a595960e21b6020820152919050565b82600114801561032f5750806002145b8061034557508260031480156103455750806001145b8061035b575082600214801561035b5750806003145b15610386575050604080518082019091526008815267596f75206c6f736560c01b6020820152919050565b50506040805180820190915260078152662cb7ba903bb7b760c91b6020820152919050565b60008042446103bb60014361052e565b60408051602081019490945283019190915240606082015260800160408051601f1981840301815282825280516020918201206004549184018190529183015291506000906060016040516020818303038152906040528051906020012060001c90506001600460008282546104319190610547565b90915550610442905060038261055a565b61044d906001610547565b9250505090565b60006020828403121561046657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104a557835183529284019291840191600101610489565b50909695505050505050565b600060208083528351808285015260005b818110156104de578581018301518582016040015282016104c2565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b600060018201610527576105276104ff565b5060010190565b81810381811115610541576105416104ff565b92915050565b80820180821115610541576105416104ff565b60008261057757634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220fb314e90850608c270081c00151099a36dc767a64afdae60a07660912a44322b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58DA9DA8 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x58DA9DA8 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x614B3757 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xBFA0B133 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10711E3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x12220FE3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x233A1A76 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x4028E0DE EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH2 0xA1 PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x10B PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x3 PUSH2 0x187 PUSH2 0x3AB JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x1A7 DUP2 PUSH2 0x515 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x174 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1E8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2043616E277420696E707574206D6F7265207468616E20330000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x29E PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F723A2043616E277420696E707574206D6F7265207468616E20330000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x253 JUMP JUMPDEST DUP1 DUP4 SUB PUSH2 0x31F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x151A5959 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x32F JUMPI POP DUP1 PUSH1 0x2 EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP DUP3 PUSH1 0x3 EQ DUP1 ISZERO PUSH2 0x345 JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST DUP1 PUSH2 0x35B JUMPI POP DUP3 PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x35B JUMPI POP DUP1 PUSH1 0x3 EQ JUMPDEST ISZERO PUSH2 0x386 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x596F75206C6F7365 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x2CB7BA903BB7B7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PREVRANDAO PUSH2 0x3BB PUSH1 0x1 NUMBER PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x4 SLOAD SWAP2 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x547 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x442 SWAP1 POP PUSH1 0x3 DUP3 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x44D SWAP1 PUSH1 0x1 PUSH2 0x547 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x489 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4DE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4C2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x527 JUMPI PUSH2 0x527 PUSH2 0x4FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x541 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x541 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB BALANCE 0x4E SWAP1 DUP6 MOD ADDMOD 0xC2 PUSH17 0x81C00151099A36DC767A64AFDAE60A076 PUSH1 0x91 0x2A PREVRANDAO ORIGIN 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "57:3277:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:22;;;;;;;;;160:25:1;;;148:2;133:18;130:22:0;;;;;;;;189:21;;;;;;:::i;:::-;;:::i;216:26::-;;;;;;:::i;:::-;;:::i;159:24::-;;;;;;474:280;;;:::i;:::-;;;;;;;:::i;275:193::-;;;;;;:::i;:::-;;:::i;:::-;;889:629;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;248:20::-;;;;;;1524:609;;;:::i;189:21::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:21:0;:::o;216:26::-;;;;;;;;;;;;474:280;535:20;622:6;618:96;638:1;634;:5;618:96;;;663:12;681:17;:15;:17::i;:::-;663:36;;;;;;;-1:-1:-1;663:36:0;;;;;;;;;;;641:3;;;;:::i;:::-;;;;618:96;;;;739:7;731:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:280;:::o;275:193::-;355:1;342:9;:14;;334:57;;;;-1:-1:-1;;;334:57:0;;2045:2:1;334:57:0;;;2027:21:1;2084:2;2064:18;;;2057:30;2123:32;2103:18;;;2096:60;2173:18;;334:57:0;;;;;;;;;401:12;:24;;;435:7;:26;;;;;;;-1:-1:-1;435:26:0;;;;275:193::o;889:629::-;955:20;987;1010:17;:15;:17::i;:::-;1037:10;:25;;;987:40;-1:-1:-1;1091:1:0;1081:11;;;1073:54;;;;-1:-1:-1;;;1073:54:0;;2045:2:1;1073:54:0;;;2027:21:1;2084:2;2064:18;;;2057:30;2123:32;2103:18;;;2096:60;2173:18;;1073:54:0;1843:354:1;1073:54:0;1194:12;1184:6;:22;1180:68;;-1:-1:-1;;1222:15:0;;;;;;;;;;;;-1:-1:-1;;;1222:15:0;;;;;889:629;-1:-1:-1;889:629:0:o;1180:68::-;1275:6;1285:1;1275:11;:32;;;;;1290:12;1306:1;1290:17;1275:32;1274:84;;;;1325:6;1335:1;1325:11;:32;;;;;1340:12;1356:1;1340:17;1325:32;1274:134;;;;1375:6;1385:1;1375:11;:32;;;;;1390:12;1406:1;1390:17;1375:32;1257:255;;;-1:-1:-1;;1433:19:0;;;;;;;;;;;;-1:-1:-1;;;1433:19:0;;;;;889:629;-1:-1:-1;889:629:0:o;1257:255::-;-1:-1:-1;;1483:18:0;;;;;;;;;;;;-1:-1:-1;;;1483:18:0;;;;;889:629;-1:-1:-1;889:629:0:o;1524:609::-;1567:7;;1818:15;1835:16;1863;1878:1;1863:12;:16;:::i;:::-;1801:80;;;;;;2520:19:1;;;;2555:12;;2548:28;;;;1853:27:0;2592:12:1;;;2585:28;2629:12;;1801:80:0;;;-1:-1:-1;;1801:80:0;;;;;;;;;1791:91;;1801:80;1791:91;;;;2019:4;;1996:28;;;2809:19:1;;;2844:12;;;2837:28;1791:91:0;-1:-1:-1;1783:100:0;;2881:12:1;;1996:28:0;;;;;;;;;;;;1986:39;;;;;;1978:48;;1960:66;;2044:1;2036:4;;:9;;;;;;;:::i;:::-;;;;-1:-1:-1;2110:11:0;;-1:-1:-1;2120:1:0;2110:7;:11;:::i;:::-;2109:17;;2125:1;2109:17;:::i;:::-;2102:24;;;;1524:609;:::o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o;381:632::-;552:2;604:21;;;674:13;;577:18;;;696:22;;;523:4;;552:2;775:15;;;;749:2;734:18;;;523:4;818:169;832:6;829:1;826:13;818:169;;;893:13;;881:26;;962:15;;;;927:12;;;;854:1;847:9;818:169;;;-1:-1:-1;1004:3:1;;381:632;-1:-1:-1;;;;;;381:632:1:o;1018:548::-;1130:4;1159:2;1188;1177:9;1170:21;1220:6;1214:13;1263:6;1258:2;1247:9;1243:18;1236:34;1288:1;1298:140;1312:6;1309:1;1306:13;1298:140;;;1407:14;;;1403:23;;1397:30;1373:17;;;1392:2;1369:26;1362:66;1327:10;;1298:140;;;1302:3;1487:1;1482:2;1473:6;1462:9;1458:22;1454:31;1447:42;1557:2;1550;1546:7;1541:2;1533:6;1529:15;1525:29;1514:9;1510:45;1506:54;1498:62;;;;1018:548;;;;:::o;1571:127::-;1632:10;1627:3;1623:20;1620:1;1613:31;1663:4;1660:1;1653:15;1687:4;1684:1;1677:15;1703:135;1742:3;1763:17;;;1760:43;;1783:18;;:::i;:::-;-1:-1:-1;1830:1:1;1819:13;;1703:135::o;2202:128::-;2269:9;;;2290:11;;;2287:37;;;2304:18;;:::i;:::-;2202:128;;;;:::o;2904:125::-;2969:9;;;2990:10;;;2987:36;;;3003:18;;:::i;3034:209::-;3066:1;3092;3082:132;;3136:10;3131:3;3127:20;3124:1;3117:31;3171:4;3168:1;3161:15;3199:4;3196:1;3189:15;3082:132;-1:-1:-1;3228:9:1;;3034:209::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "291600",
								"executionCost": "22437",
								"totalCost": "314037"
							},
							"external": {
								"Options(uint256)": "4587",
								"enterOption(uint256)": "68708",
								"getRandomNumber()": "infinite",
								"lastChoice()": "2285",
								"play(uint256)": "infinite",
								"playMutiTimes()": "infinite",
								"playerOption()": "2351",
								"randomNumSet(uint256)": "4609",
								"salt()": "2350"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 3334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb314e90850608c270081c00151099a36dc767a64afdae60a07660912a44322b64736f6c63430008130033",
									".code": [
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "58DA9DA8"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "58DA9DA8"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "614B3757"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "6898F82B"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "BFA0B133"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "DBDFF2C1"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "10711E3"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "12220FE3"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "233A1A76"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "4028E0DE"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 152,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 189,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 216,
											"end": 242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 159,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 474,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 474,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 275,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1524,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 189,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 474,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 535,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 618,
											"end": 714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 618,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 663,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 681,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 681,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 681,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 681,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 663,
											"end": 699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 641,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 739,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 731,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 275,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 342,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 342,
											"end": 356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 334,
											"end": 391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A2043616E277420696E707574206D6F7265207468616E20330000"
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 334,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 334,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 334,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 275,
											"end": 468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 987,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1010,
											"end": 1027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1062,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1081,
											"end": 1092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1092,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F723A2043616E277420696E707574206D6F7265207468616E20330000"
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1843,
											"end": 2197,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1073,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1180,
											"end": 1248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1180,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1286,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1290,
											"end": 1307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1275,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1274,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1325,
											"end": 1336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1340,
											"end": 1357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1390,
											"end": 1407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1257,
											"end": 1512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596F75206C6F7365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1257,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA903BB7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1833,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1851,
											"name": "PREVRANDAO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1863,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1880,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1783,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2025,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2026,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2036,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2110,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2109,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 381,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 381,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 604,
											"end": 625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 604,
											"end": 625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 674,
											"end": 687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 674,
											"end": 687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 577,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 696,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 775,
											"end": 790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 775,
											"end": 790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 775,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 775,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 523,
											"end": 527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 818,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 818,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 839,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 818,
											"end": 987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 818,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 818,
											"end": 987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 893,
											"end": 906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 893,
											"end": 906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 881,
											"end": 907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 962,
											"end": 977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 962,
											"end": 977,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 962,
											"end": 977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 927,
											"end": 939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 927,
											"end": 939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 927,
											"end": 939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 818,
											"end": 987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 818,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 381,
											"end": 1013,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 381,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1319,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1298,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1471,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1571,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1623,
											"end": 1643,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1838,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1703,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1760,
											"end": 1803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1783,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2287,
											"end": 2324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2304,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2304,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2904,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2987,
											"end": 3023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3003,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3243,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3034,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3082,
											"end": 3214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3131,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3127,
											"end": 3147,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3204,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3082,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Practical2-RockPaperScissors-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Options(uint256)": "12220fe3",
							"enterOption(uint256)": "614b3757",
							"getRandomNumber()": "dbdff2c1",
							"lastChoice()": "010711e3",
							"play(uint256)": "6898f82b",
							"playMutiTimes()": "58da9da8",
							"playerOption()": "4028e0de",
							"randomNumSet(uint256)": "233a1a76",
							"salt()": "bfa0b133"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Options\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userInput\",\"type\":\"uint256\"}],\"name\":\"enterOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastChoice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playMutiTimes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"result\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerOption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"randomNumSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Practical2-RockPaperScissors-Jason.sol\":\"RockPaperScissors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Practical2-RockPaperScissors-Jason.sol\":{\"keccak256\":\"0xa25b3ef1d7c8b02826ea771547b72b15bd8956e8735d4265992a266a3cb0cd52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://073c2c203f4b51a96226b1a33af29c1a87a34f94202e59dbd9a588c1e7c39da2\",\"dweb:/ipfs/QmTNAhHeE2QSiEMKGPyiNjBYy96awEZxQX6pDV1QjpBgER\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Practical2-RockPaperScissors-Jason.sol:RockPaperScissors",
								"label": "lastChoice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "Practical2-RockPaperScissors-Jason.sol:RockPaperScissors",
								"label": "playerOption",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "Practical2-RockPaperScissors-Jason.sol:RockPaperScissors",
								"label": "Options",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 11,
								"contract": "Practical2-RockPaperScissors-Jason.sol:RockPaperScissors",
								"label": "randomNumSet",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 14,
								"contract": "Practical2-RockPaperScissors-Jason.sol:RockPaperScissors",
								"label": "salt",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n  --> Practical2-RockPaperScissors-Jason.sol:67:76:\n   |\n67 |         uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty, blockhash(block.number - 1))));\n   |                                                                            ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1851,
					"file": "Practical2-RockPaperScissors-Jason.sol",
					"start": 1835
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Practical2-RockPaperScissors-Jason.sol": {
				"ast": {
					"absolutePath": "Practical2-RockPaperScissors-Jason.sol",
					"exportedSymbols": {
						"RockPaperScissors": [
							185
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RockPaperScissors",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "RockPaperScissors",
							"nameLocation": "66:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "010711e3",
									"id": 3,
									"mutability": "mutable",
									"name": "lastChoice",
									"nameLocation": "142:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "130:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "130:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4028e0de",
									"id": 5,
									"mutability": "mutable",
									"name": "playerOption",
									"nameLocation": "171:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "159:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "159:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12220fe3",
									"id": 8,
									"mutability": "mutable",
									"name": "Options",
									"nameLocation": "203:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "189:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 6,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "189:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 7,
										"nodeType": "ArrayTypeName",
										"src": "189:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "233a1a76",
									"id": 11,
									"mutability": "mutable",
									"name": "randomNumSet",
									"nameLocation": "230:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "216:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 9,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "216:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 10,
										"nodeType": "ArrayTypeName",
										"src": "216:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bfa0b133",
									"id": 14,
									"mutability": "mutable",
									"name": "salt",
									"nameLocation": "260:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "248:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "248:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "267:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "324:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "userInput",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "342:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "33",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "355:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "342:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2043616e277420696e707574206d6f7265207468616e2033",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "358:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4",
																"typeString": "literal_string \"Error: Can't input more than 3\""
															},
															"value": "Error: Can't input more than 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4",
																"typeString": "literal_string \"Error: Can't input more than 3\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "334:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "334:57:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "playerOption",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "401:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 27,
														"name": "userInput",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "401:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "401:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "playerOption",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "448:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 30,
															"name": "Options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "443:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "435:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "435:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "435:26:0"
											}
										]
									},
									"functionSelector": "614b3757",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterOption",
									"nameLocation": "284:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "userInput",
												"nameLocation": "304:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "296:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:19:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 185,
									"src": "275:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "557:197:0",
										"statements": [
											{
												"body": {
													"id": 60,
													"nodeType": "Block",
													"src": "645:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 56,
																			"name": "getRandomNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "681:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
																				"typeString": "function () returns (uint256)"
																			}
																		},
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "681:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 53,
																		"name": "randomNumSet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "663:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "676:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "663:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "663:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 59,
															"nodeType": "ExpressionStatement",
															"src": "663:36:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 47,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "638:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "634:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"initializationExpression": {
													"assignments": [
														44
													],
													"declarations": [
														{
															"constant": false,
															"id": 44,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "627:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 61,
															"src": "622:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 43,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "622:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 46,
													"initialValue": {
														"hexValue": "30",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "622:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "641:3:0",
														"subExpression": {
															"id": 50,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "641:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 52,
													"nodeType": "ExpressionStatement",
													"src": "641:3:0"
												},
												"nodeType": "ForStatement",
												"src": "618:96:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 62,
															"name": "Options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"id": 63,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "738:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 42,
												"id": 64,
												"nodeType": "Return",
												"src": "731:16:0"
											}
										]
									},
									"functionSelector": "58da9da8",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playMutiTimes",
									"nameLocation": "483:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "549:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "535:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 39,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "535:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 40,
													"nodeType": "ArrayTypeName",
													"src": "535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:22:0"
									},
									"scope": 185,
									"src": "474:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "977:541:0",
										"statements": [
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "randomChoice",
														"nameLocation": "995:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "987:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 75,
														"name": "getRandomNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1010:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "987:40:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "lastChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1037:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "randomChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1050:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1037:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1037:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "option",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1081:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "33",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1081:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a2043616e277420696e707574206d6f7265207468616e2033",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1094:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4",
																"typeString": "literal_string \"Error: Can't input more than 3\""
															},
															"value": "Error: Can't input more than 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eec9cb4e664cf8fef517f51fd98f3322b53cb58349405da26bef1d172903cea4",
																"typeString": "literal_string \"Error: Can't input more than 3\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1073:54:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "option",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1184:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 90,
														"name": "randomChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1194:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1184:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 96,
												"nodeType": "IfStatement",
												"src": "1180:68:0",
												"trueBody": {
													"id": 95,
													"nodeType": "Block",
													"src": "1208:40:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "54696564",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1230:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_aee63a7029b541d0dc6ecaabf448f12d8c60bef03abcb9b249a08353cb5bdb0e",
																			"typeString": "literal_string \"Tied\""
																		},
																		"value": "Tied"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1229:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_aee63a7029b541d0dc6ecaabf448f12d8c60bef03abcb9b249a08353cb5bdb0e",
																	"typeString": "literal_string \"Tied\""
																}
															},
															"functionReturnParameters": 72,
															"id": 94,
															"nodeType": "Return",
															"src": "1222:15:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 97,
																			"name": "option",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1275:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 98,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1285:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1275:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 100,
																			"name": "randomChoice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "1290:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1306:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1290:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1275:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 104,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1274:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 105,
																			"name": "option",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1325:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1325:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 108,
																			"name": "randomChoice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "1340:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1356:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1340:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1325:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 112,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1324:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1274:84:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 114,
																		"name": "option",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "1375:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1385:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1375:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 117,
																		"name": "randomChoice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1390:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "1390:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1375:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 121,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1374:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1274:134:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 130,
													"nodeType": "Block",
													"src": "1469:43:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "596f7520776f6e",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1491:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_44b2136a2ac1e3678cd16a1fa587a5bf36722fbb569359b82ff2bd2d62082309",
																			"typeString": "literal_string \"You won\""
																		},
																		"value": "You won"
																	}
																],
																"id": 128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1490:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_44b2136a2ac1e3678cd16a1fa587a5bf36722fbb569359b82ff2bd2d62082309",
																	"typeString": "literal_string \"You won\""
																}
															},
															"functionReturnParameters": 72,
															"id": 129,
															"nodeType": "Return",
															"src": "1483:18:0"
														}
													]
												},
												"id": 131,
												"nodeType": "IfStatement",
												"src": "1257:255:0",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1419:44:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "596f75206c6f7365",
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1441:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5eea7cf2d8547ad7a8106609f22550c3efc111c0db298d32522b5db14edd7dba",
																			"typeString": "literal_string \"You lose\""
																		},
																		"value": "You lose"
																	}
																],
																"id": 124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1440:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5eea7cf2d8547ad7a8106609f22550c3efc111c0db298d32522b5db14edd7dba",
																	"typeString": "literal_string \"You lose\""
																}
															},
															"functionReturnParameters": 72,
															"id": 125,
															"nodeType": "Return",
															"src": "1433:19:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6898f82b",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "play",
									"nameLocation": "898:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "option",
												"nameLocation": "911:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "903:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:16:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "969:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "955:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:22:0"
									},
									"scope": 185,
									"src": "889:629:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1576:557:0",
										"statements": [
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "seed",
														"nameLocation": "1776:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "1768:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 158,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 145,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1818:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1824:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1818:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 147,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1835:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1841:10:0",
																			"memberName": "difficulty",
																			"nodeType": "MemberAccess",
																			"src": "1835:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 153,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 150,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1863:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1869:6:0",
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"src": "1863:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1878:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1863:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 149,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "1853:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1853:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 143,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1801:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1805:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1801:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1801:80:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 142,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1791:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1791:91:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1783:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1768:115:0"
											},
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "random1",
														"nameLocation": "1968:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 183,
														"src": "1960:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 166,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2013:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 167,
																			"name": "salt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "2019:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 164,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1996:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2000:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1996:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1996:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 163,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1986:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1986:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1978:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1978:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1960:66:0"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2036:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2044:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2036:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2036:9:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 176,
																	"name": "random1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "2110:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2120:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "2110:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2109:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2109:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 137,
												"id": 182,
												"nodeType": "Return",
												"src": "2102:24:0"
											}
										]
									},
									"functionSelector": "dbdff2c1",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomNumber",
									"nameLocation": "1533:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:9:0"
									},
									"scope": 185,
									"src": "1524:609:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 186,
							"src": "57:3277:0",
							"usedErrors": []
						}
					],
					"src": "32:3303:0"
				},
				"id": 0
			}
		}
	}
}