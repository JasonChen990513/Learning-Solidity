{
	"id": "bb95a6bea5a86b2b88bcacabd5c009ce",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"TTT_ERC1155Token-Jason.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\n// import \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\n\r\n// import \"@openzeppelin/contracts/utils/Strings.sol\";\r\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n// import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract ERC165 is IERC165 {\r\n    /*\r\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\r\n\r\n    /**\r\n     * @dev Mapping of interface ids to whether or not it's supported.\r\n     */\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor () internal {\r\n        // Derived contracts need only register support for their own interfaces,\r\n        // we register support for ERC165 itself here\r\n        _registerInterface(_INTERFACE_ID_ERC165);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     *\r\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    /**\r\n     * @dev Registers the contract as an implementer of the interface defined by\r\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\r\n     * registering its interface id is not required.\r\n     *\r\n     * See {IERC165-supportsInterface}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\r\n     */\r\n    function _registerInterface(bytes4 interfaceId) internal virtual {\r\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\r\n        _supportedInterfaces[interfaceId] = true;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\r\n}\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        uint256 index = digits - 1;\r\n        temp = value;\r\n        while (temp != 0) {\r\n            buffer[index--] = bytes1(uint8(48 + temp % 10));\r\n            temp /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping (uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /*\r\n     *     bytes4(keccak256('balanceOf(address,uint256)')) == 0x00fdd58e\r\n     *     bytes4(keccak256('balanceOfBatch(address[],uint256[])')) == 0x4e1273f4\r\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\r\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\r\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,uint256,bytes)')) == 0xf242432a\r\n     *     bytes4(keccak256('safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)')) == 0x2eb2c2d6\r\n     *\r\n     *     => 0x00fdd58e ^ 0x4e1273f4 ^ 0xa22cb465 ^\r\n     *        0xe985e9c5 ^ 0xf242432a ^ 0x2eb2c2d6 == 0xd9b67a26\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\r\n\r\n    /*\r\n     *     bytes4(keccak256('uri(uint256)')) == 0x0e89341c\r\n     */\r\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor (string memory uri_) public {\r\n        _setURI(uri_);\r\n\r\n        // register the supported interfaces to conform to ERC1155 via ERC165\r\n        _registerInterface(_INTERFACE_ID_ERC1155);\r\n\r\n        // register the supported interfaces to conform to ERC1155MetadataURI via ERC165\r\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) external view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(\r\n        address[] memory accounts,\r\n        uint256[] memory ids\r\n    )\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\r\n        _balances[id][to] = _balances[id][to].add(amount);\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            _balances[id][from] = _balances[id][from].sub(\r\n                amount,\r\n                \"ERC1155: insufficient balance for transfer\"\r\n            );\r\n            _balances[id][to] = _balances[id][to].add(amount);\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\r\n        require(account != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][account] = _balances[id][account].add(amount);\r\n        emit TransferSingle(operator, address(0), account, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]);\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `account`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        _balances[id][account] = _balances[id][account].sub(\r\n            amount,\r\n            \"ERC1155: burn amount exceeds balance\"\r\n        );\r\n\r\n        emit TransferSingle(operator, account, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\r\n\r\n        for (uint i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][account] = _balances[ids[i]][account].sub(\r\n                amounts[i],\r\n                \"ERC1155: burn amount exceeds balance\"\r\n            );\r\n        }\r\n\r\n        emit TransferBatch(operator, account, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        internal\r\n        virtual\r\n    { }\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    )\r\n        external\r\n        returns(bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    )\r\n        external\r\n        returns(bytes4);\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts may inherit from this and call {_registerInterface} to declare\r\n * their support of an interface.\r\n */\r\n\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\ncontract TTTERC1155 is ERC1155 {\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\"){\r\n        \r\n    }\r\n    function mint(address winer, uint256 id, uint256 value) external {\r\n        bytes memory empty;\r\n        _mint(winer, id, value, empty);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"TTT_ERC1155Token-Jason.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":35256:43121  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":35256:43121  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074fd8d7fea7e125b5be20520f486df8ccbde285e54388956a8e83ffcc54849e964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122074fd8d7fea7e125b5be20520f486df8ccbde285e54388956a8e83ffcc54849e964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xFD8D7FEA7E125B5BE20520F486DF8CCBDE285E5438 DUP10 JUMP 0xA8 0xE8 EXTCODEHASH 0xFC 0xC5 BASEFEE 0x49 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "35256:7865:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;35256:7865:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122074fd8d7fea7e125b5be20520f486df8ccbde285e54388956a8e83ffcc54849e964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xFD8D7FEA7E125B5BE20520F486DF8CCBDE285E5438 DUP10 JUMP 0xA8 0xE8 EXTCODEHASH 0xFC 0xC5 BASEFEE 0x49 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "35256:7865:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35256,
									"end": 43121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074fd8d7fea7e125b5be20520f486df8ccbde285e54388956a8e83ffcc54849e964736f6c63430008130033",
									".code": [
										{
											"begin": 35256,
											"end": 43121,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 43121,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":11162:25252  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"TTT_ERC1155Token-Jason.sol\":12650:13012  constructor (string memory uri_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2523  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_7\n  shl(0xe0, 0x01ffc9a7)\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2501  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2523  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_7:\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12714  _setURI(uri_) */\n  tag_10\n    /* \"TTT_ERC1155Token-Jason.sol\":12709:12713  uri_ */\n  dup2\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12708  _setURI */\n  tag_11\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12714  _setURI(uri_) */\n  jump\t// in\ntag_10:\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12847  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_12\n  shl(0xe1, 0x6cdb3d13)\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12824  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12847  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_12:\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:13004  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_13\n  shl(0xe2, 0x03a24d07)\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:12968  _registerInterface */\n  tag_8\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:13004  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_13:\n    /* \"TTT_ERC1155Token-Jason.sol\":12650:13012  constructor (string memory uri_) public {... */\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":11162:25252  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_27)\n    /* \"TTT_ERC1155Token-Jason.sol\":3245:3446  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_8:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3329:3354  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  swap1\n  sub\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1395:1397   */\n  0x20\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1377:1398   */\n  mstore\n    /* \"#utility.yul\":1434:1436   */\n  0x1c\n    /* \"#utility.yul\":1414:1432   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1407:1437   */\n  mstore\n    /* \"#utility.yul\":1473:1503   */\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n    /* \"#utility.yul\":1453:1471   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1446:1504   */\n  mstore\n    /* \"#utility.yul\":1521:1539   */\n  0x64\n  add\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3431  _supportedInterfaces[interfaceId] */\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3418  _supportedInterfaces */\n  0x00\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3431  _supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3438  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3434:3438  true */\n  0x01\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3438  _supportedInterfaces[interfaceId] = true */\n  or\n  swap1\n  sstore\n    /* \"TTT_ERC1155Token-Jason.sol\":3245:3446  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"TTT_ERC1155Token-Jason.sol\":18388:18476  function _setURI(string memory newuri) internal virtual {... */\ntag_11:\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18459  _uri */\n  0x03\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18468  _uri = newuri */\n  tag_20\n    /* \"TTT_ERC1155Token-Jason.sol\":18462:18468  newuri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18459  _uri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18468  _uri = newuri */\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":18388:18476  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1188   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_30:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_31:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_32:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_34\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_36\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_37:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_38:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  dup7\n    /* \"#utility.yul\":1145:1147   */\n  dup5\n    /* \"#utility.yul\":1137:1143   */\n  dup4\n    /* \"#utility.yul\":1133:1148   */\n  add\n    /* \"#utility.yul\":1129:1153   */\n  add\n    /* \"#utility.yul\":1122:1157   */\n  mstore\n    /* \"#utility.yul\":1176:1182   */\n  dup1\n    /* \"#utility.yul\":1166:1182   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1188   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1550:1930   */\ntag_23:\n    /* \"#utility.yul\":1629:1630   */\n  0x01\n    /* \"#utility.yul\":1625:1637   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1672:1684   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1693:1754   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1747:1751   */\n  0x7f\n    /* \"#utility.yul\":1739:1745   */\n  dup3\n    /* \"#utility.yul\":1735:1752   */\n  and\n    /* \"#utility.yul\":1725:1752   */\n  swap2\n  pop\n    /* \"#utility.yul\":1693:1754   */\ntag_43:\n    /* \"#utility.yul\":1800:1802   */\n  0x20\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1789:1803   */\n  lt\n    /* \"#utility.yul\":1769:1787   */\n  dup2\n    /* \"#utility.yul\":1766:1804   */\n  sub\n    /* \"#utility.yul\":1763:1924   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1846:1856   */\n  0x4e487b71\n    /* \"#utility.yul\":1841:1844   */\n  0xe0\n    /* \"#utility.yul\":1837:1857   */\n  shl\n    /* \"#utility.yul\":1834:1835   */\n  0x00\n    /* \"#utility.yul\":1827:1858   */\n  mstore\n    /* \"#utility.yul\":1881:1885   */\n  0x22\n    /* \"#utility.yul\":1878:1879   */\n  0x04\n    /* \"#utility.yul\":1871:1886   */\n  mstore\n    /* \"#utility.yul\":1909:1913   */\n  0x24\n    /* \"#utility.yul\":1906:1907   */\n  0x00\n    /* \"#utility.yul\":1899:1914   */\n  revert\n    /* \"#utility.yul\":1763:1924   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1550:1930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2061:2606   */\ntag_25:\n    /* \"#utility.yul\":2163:2165   */\n  0x1f\n    /* \"#utility.yul\":2158:2161   */\n  dup3\n    /* \"#utility.yul\":2155:2166   */\n  gt\n    /* \"#utility.yul\":2152:2600   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2199:2200   */\n  0x00\n    /* \"#utility.yul\":2224:2229   */\n  dup2\n    /* \"#utility.yul\":2220:2222   */\n  dup2\n    /* \"#utility.yul\":2213:2230   */\n  mstore\n    /* \"#utility.yul\":2269:2273   */\n  0x20\n    /* \"#utility.yul\":2265:2267   */\n  dup2\n    /* \"#utility.yul\":2255:2274   */\n  keccak256\n    /* \"#utility.yul\":2339:2341   */\n  0x1f\n    /* \"#utility.yul\":2327:2337   */\n  dup6\n    /* \"#utility.yul\":2323:2342   */\n  add\n    /* \"#utility.yul\":2320:2321   */\n  0x05\n    /* \"#utility.yul\":2316:2343   */\n  shr\n    /* \"#utility.yul\":2310:2314   */\n  dup2\n    /* \"#utility.yul\":2306:2344   */\n  add\n    /* \"#utility.yul\":2375:2379   */\n  0x20\n    /* \"#utility.yul\":2363:2373   */\n  dup7\n    /* \"#utility.yul\":2360:2380   */\n  lt\n    /* \"#utility.yul\":2357:2404   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2398:2402   */\n  dup1\n    /* \"#utility.yul\":2357:2404   */\ntag_48:\n    /* \"#utility.yul\":2453:2455   */\n  0x1f\n    /* \"#utility.yul\":2448:2451   */\n  dup6\n    /* \"#utility.yul\":2444:2456   */\n  add\n    /* \"#utility.yul\":2441:2442   */\n  0x05\n    /* \"#utility.yul\":2437:2457   */\n  shr\n    /* \"#utility.yul\":2431:2435   */\n  dup3\n    /* \"#utility.yul\":2427:2458   */\n  add\n    /* \"#utility.yul\":2417:2458   */\n  swap2\n  pop\n    /* \"#utility.yul\":2508:2590   */\ntag_49:\n    /* \"#utility.yul\":2526:2528   */\n  dup2\n    /* \"#utility.yul\":2519:2524   */\n  dup2\n    /* \"#utility.yul\":2516:2529   */\n  lt\n    /* \"#utility.yul\":2508:2590   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2571:2588   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2552:2553   */\n  0x01\n    /* \"#utility.yul\":2541:2554   */\n  add\n    /* \"#utility.yul\":2508:2590   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2512:2515   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2152:2600   */\ntag_47:\n    /* \"#utility.yul\":2061:2606   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2782:4134   */\ntag_21:\n    /* \"#utility.yul\":2902:2912   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2924:2954   */\n  dup2\n  gt\n    /* \"#utility.yul\":2921:2977   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2957:2975   */\n  tag_55\n  tag_22\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2986:3083   */\n  tag_56\n    /* \"#utility.yul\":3076:3082   */\n  dup2\n    /* \"#utility.yul\":3036:3074   */\n  tag_57\n    /* \"#utility.yul\":3068:3072   */\n  dup5\n    /* \"#utility.yul\":3062:3073   */\n  sload\n    /* \"#utility.yul\":3036:3074   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3030:3034   */\n  dup5\n    /* \"#utility.yul\":2986:3083   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3138:3142   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3202:3204   */\n  0x1f\n    /* \"#utility.yul\":3191:3205   */\n  dup4\n  gt\n    /* \"#utility.yul\":3219:3220   */\n  0x01\n    /* \"#utility.yul\":3214:3877   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3921:3922   */\n  0x00\n    /* \"#utility.yul\":3938:3944   */\n  dup5\n    /* \"#utility.yul\":3935:4024   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3990:4009   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3984:4010   */\n  mload\n    /* \"#utility.yul\":3935:4024   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2739:2740   */\n  0x03\n    /* \"#utility.yul\":2735:2746   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2731:2755   */\n  shr\n    /* \"#utility.yul\":2727:2756   */\n  not\n    /* \"#utility.yul\":2717:2757   */\n  and\n    /* \"#utility.yul\":2763:2764   */\n  0x01\n    /* \"#utility.yul\":2759:2770   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2714:2771   */\n  or\n    /* \"#utility.yul\":4037:4118   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3184:4128   */\n  jump(tag_51)\n    /* \"#utility.yul\":3214:3877   */\ntag_59:\n    /* \"#utility.yul\":2008:2009   */\n  0x00\n    /* \"#utility.yul\":2001:2015   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2045:2049   */\n  0x20\n    /* \"#utility.yul\":2032:2050   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3250:3270   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3368:3604   */\ntag_63:\n    /* \"#utility.yul\":3382:3389   */\n  dup3\n    /* \"#utility.yul\":3379:3380   */\n  dup2\n    /* \"#utility.yul\":3376:3390   */\n  lt\n    /* \"#utility.yul\":3368:3604   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3471:3490   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3465:3491   */\n  mload\n    /* \"#utility.yul\":3450:3492   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3563:3590   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3531:3532   */\n  0x01\n    /* \"#utility.yul\":3519:3533   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3398:3417   */\n  dup5\n  add\n    /* \"#utility.yul\":3368:3604   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3372:3375   */\n  pop\n    /* \"#utility.yul\":3632:3638   */\n  dup6\n    /* \"#utility.yul\":3623:3630   */\n  dup3\n    /* \"#utility.yul\":3620:3639   */\n  lt\n    /* \"#utility.yul\":3617:3818   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3693:3712   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3687:3713   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3776:3777   */\n  0x03\n    /* \"#utility.yul\":3772:3786   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3788:3791   */\n  0xf8\n    /* \"#utility.yul\":3768:3792   */\n  and\n    /* \"#utility.yul\":3764:3801   */\n  shr\n    /* \"#utility.yul\":3760:3802   */\n  not\n    /* \"#utility.yul\":3745:3803   */\n  and\n    /* \"#utility.yul\":3730:3804   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3617:3818   */\ntag_66:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3864:3865   */\n  0x01\n    /* \"#utility.yul\":3848:3862   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3844:3866   */\n  add\n    /* \"#utility.yul\":3831:3867   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2782:4134   */\n  jump\t// out\ntag_27:\n    /* \"TTT_ERC1155Token-Jason.sol\":11162:25252  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":11162:25252  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":2797:2830  _supportedInterfaces[interfaceId] */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":2773:2777  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":2797:2830  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15182:15186  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15224  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15243  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15323:16247  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"TTT_ERC1155Token-Jason.sol\":13767:13774  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13795:13816  account != address(0) */\n      dup4\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8191:8212   */\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x2b\n        /* \"#utility.yul\":8228:8246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8221:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8321   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8267:8285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8260:8322   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8331:8372   */\n      mstore\n        /* \"#utility.yul\":8389:8408   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13895  _balances[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13891  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13895  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13904  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"TTT_ERC1155Token-Jason.sol\":13485:13498  string memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":13518:13522  _uri */\n      0x03\n        /* \"TTT_ERC1155Token-Jason.sol\":13511:13522  return _uri */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"TTT_ERC1155Token-Jason.sol\":16589:16596  amounts */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16589:16603  amounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16578  ids */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16585  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16603  ids.length == amounts.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8988:9009   */\n      mstore\n        /* \"#utility.yul\":9045:9047   */\n      0x28\n        /* \"#utility.yul\":9025:9043   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9018:9048   */\n      mstore\n        /* \"#utility.yul\":9084:9118   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":9064:9082   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9057:9119   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9135:9153   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9128:9166   */\n      mstore\n        /* \"#utility.yul\":9183:9202   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":8804:9208   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16667:16683  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":16659:16725  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_71\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16778  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16778  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16818  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_75\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16782:16818  isApprovedForAll(from, _msgSender()) */\n      tag_75\n        /* \"TTT_ERC1155Token-Jason.sol\":16799:16803  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":16782:16818  isApprovedForAll(from, _msgSender()) */\n    tag_75:\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9821:9823   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9803:9824   */\n      mstore\n        /* \"#utility.yul\":9860:9862   */\n      0x32\n        /* \"#utility.yul\":9840:9858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9833:9863   */\n      mstore\n        /* \"#utility.yul\":9899:9933   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9879:9897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9872:9934   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9950:9968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9943:9991   */\n      mstore\n        /* \"#utility.yul\":10008:10027   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      tag_55\n        /* \"#utility.yul\":9619:10033   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n    tag_77:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16909:16925  address operator */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_83:\n        /* \"TTT_ERC1155Token-Jason.sol\":17050:17053  ids */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":17050:17060  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17046:17047  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17046:17060  i < ids.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":17082:17092  uint256 id */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17095:17098  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17099:17100  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17095:17101  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17082:17101  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17116:17130  uint256 amount */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17133:17140  amounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17141:17142  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":17133:17143  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_90\n      tag_88\n      jump\t// in\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17116:17143  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      tag_91\n        /* \"TTT_ERC1155Token-Jason.sol\":17224:17230  amount */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17191  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17195  _balances[id] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17192:17194  id */\n      dup7\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17195  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17201  _balances[id][from] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17196:17200  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17201  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17205  _balances[id][from].sub */\n      tag_92\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17173  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17169  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17173  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17179  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17308  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17360  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17372  _balances[id][to].add(amount) */\n      tag_93\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17365:17371  amount */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17364  _balances[id][to].add */\n      tag_94\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17372  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_93:\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17336  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17332  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17336  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17340  _balances[id][to] */\n      dup13\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17372  _balances[id][to] = _balances[id][to].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17062:17065  ++i */\n      tag_95\n      dup2\n      tag_96\n      jump\t// in\n    tag_95:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17431:17433  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17425:17429  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17415:17423  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"TTT_ERC1155Token-Jason.sol\":17435:17438  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17440:17447  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17536  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_99\n        /* \"TTT_ERC1155Token-Jason.sol\":17497:17505  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17507:17511  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17513:17515  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17517:17520  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17522:17529  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17531:17535  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17496  _doSafeBatchTransferAcceptanceCheck */\n      tag_100\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17536  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_99:\n        /* \"TTT_ERC1155Token-Jason.sol\":16556:17544  {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n    tag_37:\n        /* \"TTT_ERC1155Token-Jason.sol\":14259:14275  uint256[] memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":14320:14323  ids */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14320:14330  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14309  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14316  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14330  accounts.length == ids.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11114:11116   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11096:11117   */\n      mstore\n        /* \"#utility.yul\":11153:11155   */\n      0x29\n        /* \"#utility.yul\":11133:11151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11126:11156   */\n      mstore\n        /* \"#utility.yul\":11192:11226   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":11172:11190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11165:11227   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":11243:11261   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11236:11275   */\n      mstore\n        /* \"#utility.yul\":11292:11311   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10912:11317   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_102:\n        /* \"TTT_ERC1155Token-Jason.sol\":14389:14419  uint256[] memory batchBalances */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14436:14444  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14436:14451  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14422:14452  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_108:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14389:14452  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14470:14479  uint256 i */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_109:\n        /* \"TTT_ERC1155Token-Jason.sol\":14489:14497  accounts */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":14489:14504  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14485:14486  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14485:14504  i < accounts.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14575  balanceOf(accounts[i], ids[i]) */\n      tag_112\n        /* \"TTT_ERC1155Token-Jason.sol\":14555:14563  accounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14564:14565  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14555:14566  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_88\n      jump\t// in\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14568:14571  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14572:14573  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14568:14574  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_116\n      tag_88\n      jump\t// in\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14554  balanceOf */\n      tag_15\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14575  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_112:\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14539  batchBalances */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14540:14541  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14542  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_118\n      tag_88\n      jump\t// in\n    tag_118:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14575  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14506:14509  ++i */\n      tag_119\n      dup2\n      tag_96\n      jump\t// in\n    tag_119:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14606:14619  batchBalances */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14803:14827  _msgSender() != operator */\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14803:14827  _msgSender() != operator */\n      sub\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11524:11526   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11506:11527   */\n      mstore\n        /* \"#utility.yul\":11563:11565   */\n      0x29\n        /* \"#utility.yul\":11543:11561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11536:11566   */\n      mstore\n        /* \"#utility.yul\":11602:11636   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":11582:11600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11575:11637   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":11653:11671   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11646:11685   */\n      mstore\n        /* \"#utility.yul\":11702:11721   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":11322:11727   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n    tag_122:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14918  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14904  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14918  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14928  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14939  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14928  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":15323:16247  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15549:15565  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15541:15607  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_71\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15660  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15660  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15700  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_134\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":15664:15700  isApprovedForAll(from, _msgSender()) */\n      tag_134\n        /* \"TTT_ERC1155Token-Jason.sol\":15681:15685  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15664:15700  isApprovedForAll(from, _msgSender()) */\n    tag_134:\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11934:11936   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11916:11937   */\n      mstore\n        /* \"#utility.yul\":11973:11975   */\n      0x29\n        /* \"#utility.yul\":11953:11971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11946:11976   */\n      mstore\n        /* \"#utility.yul\":12012:12046   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11992:12010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11985:12047   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":12063:12081   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12056:12095   */\n      mstore\n        /* \"#utility.yul\":12112:12131   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      tag_55\n        /* \"#utility.yul\":11732:12137   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n    tag_136:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15826:15922  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_140\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":15857:15861  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15863:15865  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15888  _asSingletonArray(id) */\n      tag_141\n        /* \"TTT_ERC1155Token-Jason.sol\":15885:15887  id */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15884  _asSingletonArray */\n      tag_142\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15888  _asSingletonArray(id) */\n      jump\t// in\n    tag_141:\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15915  _asSingletonArray(amount) */\n      tag_143\n        /* \"TTT_ERC1155Token-Jason.sol\":15908:15914  amount */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15907  _asSingletonArray */\n      tag_142\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15915  _asSingletonArray(amount) */\n      jump\t// in\n    tag_143:\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15826:15922  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_140:\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_144\n        /* \"TTT_ERC1155Token-Jason.sol\":15981:15987  amount */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15970  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15966  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15970  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15976  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15980  _balances[id][from].sub */\n      tag_92\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_144:\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15948  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15944  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15948  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15954  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:16034  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16082  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16094  _balances[id][to].add(amount) */\n      tag_145\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":16087:16093  amount */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16086  _balances[id][to].add */\n      tag_94\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16094  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_145:\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16058  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16054  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16058  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16062  _balances[id][to] */\n      dup11\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16094  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n        /* \"#utility.yul\":12316:12341   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12357:12375   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12350:12384   */\n      dup8\n      swap1\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      dup10\n      dup4\n      and\n      swap3\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12289:12307   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16239  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_99\n        /* \"TTT_ERC1155Token-Jason.sol\":16202:16210  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16212:16216  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16218:16220  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16222:16224  id */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16226:16232  amount */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16234:16238  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16201  _doSafeTransferAcceptanceCheck */\n      tag_149\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16239  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":33345:33511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"TTT_ERC1155Token-Jason.sol\":33431:33438  uint256 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":33467:33479  errorMessage */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":33459:33465  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":33451:33480  require(b <= a, errorMessage) */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_153:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33503  a - b */\n      tag_155\n        /* \"TTT_ERC1155Token-Jason.sol\":33502:33503  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33499  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33503  a - b */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"TTT_ERC1155Token-Jason.sol\":33491:33503  return a - b */\n      swap5\n        /* \"TTT_ERC1155Token-Jason.sol\":33345:33511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":30518:30697  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_94:\n        /* \"TTT_ERC1155Token-Jason.sol\":30576:30583  uint256 */\n      0x00\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30613  a + b */\n      tag_158\n        /* \"TTT_ERC1155Token-Jason.sol\":30612:30613  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30609  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30613  a + b */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"TTT_ERC1155Token-Jason.sol\":30596:30613  uint256 c = a + b */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":30637:30638  a */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30632:30633  c */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":30632:30638  c >= a */\n      lt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12860:12862   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12842:12863   */\n      mstore\n        /* \"#utility.yul\":12899:12901   */\n      0x1b\n        /* \"#utility.yul\":12879:12897   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12872:12902   */\n      mstore\n        /* \"#utility.yul\":12938:12967   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":12918:12936   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12911:12968   */\n      mstore\n        /* \"#utility.yul\":12985:13003   */\n      0x64\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_55\n        /* \"#utility.yul\":12658:13009   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_160:\n        /* \"TTT_ERC1155Token-Jason.sol\":30688:30689  c */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":30518:30697  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":24244:25043  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24498:24511  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36233:36253  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36272:36280  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":24494:25036  if (to.isContract()) {... */\n      tag_99\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24577  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_167\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24578:24586  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24588:24592  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24594:24597  ids */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24599:24606  amounts */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24608:24612  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_168\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_170\n      swap2\n      dup2\n      add\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x01\n    tag_169:\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_172\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      dup1\n      0x08c379a0\n      sub\n      tag_175\n      jumpi\n      pop\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      dup1\n      tag_180\n      jumpi\n      pop\n      jump(tag_174)\n    tag_180:\n        /* \"TTT_ERC1155Token-Jason.sol\":24898:24904  reason */\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":24891:24905  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_175:\n      pop\n    tag_174:\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15162:15164   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15144:15165   */\n      mstore\n        /* \"#utility.yul\":15201:15203   */\n      0x34\n        /* \"#utility.yul\":15181:15199   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15174:15204   */\n      mstore\n        /* \"#utility.yul\":15240:15274   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15220:15238   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15213:15275   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15291:15309   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15284:15334   */\n      mstore\n        /* \"#utility.yul\":15351:15370   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14960:15376   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_172:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":24663:24727  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":24659:24822  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_185\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24752:24802  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_187\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24659:24822  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_185:\n        /* \"TTT_ERC1155Token-Jason.sol\":24614:24837  returns (bytes4 response) {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":24244:25043  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":25051:25249  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_142:\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":25185:25186  1 */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25117:25133  uint256[] memory */\n      0x60\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25146:25168  uint256[] memory array */\n      0x00\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25146:25187  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25209:25216  element */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25203  array */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":25204:25205  0 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25206  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_88\n      jump\t// in\n    tag_193:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25216  array[0] = element */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25236:25241  array */\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":25051:25249  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":23474:24236  function _doSafeTransferAcceptanceCheck(... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23703:23716  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36233:36253  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36272:36280  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":23699:24229  if (to.isContract()) {... */\n      tag_99\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23777  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_197\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23778:23786  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23788:23792  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23794:23796  id */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23798:23804  amount */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23806:23810  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_200\n      swap2\n      dup2\n      add\n      swap1\n      tag_171\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"TTT_ERC1155Token-Jason.sol\":23735:24218  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_201\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_201:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":23861:23920  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":23857:24015  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_185\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23945:23995  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_187\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_214:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_225:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_227:\n        /* \"#utility.yul\":360:389   */\n      tag_228\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_214\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_215:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_231:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_233:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_160\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_216:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_239:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_29:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_160\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_107:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_217:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_247\n      tag_107\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_218:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_250\n      tag_107\n      jump\t// in\n    tag_250:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_219:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_252:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_253\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_254\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_217\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_255:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_256:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_256)\n    tag_258:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_220:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_260:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_262\n      tag_107\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_263\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_264:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4855   */\n    tag_32:\n        /* \"#utility.yul\":4066:4072   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup1\n        /* \"#utility.yul\":4082:4088   */\n      0x00\n        /* \"#utility.yul\":4090:4096   */\n      dup1\n        /* \"#utility.yul\":4098:4104   */\n      0x00\n        /* \"#utility.yul\":4151:4154   */\n      0xa0\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4130:4137   */\n      dup9\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4155   */\n      slt\n        /* \"#utility.yul\":4119:4172   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4119:4172   */\n    tag_266:\n        /* \"#utility.yul\":4191:4220   */\n      tag_267\n        /* \"#utility.yul\":4210:4219   */\n      dup7\n        /* \"#utility.yul\":4191:4220   */\n      tag_214\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4181:4220   */\n      swap5\n      pop\n        /* \"#utility.yul\":4239:4277   */\n      tag_268\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup8\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4239:4277   */\n      tag_214\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4229:4277   */\n      swap4\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup7\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4300:4332   */\n      calldataload\n        /* \"#utility.yul\":4351:4369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4392:4394   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4395   */\n      gt\n        /* \"#utility.yul\":4378:4412   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4405:4406   */\n      dup1\n        /* \"#utility.yul\":4398:4410   */\n      revert\n        /* \"#utility.yul\":4378:4412   */\n    tag_269:\n        /* \"#utility.yul\":4431:4492   */\n      tag_270\n        /* \"#utility.yul\":4484:4491   */\n      dup10\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4464:4473   */\n      dup11\n        /* \"#utility.yul\":4460:4482   */\n      add\n        /* \"#utility.yul\":4431:4492   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4421:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x60\n        /* \"#utility.yul\":4534:4543   */\n      dup9\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n        /* \"#utility.yul\":4501:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      dup1\n        /* \"#utility.yul\":4564:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4577   */\n      gt\n        /* \"#utility.yul\":4558:4594   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4558:4594   */\n    tag_271:\n        /* \"#utility.yul\":4613:4676   */\n      tag_272\n        /* \"#utility.yul\":4668:4675   */\n      dup10\n        /* \"#utility.yul\":4657:4665   */\n      dup4\n        /* \"#utility.yul\":4646:4655   */\n      dup11\n        /* \"#utility.yul\":4642:4666   */\n      add\n        /* \"#utility.yul\":4613:4676   */\n      tag_219\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4603:4676   */\n      swap4\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4733   */\n      add\n        /* \"#utility.yul\":4701:4734   */\n      calldataload\n        /* \"#utility.yul\":4685:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      dup1\n        /* \"#utility.yul\":4749:4757   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      gt\n        /* \"#utility.yul\":4743:4779   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup1\n        /* \"#utility.yul\":4765:4777   */\n      revert\n        /* \"#utility.yul\":4743:4779   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":4798:4849   */\n      tag_274\n        /* \"#utility.yul\":4841:4848   */\n      dup9\n        /* \"#utility.yul\":4830:4838   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup10\n        /* \"#utility.yul\":4815:4839   */\n      add\n        /* \"#utility.yul\":4798:4849   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4788:4849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4855   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:6068   */\n    tag_36:\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":4986:4992   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5014:5037   */\n      sub\n        /* \"#utility.yul\":5010:5042   */\n      slt\n        /* \"#utility.yul\":5007:5059   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5007:5059   */\n    tag_276:\n        /* \"#utility.yul\":5095:5104   */\n      dup3\n        /* \"#utility.yul\":5082:5105   */\n      calldataload\n        /* \"#utility.yul\":5124:5142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5165:5167   */\n      dup1\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      gt\n        /* \"#utility.yul\":5151:5185   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5151:5185   */\n    tag_277:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5208:5217   */\n      dup6\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5271   */\n      dup6\n        /* \"#utility.yul\":5257:5261   */\n      0x1f\n        /* \"#utility.yul\":5253:5255   */\n      dup4\n        /* \"#utility.yul\":5249:5262   */\n      add\n        /* \"#utility.yul\":5245:5272   */\n      slt\n        /* \"#utility.yul\":5235:5290   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5283:5284   */\n      dup1\n        /* \"#utility.yul\":5276:5288   */\n      revert\n        /* \"#utility.yul\":5235:5290   */\n    tag_278:\n        /* \"#utility.yul\":5322:5324   */\n      dup2\n        /* \"#utility.yul\":5309:5325   */\n      calldataload\n        /* \"#utility.yul\":5344:5348   */\n      0x20\n        /* \"#utility.yul\":5367:5410   */\n      tag_279\n        /* \"#utility.yul\":5407:5409   */\n      dup3\n        /* \"#utility.yul\":5367:5410   */\n      tag_218\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5439:5441   */\n      0x40\n        /* \"#utility.yul\":5433:5442   */\n      mload\n        /* \"#utility.yul\":5451:5482   */\n      tag_280\n        /* \"#utility.yul\":5479:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5451:5482   */\n      tag_217\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5517:5535   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5606   */\n      0x05\n        /* \"#utility.yul\":5601:5611   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5593:5612   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5617   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5551:5566   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5648   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5626:5665   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5626:5665   */\n    tag_281:\n        /* \"#utility.yul\":5685:5696   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5705:5853   */\n    tag_282:\n        /* \"#utility.yul\":5721:5727   */\n      dup4\n        /* \"#utility.yul\":5716:5719   */\n      dup7\n        /* \"#utility.yul\":5713:5728   */\n      lt\n        /* \"#utility.yul\":5705:5853   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5787:5810   */\n      tag_285\n        /* \"#utility.yul\":5806:5809   */\n      dup7\n        /* \"#utility.yul\":5787:5810   */\n      tag_214\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5775:5811   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5738:5750   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5831:5843   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5705:5853   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":5872:5878   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5916:5934   */\n      dup7\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5947:5963   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5944:5980   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5973:5974   */\n      dup1\n        /* \"#utility.yul\":5966:5978   */\n      revert\n        /* \"#utility.yul\":5944:5980   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":5999:6062   */\n      tag_287\n        /* \"#utility.yul\":6054:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6051   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup7\n        /* \"#utility.yul\":6028:6052   */\n      add\n        /* \"#utility.yul\":5999:6062   */\n      tag_219\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5989:6062   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4860:6068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6508   */\n    tag_221:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6158:6170   */\n      mload\n        /* \"#utility.yul\":6191:6197   */\n      dup1\n        /* \"#utility.yul\":6186:6189   */\n      dup5\n        /* \"#utility.yul\":6179:6198   */\n      mstore\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6241:6244   */\n      dup6\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap5\n      pop\n        /* \"#utility.yul\":6283:6285   */\n      dup1\n        /* \"#utility.yul\":6276:6281   */\n      dup5\n        /* \"#utility.yul\":6272:6286   */\n      add\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6314:6483   */\n    tag_289:\n        /* \"#utility.yul\":6328:6334   */\n      dup4\n        /* \"#utility.yul\":6325:6326   */\n      dup2\n        /* \"#utility.yul\":6322:6335   */\n      lt\n        /* \"#utility.yul\":6314:6483   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6389:6402   */\n      dup2\n      mload\n        /* \"#utility.yul\":6377:6403   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6423:6435   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6458:6473   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6350:6351   */\n      0x01\n        /* \"#utility.yul\":6343:6352   */\n      add\n        /* \"#utility.yul\":6314:6483   */\n      jump(tag_289)\n    tag_291:\n      pop\n        /* \"#utility.yul\":6499:6502   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6073:6508   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6774   */\n    tag_39:\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup2\n        /* \"#utility.yul\":6674:6695   */\n      mstore\n        /* \"#utility.yul\":6655:6659   */\n      0x00\n        /* \"#utility.yul\":6712:6768   */\n      tag_160\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup4\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6712:6768   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":6779:7126   */\n    tag_42:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6884:6891   */\n      dup6\n        /* \"#utility.yul\":6880:6903   */\n      sub\n        /* \"#utility.yul\":6876:6908   */\n      slt\n        /* \"#utility.yul\":6873:6925   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6921:6922   */\n      0x00\n        /* \"#utility.yul\":6918:6919   */\n      dup1\n        /* \"#utility.yul\":6911:6923   */\n      revert\n        /* \"#utility.yul\":6873:6925   */\n    tag_295:\n        /* \"#utility.yul\":6944:6973   */\n      tag_296\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6944:6973   */\n      tag_214\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6934:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7026   */\n      add\n        /* \"#utility.yul\":6995:7027   */\n      calldataload\n        /* \"#utility.yul\":7070:7075   */\n      dup1\n        /* \"#utility.yul\":7063:7076   */\n      iszero\n        /* \"#utility.yul\":7056:7077   */\n      iszero\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7046:7078   */\n      eq\n        /* \"#utility.yul\":7036:7096   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7089:7090   */\n      dup1\n        /* \"#utility.yul\":7082:7094   */\n      revert\n        /* \"#utility.yul\":7036:7096   */\n    tag_297:\n        /* \"#utility.yul\":7115:7120   */\n      dup1\n        /* \"#utility.yul\":7105:7120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6779:7126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7391   */\n    tag_46:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7207:7213   */\n      dup1\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7248:7257   */\n      dup4\n        /* \"#utility.yul\":7239:7246   */\n      dup6\n        /* \"#utility.yul\":7235:7258   */\n      sub\n        /* \"#utility.yul\":7231:7263   */\n      slt\n        /* \"#utility.yul\":7228:7280   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7273:7274   */\n      dup1\n        /* \"#utility.yul\":7266:7278   */\n      revert\n        /* \"#utility.yul\":7228:7280   */\n    tag_299:\n        /* \"#utility.yul\":7299:7328   */\n      tag_300\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7299:7328   */\n      tag_214\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7289:7328   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7385   */\n      tag_301\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup5\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7347:7385   */\n      tag_214\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7337:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:8002   */\n    tag_51:\n        /* \"#utility.yul\":7500:7506   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup1\n        /* \"#utility.yul\":7516:7522   */\n      0x00\n        /* \"#utility.yul\":7524:7530   */\n      dup1\n        /* \"#utility.yul\":7532:7538   */\n      0x00\n        /* \"#utility.yul\":7585:7588   */\n      0xa0\n        /* \"#utility.yul\":7573:7582   */\n      dup7\n        /* \"#utility.yul\":7564:7571   */\n      dup9\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7589   */\n      slt\n        /* \"#utility.yul\":7553:7606   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7553:7606   */\n    tag_303:\n        /* \"#utility.yul\":7625:7654   */\n      tag_304\n        /* \"#utility.yul\":7644:7653   */\n      dup7\n        /* \"#utility.yul\":7625:7654   */\n      tag_214\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7615:7654   */\n      swap5\n      pop\n        /* \"#utility.yul\":7673:7711   */\n      tag_305\n        /* \"#utility.yul\":7707:7709   */\n      0x20\n        /* \"#utility.yul\":7696:7705   */\n      dup8\n        /* \"#utility.yul\":7692:7710   */\n      add\n        /* \"#utility.yul\":7673:7711   */\n      tag_214\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7663:7711   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7762   */\n      calldataload\n        /* \"#utility.yul\":7720:7762   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7798:7807   */\n      dup7\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7781:7813   */\n      calldataload\n        /* \"#utility.yul\":7771:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7864:7867   */\n      0x80\n        /* \"#utility.yul\":7853:7862   */\n      dup7\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7836:7869   */\n      calldataload\n        /* \"#utility.yul\":7892:7910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7884:7890   */\n      dup2\n        /* \"#utility.yul\":7881:7911   */\n      gt\n        /* \"#utility.yul\":7878:7928   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7924:7925   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup1\n        /* \"#utility.yul\":7914:7926   */\n      revert\n        /* \"#utility.yul\":7878:7928   */\n    tag_306:\n        /* \"#utility.yul\":7947:7996   */\n      tag_274\n        /* \"#utility.yul\":7988:7995   */\n      dup9\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7968:7977   */\n      dup10\n        /* \"#utility.yul\":7964:7986   */\n      add\n        /* \"#utility.yul\":7947:7996   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":8419:8799   */\n    tag_60:\n        /* \"#utility.yul\":8498:8499   */\n      0x01\n        /* \"#utility.yul\":8494:8506   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8541:8553   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8562:8623   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":8616:8620   */\n      0x7f\n        /* \"#utility.yul\":8608:8614   */\n      dup3\n        /* \"#utility.yul\":8604:8621   */\n      and\n        /* \"#utility.yul\":8594:8621   */\n      swap2\n      pop\n        /* \"#utility.yul\":8562:8623   */\n    tag_310:\n        /* \"#utility.yul\":8669:8671   */\n      0x20\n        /* \"#utility.yul\":8661:8667   */\n      dup3\n        /* \"#utility.yul\":8658:8672   */\n      lt\n        /* \"#utility.yul\":8638:8656   */\n      dup2\n        /* \"#utility.yul\":8635:8673   */\n      sub\n        /* \"#utility.yul\":8632:8793   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":8715:8725   */\n      0x4e487b71\n        /* \"#utility.yul\":8710:8713   */\n      0xe0\n        /* \"#utility.yul\":8706:8726   */\n      shl\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8696:8727   */\n      mstore\n        /* \"#utility.yul\":8750:8754   */\n      0x22\n        /* \"#utility.yul\":8747:8748   */\n      0x04\n        /* \"#utility.yul\":8740:8755   */\n      mstore\n        /* \"#utility.yul\":8778:8782   */\n      0x24\n        /* \"#utility.yul\":8775:8776   */\n      0x00\n        /* \"#utility.yul\":8768:8783   */\n      revert\n        /* \"#utility.yul\":8632:8793   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":8419:8799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9213:9614   */\n    tag_71:\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"#utility.yul\":9397:9418   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9454:9456   */\n      0x25\n        /* \"#utility.yul\":9434:9452   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9427:9457   */\n      mstore\n        /* \"#utility.yul\":9493:9527   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":9488:9490   */\n      0x40\n        /* \"#utility.yul\":9473:9491   */\n      dup3\n      add\n        /* \"#utility.yul\":9466:9528   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9559:9561   */\n      0x60\n        /* \"#utility.yul\":9544:9562   */\n      dup3\n      add\n        /* \"#utility.yul\":9537:9572   */\n      mstore\n        /* \"#utility.yul\":9604:9607   */\n      0x80\n        /* \"#utility.yul\":9589:9608   */\n      add\n      swap1\n        /* \"#utility.yul\":9213:9614   */\n      jump\t// out\n        /* \"#utility.yul\":10038:10165   */\n    tag_88:\n        /* \"#utility.yul\":10099:10109   */\n      0x4e487b71\n        /* \"#utility.yul\":10094:10097   */\n      0xe0\n        /* \"#utility.yul\":10090:10110   */\n      shl\n        /* \"#utility.yul\":10087:10088   */\n      0x00\n        /* \"#utility.yul\":10080:10111   */\n      mstore\n        /* \"#utility.yul\":10130:10134   */\n      0x32\n        /* \"#utility.yul\":10127:10128   */\n      0x04\n        /* \"#utility.yul\":10120:10135   */\n      mstore\n        /* \"#utility.yul\":10154:10158   */\n      0x24\n        /* \"#utility.yul\":10151:10152   */\n      0x00\n        /* \"#utility.yul\":10144:10159   */\n      revert\n        /* \"#utility.yul\":10170:10297   */\n    tag_222:\n        /* \"#utility.yul\":10231:10241   */\n      0x4e487b71\n        /* \"#utility.yul\":10226:10229   */\n      0xe0\n        /* \"#utility.yul\":10222:10242   */\n      shl\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10212:10243   */\n      mstore\n        /* \"#utility.yul\":10262:10266   */\n      0x11\n        /* \"#utility.yul\":10259:10260   */\n      0x04\n        /* \"#utility.yul\":10252:10267   */\n      mstore\n        /* \"#utility.yul\":10286:10290   */\n      0x24\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10276:10291   */\n      revert\n        /* \"#utility.yul\":10302:10437   */\n    tag_96:\n        /* \"#utility.yul\":10341:10344   */\n      0x00\n        /* \"#utility.yul\":10362:10379   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10359:10402   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":10382:10400   */\n      tag_319\n      tag_222\n      jump\t// in\n    tag_319:\n      pop\n        /* \"#utility.yul\":10429:10430   */\n      0x01\n        /* \"#utility.yul\":10418:10431   */\n      add\n      swap1\n        /* \"#utility.yul\":10302:10437   */\n      jump\t// out\n        /* \"#utility.yul\":10442:10907   */\n    tag_98:\n        /* \"#utility.yul\":10699:10701   */\n      0x40\n        /* \"#utility.yul\":10688:10697   */\n      dup2\n        /* \"#utility.yul\":10681:10702   */\n      mstore\n        /* \"#utility.yul\":10662:10666   */\n      0x00\n        /* \"#utility.yul\":10725:10781   */\n      tag_321\n        /* \"#utility.yul\":10777:10779   */\n      0x40\n        /* \"#utility.yul\":10766:10775   */\n      dup4\n        /* \"#utility.yul\":10762:10780   */\n      add\n        /* \"#utility.yul\":10754:10760   */\n      dup6\n        /* \"#utility.yul\":10725:10781   */\n      tag_221\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10829:10838   */\n      dup3\n        /* \"#utility.yul\":10821:10827   */\n      dup2\n        /* \"#utility.yul\":10817:10839   */\n      sub\n        /* \"#utility.yul\":10812:10814   */\n      0x20\n        /* \"#utility.yul\":10801:10810   */\n      dup5\n        /* \"#utility.yul\":10797:10815   */\n      add\n        /* \"#utility.yul\":10790:10840   */\n      mstore\n        /* \"#utility.yul\":10857:10901   */\n      tag_322\n        /* \"#utility.yul\":10894:10900   */\n      dup2\n        /* \"#utility.yul\":10886:10892   */\n      dup6\n        /* \"#utility.yul\":10857:10901   */\n      tag_221\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10849:10901   */\n      swap6\n        /* \"#utility.yul\":10442:10907   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12395:12523   */\n    tag_156:\n        /* \"#utility.yul\":12462:12471   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12483:12494   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12480:12517   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":12497:12515   */\n      tag_53\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":12528:12653   */\n    tag_159:\n        /* \"#utility.yul\":12593:12602   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12614:12624   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12611:12647   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":12627:12645   */\n      tag_53\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":13014:13841   */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13411:13426   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13393:13427   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13463:13478   */\n      dup6\n      and\n        /* \"#utility.yul\":13458:13460   */\n      0x20\n        /* \"#utility.yul\":13443:13461   */\n      dup3\n      add\n        /* \"#utility.yul\":13436:13479   */\n      mstore\n        /* \"#utility.yul\":13373:13376   */\n      0xa0\n        /* \"#utility.yul\":13510:13512   */\n      0x40\n        /* \"#utility.yul\":13495:13513   */\n      dup3\n      add\n        /* \"#utility.yul\":13488:13519   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13336:13340   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13542:13599   */\n      tag_335\n      swap1\n        /* \"#utility.yul\":13579:13598   */\n      dup4\n      add\n        /* \"#utility.yul\":13571:13577   */\n      dup7\n        /* \"#utility.yul\":13542:13599   */\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13647:13656   */\n      dup3\n        /* \"#utility.yul\":13639:13645   */\n      dup2\n        /* \"#utility.yul\":13635:13657   */\n      sub\n        /* \"#utility.yul\":13630:13632   */\n      0x60\n        /* \"#utility.yul\":13619:13628   */\n      dup5\n        /* \"#utility.yul\":13615:13633   */\n      add\n        /* \"#utility.yul\":13608:13658   */\n      mstore\n        /* \"#utility.yul\":13681:13725   */\n      tag_336\n        /* \"#utility.yul\":13718:13724   */\n      dup2\n        /* \"#utility.yul\":13710:13716   */\n      dup7\n        /* \"#utility.yul\":13681:13725   */\n      tag_221\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13667:13725   */\n      swap1\n      pop\n        /* \"#utility.yul\":13774:13783   */\n      dup3\n        /* \"#utility.yul\":13766:13772   */\n      dup2\n        /* \"#utility.yul\":13762:13784   */\n      sub\n        /* \"#utility.yul\":13756:13759   */\n      0x80\n        /* \"#utility.yul\":13745:13754   */\n      dup5\n        /* \"#utility.yul\":13741:13760   */\n      add\n        /* \"#utility.yul\":13734:13785   */\n      mstore\n        /* \"#utility.yul\":13802:13835   */\n      tag_337\n        /* \"#utility.yul\":13828:13834   */\n      dup2\n        /* \"#utility.yul\":13820:13826   */\n      dup6\n        /* \"#utility.yul\":13802:13835   */\n      tag_216\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13794:13835   */\n      swap9\n        /* \"#utility.yul\":13014:13841   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13846:14095   */\n    tag_171:\n        /* \"#utility.yul\":13915:13921   */\n      0x00\n        /* \"#utility.yul\":13968:13970   */\n      0x20\n        /* \"#utility.yul\":13956:13965   */\n      dup3\n        /* \"#utility.yul\":13947:13954   */\n      dup5\n        /* \"#utility.yul\":13943:13966   */\n      sub\n        /* \"#utility.yul\":13939:13971   */\n      slt\n        /* \"#utility.yul\":13936:13988   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":13984:13985   */\n      0x00\n        /* \"#utility.yul\":13981:13982   */\n      dup1\n        /* \"#utility.yul\":13974:13986   */\n      revert\n        /* \"#utility.yul\":13936:13988   */\n    tag_339:\n        /* \"#utility.yul\":14016:14025   */\n      dup2\n        /* \"#utility.yul\":14010:14026   */\n      mload\n        /* \"#utility.yul\":14035:14065   */\n      tag_160\n        /* \"#utility.yul\":14059:14064   */\n      dup2\n        /* \"#utility.yul\":14035:14065   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":14100:14279   */\n    tag_177:\n        /* \"#utility.yul\":14135:14138   */\n      0x00\n        /* \"#utility.yul\":14177:14178   */\n      0x03\n        /* \"#utility.yul\":14159:14175   */\n      returndatasize\n        /* \"#utility.yul\":14156:14179   */\n      gt\n        /* \"#utility.yul\":14153:14273   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":14223:14224   */\n      0x04\n        /* \"#utility.yul\":14220:14221   */\n      0x00\n        /* \"#utility.yul\":14217:14218   */\n      dup1\n        /* \"#utility.yul\":14202:14225   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14260:14261   */\n      0x00\n        /* \"#utility.yul\":14254:14262   */\n      mload\n        /* \"#utility.yul\":14249:14252   */\n      0xe0\n        /* \"#utility.yul\":14245:14263   */\n      shr\n        /* \"#utility.yul\":14153:14273   */\n    tag_342:\n        /* \"#utility.yul\":14100:14279   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14284:14955   */\n    tag_179:\n        /* \"#utility.yul\":14323:14326   */\n      0x00\n        /* \"#utility.yul\":14365:14369   */\n      0x44\n        /* \"#utility.yul\":14347:14363   */\n      returndatasize\n        /* \"#utility.yul\":14344:14370   */\n      lt\n        /* \"#utility.yul\":14341:14380   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14341:14380   */\n    tag_344:\n        /* \"#utility.yul\":14407:14409   */\n      0x40\n        /* \"#utility.yul\":14401:14410   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14472:14488   */\n      returndatasize\n        /* \"#utility.yul\":14468:14493   */\n      dup2\n      add\n        /* \"#utility.yul\":14465:14466   */\n      0x04\n        /* \"#utility.yul\":14401:14410   */\n      dup4\n        /* \"#utility.yul\":14444:14494   */\n      returndatacopy\n        /* \"#utility.yul\":14523:14527   */\n      dup2\n        /* \"#utility.yul\":14517:14528   */\n      mload\n        /* \"#utility.yul\":14547:14563   */\n      returndatasize\n        /* \"#utility.yul\":14582:14600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14653:14655   */\n      dup2\n        /* \"#utility.yul\":14646:14650   */\n      0x24\n        /* \"#utility.yul\":14638:14644   */\n      dup5\n        /* \"#utility.yul\":14634:14651   */\n      add\n        /* \"#utility.yul\":14631:14656   */\n      gt\n        /* \"#utility.yul\":14626:14628   */\n      dup2\n        /* \"#utility.yul\":14618:14624   */\n      dup5\n        /* \"#utility.yul\":14615:14629   */\n      gt\n        /* \"#utility.yul\":14612:14657   */\n      or\n        /* \"#utility.yul\":14609:14667   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14660:14665   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14609:14667   */\n    tag_345:\n        /* \"#utility.yul\":14697:14703   */\n      dup3\n        /* \"#utility.yul\":14691:14695   */\n      dup6\n        /* \"#utility.yul\":14687:14704   */\n      add\n        /* \"#utility.yul\":14676:14704   */\n      swap2\n      pop\n        /* \"#utility.yul\":14733:14736   */\n      dup2\n        /* \"#utility.yul\":14727:14737   */\n      mload\n        /* \"#utility.yul\":14760:14762   */\n      dup2\n        /* \"#utility.yul\":14752:14758   */\n      dup2\n        /* \"#utility.yul\":14749:14763   */\n      gt\n        /* \"#utility.yul\":14746:14773   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14766:14771   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14746:14773   */\n    tag_346:\n        /* \"#utility.yul\":14850:14852   */\n      dup5\n        /* \"#utility.yul\":14831:14847   */\n      returndatasize\n        /* \"#utility.yul\":14825:14829   */\n      dup8\n        /* \"#utility.yul\":14821:14848   */\n      add\n        /* \"#utility.yul\":14817:14853   */\n      add\n        /* \"#utility.yul\":14810:14814   */\n      0x20\n        /* \"#utility.yul\":14801:14807   */\n      dup3\n        /* \"#utility.yul\":14796:14799   */\n      dup6\n        /* \"#utility.yul\":14792:14808   */\n      add\n        /* \"#utility.yul\":14788:14815   */\n      add\n        /* \"#utility.yul\":14785:14854   */\n      gt\n        /* \"#utility.yul\":14782:14864   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14857:14862   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14284:14955   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14782:14864   */\n    tag_347:\n        /* \"#utility.yul\":14873:14930   */\n      tag_348\n        /* \"#utility.yul\":14924:14928   */\n      0x20\n        /* \"#utility.yul\":14915:14921   */\n      dup3\n        /* \"#utility.yul\":14907:14913   */\n      dup7\n        /* \"#utility.yul\":14903:14922   */\n      add\n        /* \"#utility.yul\":14899:14929   */\n      add\n        /* \"#utility.yul\":14893:14897   */\n      dup8\n        /* \"#utility.yul\":14873:14930   */\n      tag_217\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":14946:14949   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14284:14955   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15381:15785   */\n    tag_187:\n        /* \"#utility.yul\":15583:15585   */\n      0x20\n        /* \"#utility.yul\":15565:15586   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15622:15624   */\n      0x28\n        /* \"#utility.yul\":15602:15620   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15595:15625   */\n      mstore\n        /* \"#utility.yul\":15661:15695   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15656:15658   */\n      0x40\n        /* \"#utility.yul\":15641:15659   */\n      dup3\n      add\n        /* \"#utility.yul\":15634:15696   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15727:15729   */\n      0x60\n        /* \"#utility.yul\":15712:15730   */\n      dup3\n      add\n        /* \"#utility.yul\":15705:15743   */\n      mstore\n        /* \"#utility.yul\":15775:15778   */\n      0x80\n        /* \"#utility.yul\":15760:15779   */\n      add\n      swap1\n        /* \"#utility.yul\":15381:15785   */\n      jump\t// out\n        /* \"#utility.yul\":15790:16351   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16087:16102   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16069:16103   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16139:16154   */\n      dup6\n      and\n        /* \"#utility.yul\":16134:16136   */\n      0x20\n        /* \"#utility.yul\":16119:16137   */\n      dup3\n      add\n        /* \"#utility.yul\":16112:16155   */\n      mstore\n        /* \"#utility.yul\":16186:16188   */\n      0x40\n        /* \"#utility.yul\":16171:16189   */\n      dup2\n      add\n        /* \"#utility.yul\":16164:16198   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16229:16231   */\n      0x60\n        /* \"#utility.yul\":16214:16232   */\n      dup2\n      add\n        /* \"#utility.yul\":16207:16241   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16049:16052   */\n      0xa0\n        /* \"#utility.yul\":16272:16275   */\n      0x80\n        /* \"#utility.yul\":16257:16276   */\n      dup3\n      add\n        /* \"#utility.yul\":16250:16282   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16012:16016   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16299:16345   */\n      tag_352\n      swap1\n        /* \"#utility.yul\":16325:16344   */\n      dup4\n      add\n        /* \"#utility.yul\":16317:16323   */\n      dup5\n        /* \"#utility.yul\":16299:16345   */\n      tag_216\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16291:16345   */\n      swap8\n        /* \"#utility.yul\":15790:16351   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n\n    auxdata: 0xa264697066735822122011702b91954b7c2aae03561aa31ee658793825c71b6e237a609c79433e29ce8264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_registerInterface_87": {
									"entryPoint": 124,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 256,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4136:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:951:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:1"
															},
															"nodeType": "YulIf",
															"src": "268:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:1"
															},
															"nodeType": "YulIf",
															"src": "405:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:1"
															},
															"nodeType": "YulIf",
															"src": "489:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:1"
															},
															"nodeType": "YulIf",
															"src": "581:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:1"
															},
															"nodeType": "YulIf",
															"src": "764:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:1"
															},
															"nodeType": "YulIf",
															"src": "903:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:1",
																"statements": []
															},
															"src": "984:129:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1145:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1133:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1176:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "146:1042:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1414:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1407:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1457:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1468:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1453:18:1"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1473:30:1",
																		"type": "",
																		"value": "ERC165: invalid interface id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1446:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1513:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1513:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1193:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1615:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1632:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1646:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1676:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1650:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1723:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1739:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1725:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1703:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:26:1"
															},
															"nodeType": "YulIf",
															"src": "1693:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1813:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1841:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1846:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1878:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1871:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1871:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1899:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1899:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1769:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1800:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1789:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1766:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:38:1"
															},
															"nodeType": "YulIf",
															"src": "1763:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1585:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1594:6:1",
														"type": ""
													}
												],
												"src": "1550:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2011:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2032:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1974:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1982:4:1",
														"type": ""
													}
												],
												"src": "1935:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2142:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2175:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2189:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2199:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2193:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2220:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2224:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2213:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2213:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2213:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2243:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2265:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2269:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2255:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2255:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2247:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2287:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2310:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2320:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2327:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2339:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2323:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2323:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2316:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2316:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2306:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2306:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2291:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2381:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2383:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2398:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2383:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2363:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2360:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2360:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2357:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2417:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2431:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2441:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2448:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2453:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2444:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2444:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2437:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2437:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2427:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2421:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2471:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2484:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2475:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2569:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2578:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2585:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2571:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2571:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2571:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2519:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2526:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2516:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2516:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2530:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2532:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2545:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2552:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2541:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2541:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2532:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2512:3:1",
																			"statements": []
																		},
																		"src": "2508:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2158:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2155:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:11:1"
															},
															"nodeType": "YulIf",
															"src": "2152:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2114:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2121:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2126:10:1",
														"type": ""
													}
												],
												"src": "2061:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2696:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2706:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2721:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2739:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2742:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2735:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2735:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2752:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2748:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2731:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2731:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2727:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2727:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2717:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2763:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2766:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2714:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2673:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2679:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2687:4:1",
														"type": ""
													}
												],
												"src": "2611:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2888:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2908:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2902:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2892:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2955:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2957:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2957:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2957:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2927:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2943:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2947:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2939:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2939:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:30:1"
															},
															"nodeType": "YulIf",
															"src": "2921:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3030:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3068:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3062:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3062:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3036:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2986:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2986:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3092:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3109:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3096:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3119:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3138:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3123:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3151:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3164:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3151:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3221:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3235:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3254:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3266:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3262:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3262:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3250:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3250:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3239:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3283:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3327:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3297:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3297:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3287:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3345:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3354:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3349:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3432:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3457:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3475:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3480:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3471:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3471:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3465:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3465:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3450:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3450:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3450:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3509:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3523:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3531:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3519:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3519:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3509:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3550:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3567:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3578:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3563:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3563:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3550:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3379:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3382:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3376:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3376:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3391:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3393:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3402:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3405:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3398:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3398:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3393:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3372:3:1",
																					"statements": []
																				},
																				"src": "3368:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3652:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3670:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3697:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3702:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3693:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3693:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3687:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3687:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3674:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3737:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3749:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3776:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3779:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3772:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3772:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3788:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3768:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3768:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3798:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3794:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3794:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3764:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3764:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3760:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3760:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3745:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3745:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3730:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3730:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3730:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3623:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3632:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3620:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3620:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3617:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3838:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3852:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3855:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3848:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3848:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3864:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3844:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3844:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3831:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3831:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3831:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3214:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3219:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3894:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3908:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3912:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3957:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3975:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3994:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3999:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3990:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3990:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3984:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3984:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3975:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3938:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3935:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4044:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4103:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4110:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4050:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4050:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4037:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4037:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4037:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3886:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3202:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3191:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3184:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2863:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2869:3:1",
														"type": ""
													}
												],
												"src": "2782:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200178338038062001783833981016040819052620000349162000128565b620000466301ffc9a760e01b6200007c565b620000518162000100565b62000063636cdb3d1360e11b6200007c565b620000756303a24d0760e21b6200007c565b5062000358565b6001600160e01b03198082169003620000db5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60036200010e82826200028c565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b818501915085601f8301126200016957600080fd5b8151818111156200017e576200017e62000112565b604051601f8201601f19908116603f01168101908382118183101715620001a957620001a962000112565b816040528281528886848701011115620001c257600080fd5b600093505b82841015620001e65784840186015181850187015292850192620001c7565b600086848301015280965050505050505092915050565b600181811c908216806200021257607f821691505b6020821081036200023357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028757600081815260208120601f850160051c81016020861015620002625750805b601f850160051c820191505b8181101562000283578281556001016200026e565b5050505b505050565b81516001600160401b03811115620002a857620002a862000112565b620002c081620002b98454620001fd565b8462000239565b602080601f831160018114620002f85760008415620002df5750858301515b600019600386901b1c1916600185901b17855562000283565b600085815260208120601f198616915b82811015620003295788860151825594840194600190910190840162000308565b5085821015620003485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61141b80620003686000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610124578063a22cb46514610144578063e985e9c514610157578063f242432a1461019357600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100ef5780632eb2c2d61461010f575b600080fd5b61009f61009a366004610c40565b6101a6565b6040519081526020015b60405180910390f35b6100df6100c0366004610c83565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020016100a9565b6101026100fd366004610ca0565b610242565b6040516100a99190610cff565b61012261011d366004610e5e565b6102d6565b005b610137610132366004610f08565b61056a565b6040516100a9919061100e565b610122610152366004611021565b610694565b6100df61016536600461105d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6101226101a1366004611090565b61076a565b60006001600160a01b0383166102175760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b606060038054610251906110f5565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906110f5565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b50505050509050919050565b81518351146103385760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161020e565b6001600160a01b03841661035e5760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b03851633148061037a575061037a8533610165565b6103e15760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161020e565b3360005b84518110156104fc57600085828151811061040257610402611174565b60200260200101519050600085838151811061042057610420611174565b6020026020010151905061048d816040518060600160405280602a81526020016113bc602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205461091d9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546104c49082610954565b60009283526001602090815260408085206001600160a01b038c16865290915290922091909155506104f5816111a0565b90506103e5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161054c9291906111b9565b60405180910390a46105628187878787876109ba565b505050505050565b606081518351146105cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161020e565b6000835167ffffffffffffffff8111156105eb576105eb610d12565b604051908082528060200260200182016040528015610614578160200160208202803683370190505b50905060005b845181101561068c5761065f85828151811061063857610638611174565b602002602001015185838151811061065257610652611174565b60200260200101516101a6565b82828151811061067157610671611174565b6020908102919091010152610685816111a0565b905061061a565b509392505050565b6001600160a01b03821633036106fe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161020e565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0384166107905760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b0385163314806107ac57506107ac8533610165565b61080a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161020e565b3361082a81878761081a88610b1e565b61082388610b1e565b5050505050565b610871836040518060600160405280602a81526020016113bc602a913960008781526001602090815260408083206001600160a01b038d168452909152902054919061091d565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546108a89084610954565b60008581526001602090815260408083206001600160a01b038a811680865291845293829020949094558051888152918201879052898316928516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610562818787878787610b69565b600081848411156109415760405162461bcd60e51b815260040161020e9190610cff565b5061094c83856111e7565b949350505050565b60008061096183856111fa565b9050838110156109b35760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161020e565b9392505050565b6001600160a01b0384163b156105625760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109fe908990899088908890889060040161120d565b6020604051808303816000875af1925050508015610a39575060408051601f3d908101601f19168201909252610a369181019061126b565b60015b610ae557610a45611288565b806308c379a003610a7e5750610a596112a4565b80610a645750610a80565b8060405162461bcd60e51b815260040161020e9190610cff565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161020e565b6001600160e01b0319811663bc197c8160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b5857610b58611174565b602090810291909101015292915050565b6001600160a01b0384163b156105625760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bad9089908990889088908890600401611376565b6020604051808303816000875af1925050508015610be8575060408051601f3d908101601f19168201909252610be59181019061126b565b60015b610bf457610a45611288565b6001600160e01b0319811663f23a6e6160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b80356001600160a01b0381168114610c3b57600080fd5b919050565b60008060408385031215610c5357600080fd5b610c5c83610c24565b946020939093013593505050565b6001600160e01b031981168114610c8057600080fd5b50565b600060208284031215610c9557600080fd5b81356109b381610c6a565b600060208284031215610cb257600080fd5b5035919050565b6000815180845260005b81811015610cdf57602081850181015186830182015201610cc3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109b36020830184610cb9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610d4e57610d4e610d12565b6040525050565b600067ffffffffffffffff821115610d6f57610d6f610d12565b5060051b60200190565b600082601f830112610d8a57600080fd5b81356020610d9782610d55565b604051610da48282610d28565b83815260059390931b8501820192828101915086841115610dc457600080fd5b8286015b84811015610ddf5780358352918301918301610dc8565b509695505050505050565b600082601f830112610dfb57600080fd5b813567ffffffffffffffff811115610e1557610e15610d12565b604051610e2c601f8301601f191660200182610d28565b818152846020838601011115610e4157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e7657600080fd5b610e7f86610c24565b9450610e8d60208701610c24565b9350604086013567ffffffffffffffff80821115610eaa57600080fd5b610eb689838a01610d79565b94506060880135915080821115610ecc57600080fd5b610ed889838a01610d79565b93506080880135915080821115610eee57600080fd5b50610efb88828901610dea565b9150509295509295909350565b60008060408385031215610f1b57600080fd5b823567ffffffffffffffff80821115610f3357600080fd5b818501915085601f830112610f4757600080fd5b81356020610f5482610d55565b604051610f618282610d28565b83815260059390931b8501820192828101915089841115610f8157600080fd5b948201945b83861015610fa657610f9786610c24565b82529482019490820190610f86565b96505086013592505080821115610fbc57600080fd5b50610fc985828601610d79565b9150509250929050565b600081518084526020808501945080840160005b8381101561100357815187529582019590820190600101610fe7565b509495945050505050565b6020815260006109b36020830184610fd3565b6000806040838503121561103457600080fd5b61103d83610c24565b91506020830135801515811461105257600080fd5b809150509250929050565b6000806040838503121561107057600080fd5b61107983610c24565b915061108760208401610c24565b90509250929050565b600080600080600060a086880312156110a857600080fd5b6110b186610c24565b94506110bf60208701610c24565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110e957600080fd5b610efb88828901610dea565b600181811c9082168061110957607f821691505b60208210810361112957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016111b2576111b261118a565b5060010190565b6040815260006111cc6040830185610fd3565b82810360208401526111de8185610fd3565b95945050505050565b8181038181111561023c5761023c61118a565b8082018082111561023c5761023c61118a565b6001600160a01b0386811682528516602082015260a06040820181905260009061123990830186610fd3565b828103606084015261124b8186610fd3565b9050828103608084015261125f8185610cb9565b98975050505050505050565b60006020828403121561127d57600080fd5b81516109b381610c6a565b600060033d11156112a15760046000803e5060005160e01c5b90565b600060443d10156112b25790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112e257505050505090565b82850191508151818111156112fa5750505050505090565b843d87010160208285010111156113145750505050505090565b61132360208286010187610d28565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113b090830184610cb9565b97965050505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a264697066735822122011702b91954b7c2aae03561aa31ee658793825c71b6e237a609c79433e29ce8264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1783 CODESIZE SUB DUP1 PUSH3 0x1783 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x128 JUMP JUMPDEST PUSH3 0x46 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x7C JUMP JUMPDEST PUSH3 0x51 DUP2 PUSH3 0x100 JUMP JUMPDEST PUSH3 0x63 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x7C JUMP JUMPDEST PUSH3 0x75 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x7C JUMP JUMPDEST POP PUSH3 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP1 SUB PUSH3 0xDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH3 0x10E DUP3 DUP3 PUSH3 0x28C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1A9 JUMPI PUSH3 0x1A9 PUSH3 0x112 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1E6 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1C7 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x212 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x233 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x287 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x262 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x283 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x26E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2A8 JUMPI PUSH3 0x2A8 PUSH3 0x112 JUMP JUMPDEST PUSH3 0x2C0 DUP2 PUSH3 0x2B9 DUP5 SLOAD PUSH3 0x1FD JUMP JUMPDEST DUP5 PUSH3 0x239 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2DF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x283 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x329 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x308 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x348 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x141B DUP1 PUSH3 0x368 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x122 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27D SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x37A JUMPI POP PUSH2 0x37A DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x91D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C4 SWAP1 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x4F5 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x54C SWAP3 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x614 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH2 0x65F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x671 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH2 0x7AC DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH2 0x82A DUP2 DUP8 DUP8 PUSH2 0x81A DUP9 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x823 DUP9 PUSH2 0xB1E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x871 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8A8 SWAP1 DUP5 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP PUSH2 0x94C DUP4 DUP6 PUSH2 0x11E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 DUP4 DUP6 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA39 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA36 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA7E JUMPI POP PUSH2 0xA59 PUSH2 0x12A4 JUMP JUMPDEST DUP1 PUSH2 0xA64 JUMPI POP PUSH2 0xA80 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF4 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCC3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD97 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDDF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDC8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE15 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8D PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB6 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED8 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF54 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF61 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xF97 DUP7 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFE7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 PUSH1 0x20 DUP5 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B1 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0x10BF PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1109 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x118A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DE DUP2 DUP6 PUSH2 0xFD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1239 SWAP1 DUP4 ADD DUP7 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x124B DUP2 DUP7 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x125F DUP2 DUP6 PUSH2 0xCB9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E2 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12FA JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1314 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xD28 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH17 0x2B91954B7C2AAE03561AA31EE658793825 0xC7 SHL PUSH15 0x237A609C79433E29CE8264736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "11162:14090:0:-:0;;;12650:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2483:40;-1:-1:-1;;;2483:18:0;:40::i;:::-;12701:13;12709:4;12701:7;:13::i;:::-;12806:41;-1:-1:-1;;;12806:18:0;:41::i;:::-;12950:54;-1:-1:-1;;;12950:18:0;:54::i;:::-;12650:362;11162:14090;;3245:201;-1:-1:-1;;;;;;3329:25:0;;;;;3321:66;;;;-1:-1:-1;;;3321:66:0;;1395:2:1;3321:66:0;;;1377:21:1;1434:2;1414:18;;;1407:30;1473;1453:18;;;1446:58;1521:18;;3321:66:0;;;;;;;;-1:-1:-1;;;;;;3398:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;3398:40:0;3434:4;3398:40;;;3245:201::o;18388:88::-;18455:4;:13;18462:6;18455:4;:13;:::i;:::-;;18388:88;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:1;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:1;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1550:380::-;1629:1;1625:12;;;;1672;;;1693:61;;1747:4;1739:6;1735:17;1725:27;;1693:61;1800:2;1792:6;1789:14;1769:18;1766:38;1763:161;;1846:10;1841:3;1837:20;1834:1;1827:31;1881:4;1878:1;1871:15;1909:4;1906:1;1899:15;1763:161;;1550:380;;;:::o;2061:545::-;2163:2;2158:3;2155:11;2152:448;;;2199:1;2224:5;2220:2;2213:17;2269:4;2265:2;2255:19;2339:2;2327:10;2323:19;2320:1;2316:27;2310:4;2306:38;2375:4;2363:10;2360:20;2357:47;;;-1:-1:-1;2398:4:1;2357:47;2453:2;2448:3;2444:12;2441:1;2437:20;2431:4;2427:31;2417:41;;2508:82;2526:2;2519:5;2516:13;2508:82;;;2571:17;;;2552:1;2541:13;2508:82;;;2512:3;;;2152:448;2061:545;;;:::o;2782:1352::-;2902:10;;-1:-1:-1;;;;;2924:30:1;;2921:56;;;2957:18;;:::i;:::-;2986:97;3076:6;3036:38;3068:4;3062:11;3036:38;:::i;:::-;3030:4;2986:97;:::i;:::-;3138:4;;3202:2;3191:14;;3219:1;3214:663;;;;3921:1;3938:6;3935:89;;;-1:-1:-1;3990:19:1;;;3984:26;3935:89;-1:-1:-1;;2739:1:1;2735:11;;;2731:24;2727:29;2717:40;2763:1;2759:11;;;2714:57;4037:81;;3184:944;;3214:663;2008:1;2001:14;;;2045:4;2032:18;;-1:-1:-1;;3250:20:1;;;3368:236;3382:7;3379:1;3376:14;3368:236;;;3471:19;;;3465:26;3450:42;;3563:27;;;;3531:1;3519:14;;;;3398:19;;3368:236;;;3372:3;3632:6;3623:7;3620:19;3617:201;;;3693:19;;;3687:26;-1:-1:-1;;3776:1:1;3772:14;;;3788:3;3768:24;3764:37;3760:42;3745:58;3730:74;;3617:201;-1:-1:-1;;;;;3864:1:1;3848:14;;;3844:22;3831:36;;-1:-1:-1;2782:1352:1:o;:::-;11162:14090:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1409": {
									"entryPoint": 2846,
									"id": 1409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1249": {
									"entryPoint": null,
									"id": 1249,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1381": {
									"entryPoint": 2490,
									"id": 1381,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1314": {
									"entryPoint": 2921,
									"id": 1314,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_1628": {
									"entryPoint": 2388,
									"id": 1628,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfBatch_569": {
									"entryPoint": 1386,
									"id": 569,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_505": {
									"entryPoint": 422,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_865": {
									"entryPoint": 726,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_727": {
									"entryPoint": 1898,
									"id": 727,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_603": {
									"entryPoint": 1684,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1752": {
									"entryPoint": 2333,
									"id": 1752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_477": {
									"entryPoint": 578,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16353:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:33:1"
															},
															"nodeType": "YulIf",
															"src": "4119:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4191:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4239:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4286:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4290:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4341:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4351:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4345:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4384:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4381:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:14:1"
															},
															"nodeType": "YulIf",
															"src": "4378:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4421:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4484:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4431:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4505:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4574:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4561:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:16:1"
															},
															"nodeType": "YulIf",
															"src": "4558:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4668:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4613:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4685:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4701:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4689:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4772:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4749:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4759:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4746:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:16:1"
															},
															"nodeType": "YulIf",
															"src": "4743:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4788:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4830:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4841:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4798:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4090:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4098:6:1",
														"type": ""
													}
												],
												"src": "3912:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:32:1"
															},
															"nodeType": "YulIf",
															"src": "5007:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5095:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5124:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5118:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:14:1"
															},
															"nodeType": "YulIf",
															"src": "5151:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5253:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5257:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulIf",
															"src": "5235:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5322:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5309:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5303:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5357:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5367:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5361:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5419:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5423:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5479:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5451:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5491:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5502:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5495:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5532:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5544:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5555:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5575:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5597:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5605:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5614:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5579:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5649:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5640:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:19:1"
															},
															"nodeType": "YulIf",
															"src": "5626:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5674:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5693:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5678:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5761:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5782:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5806:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5787:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5787:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5824:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5840:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5831:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5713:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5729:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5731:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5747:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5731:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5709:3:1",
																"statements": []
															},
															"src": "5705:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5862:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5872:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5887:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5931:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5891:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5966:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5950:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5960:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:16:1"
															},
															"nodeType": "YulIf",
															"src": "5944:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5989:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6043:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6054:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5999:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4955:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4966:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4986:6:1",
														"type": ""
													}
												],
												"src": "4860:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6164:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6276:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6283:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6295:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6304:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6299:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6363:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6395:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6389:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6389:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6448:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6458:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6336:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6347:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6343:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6318:3:1",
																"statements": []
															},
															"src": "6314:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6499:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6111:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6118:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6126:3:1",
														"type": ""
													}
												],
												"src": "6073:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6664:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6712:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6655:4:1",
														"type": ""
													}
												],
												"src": "6513:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6921:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6884:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:32:1"
															},
															"nodeType": "YulIf",
															"src": "6873:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6944:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6995:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6986:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7082:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7070:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7063:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7063:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7056:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:40:1"
															},
															"nodeType": "YulIf",
															"src": "7036:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7115:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6832:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6852:6:1",
														"type": ""
													}
												],
												"src": "6779:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7218:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:32:1"
															},
															"nodeType": "YulIf",
															"src": "7228:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7299:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7347:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7176:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7187:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7199:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7207:6:1",
														"type": ""
													}
												],
												"src": "7131:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:33:1"
															},
															"nodeType": "YulIf",
															"src": "7553:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7625:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7663:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7673:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7771:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7781:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7822:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7864:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7826:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7912:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:30:1"
															},
															"nodeType": "YulIf",
															"src": "7878:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7964:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7988:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7947:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7516:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7524:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7532:6:1",
														"type": ""
													}
												],
												"src": "7396:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8287:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:1"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8381:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8393:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8404:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8389:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8389:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8381:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8158:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8172:4:1",
														"type": ""
													}
												],
												"src": "8007:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8474:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8484:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8501:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8484:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8515:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8545:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8541:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8519:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8592:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8594:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8608:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8616:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8604:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8604:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8594:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8572:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:26:1"
															},
															"nodeType": "YulIf",
															"src": "8562:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8710:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8715:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8706:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8706:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8696:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8696:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8747:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8750:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8740:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8740:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8740:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8778:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8768:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8638:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8661:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8658:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:38:1"
															},
															"nodeType": "YulIf",
															"src": "8632:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8454:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8463:6:1",
														"type": ""
													}
												],
												"src": "8419:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8978:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8988:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9018:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9079:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9084:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9139:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9150:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9135:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9155:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9187:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8955:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8969:4:1",
														"type": ""
													}
												],
												"src": "8804:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9387:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9397:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9454:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9488:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9493:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9466:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9559:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9544:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9564:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9537:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9581:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9604:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9581:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9364:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9378:4:1",
														"type": ""
													}
												],
												"src": "9213:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9793:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9810:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9803:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9860:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9833:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9894:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9879:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9899:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9872:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9872:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9965:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9950:18:1"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9970:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9943:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9943:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10000:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10012:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10023:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10008:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10000:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9770:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9784:4:1",
														"type": ""
													}
												],
												"src": "9619:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10070:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10094:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10099:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10090:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10151:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10154:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10038:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10202:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10226:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10231:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10222:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10212:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10259:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10262:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10252:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10276:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10276:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10170:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10349:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10380:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10382:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10382:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10382:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10365:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:17:1"
															},
															"nodeType": "YulIf",
															"src": "10359:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10411:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10422:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10429:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10331:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10341:3:1",
														"type": ""
													}
												],
												"src": "10302:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10671:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10688:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10699:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10711:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10754:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10725:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10715:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10801:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10821:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10829:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10849:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10886:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10894:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10857:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10857:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10849:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10632:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10643:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10651:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10662:4:1",
														"type": ""
													}
												],
												"src": "10442:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11086:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11096:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11096:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11133:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11126:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11126:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11172:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11165:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11165:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11258:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11243:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11263:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11236:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11236:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11284:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11296:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11307:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11063:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11077:4:1",
														"type": ""
													}
												],
												"src": "10912:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11496:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11558:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11563:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11536:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11597:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11582:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11602:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11575:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11668:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11653:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11673:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11646:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11694:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11717:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11694:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11487:4:1",
														"type": ""
													}
												],
												"src": "11322:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11906:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11968:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11953:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11973:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11946:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12007:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11992:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12012:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12078:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12063:18:1"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12083:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12056:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12056:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12104:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12127:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12112:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12104:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11883:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11897:4:1",
														"type": ""
													}
												],
												"src": "11732:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12271:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12281:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12293:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12304:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12281:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12323:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12334:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12316:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12316:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12372:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12357:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12377:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12350:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12232:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12243:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12251:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12262:4:1",
														"type": ""
													}
												],
												"src": "12142:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12444:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12454:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12466:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12469:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12462:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12454:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12495:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12497:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12497:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12497:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12486:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12492:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12483:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:11:1"
															},
															"nodeType": "YulIf",
															"src": "12480:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12426:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12429:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12435:4:1",
														"type": ""
													}
												],
												"src": "12395:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12576:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12586:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12597:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12600:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12586:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12625:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12627:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12627:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12627:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12617:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12620:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12614:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:10:1"
															},
															"nodeType": "YulIf",
															"src": "12611:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12559:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12562:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12568:3:1",
														"type": ""
													}
												],
												"src": "12528:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12832:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12842:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12894:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12879:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12899:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12872:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12933:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12938:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12911:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12911:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12977:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12989:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13000:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12985:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12977:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12809:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12823:4:1",
														"type": ""
													}
												],
												"src": "12658:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13345:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13355:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13373:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13378:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13369:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13382:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13365:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13359:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13400:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13415:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13423:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13411:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13393:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13393:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13458:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13443:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13467:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13475:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13463:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13436:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13436:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13510:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13495:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13488:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13488:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13528:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13594:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13579:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13542:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13532:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13639:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13647:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13635:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13667:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13710:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13718:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13681:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13681:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13671:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13756:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13741:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13766:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13774:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13762:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13734:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13734:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13794:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13820:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13828:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13802:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13794:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13282:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13293:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13301:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13309:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13317:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13325:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13336:4:1",
														"type": ""
													}
												],
												"src": "13014:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13926:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13972:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13981:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13984:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13974:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13974:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13974:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13947:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13956:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13968:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13939:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13939:32:1"
															},
															"nodeType": "YulIf",
															"src": "13936:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13997:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14016:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14010:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14010:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14001:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14059:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14035:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14035:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14084:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14074:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13915:6:1",
														"type": ""
													}
												],
												"src": "13846:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14143:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14188:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14217:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14220:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14202:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14202:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14202:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14238:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14249:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14260:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14254:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14254:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14245:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14245:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14238:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14159:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14177:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14156:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14156:23:1"
															},
															"nodeType": "YulIf",
															"src": "14153:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14135:3:1",
														"type": ""
													}
												],
												"src": "14100:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14331:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14371:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14373:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14347:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14347:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14365:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14344:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:26:1"
															},
															"nodeType": "YulIf",
															"src": "14341:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14389:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14401:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14401:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14393:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14419:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14433:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14423:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14459:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14465:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14472:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14472:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14490:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14468:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14444:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14444:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14444:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14503:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14523:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14517:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14507:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14537:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14547:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14547:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14541:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14572:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14582:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14576:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14658:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14660:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14618:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14626:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14615:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14615:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14638:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14646:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14634:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14634:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14653:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14631:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14612:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14612:45:1"
															},
															"nodeType": "YulIf",
															"src": "14609:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14676:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14691:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14697:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14680:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14713:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14733:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14727:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14727:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14717:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14764:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14766:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14752:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14760:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14749:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14749:14:1"
															},
															"nodeType": "YulIf",
															"src": "14746:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14855:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14857:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14796:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14801:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14792:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14792:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14810:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14788:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14825:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14831:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14831:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14821:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14821:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14850:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14817:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14785:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14785:69:1"
															},
															"nodeType": "YulIf",
															"src": "14782:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14893:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14907:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14915:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14903:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14903:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14924:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14899:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14873:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14873:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14873:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14939:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14946:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14939:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14323:3:1",
														"type": ""
													}
												],
												"src": "14284:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15134:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15144:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15144:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15196:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15181:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15174:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15174:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15224:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15235:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15220:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15240:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15213:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15213:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15295:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15306:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15291:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15311:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15284:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15284:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15343:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15366:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15351:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15343:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15111:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15125:4:1",
														"type": ""
													}
												],
												"src": "14960:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15555:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15572:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15583:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15565:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15606:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15617:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15602:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15622:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15595:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15656:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15661:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15634:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15634:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15727:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15712:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15732:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15705:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15705:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15752:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15764:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15775:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15760:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15752:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15532:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15546:4:1",
														"type": ""
													}
												],
												"src": "15381:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16021:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16031:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16049:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16054:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16045:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16058:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16041:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16035:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16076:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16091:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16099:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16087:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16069:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16069:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16134:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16119:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16143:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16151:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16139:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16112:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16112:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16171:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16164:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16164:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16229:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16214:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16234:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16207:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16207:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16272:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16257:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16278:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16250:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16250:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16291:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16317:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16329:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16340:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16325:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16299:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16291:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15958:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15969:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15977:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15985:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15993:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16012:4:1",
														"type": ""
													}
												],
												"src": "15790:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610124578063a22cb46514610144578063e985e9c514610157578063f242432a1461019357600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100ef5780632eb2c2d61461010f575b600080fd5b61009f61009a366004610c40565b6101a6565b6040519081526020015b60405180910390f35b6100df6100c0366004610c83565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020016100a9565b6101026100fd366004610ca0565b610242565b6040516100a99190610cff565b61012261011d366004610e5e565b6102d6565b005b610137610132366004610f08565b61056a565b6040516100a9919061100e565b610122610152366004611021565b610694565b6100df61016536600461105d565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6101226101a1366004611090565b61076a565b60006001600160a01b0383166102175760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b606060038054610251906110f5565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906110f5565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b50505050509050919050565b81518351146103385760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161020e565b6001600160a01b03841661035e5760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b03851633148061037a575061037a8533610165565b6103e15760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161020e565b3360005b84518110156104fc57600085828151811061040257610402611174565b60200260200101519050600085838151811061042057610420611174565b6020026020010151905061048d816040518060600160405280602a81526020016113bc602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205461091d9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546104c49082610954565b60009283526001602090815260408085206001600160a01b038c16865290915290922091909155506104f5816111a0565b90506103e5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161054c9291906111b9565b60405180910390a46105628187878787876109ba565b505050505050565b606081518351146105cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161020e565b6000835167ffffffffffffffff8111156105eb576105eb610d12565b604051908082528060200260200182016040528015610614578160200160208202803683370190505b50905060005b845181101561068c5761065f85828151811061063857610638611174565b602002602001015185838151811061065257610652611174565b60200260200101516101a6565b82828151811061067157610671611174565b6020908102919091010152610685816111a0565b905061061a565b509392505050565b6001600160a01b03821633036106fe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161020e565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0384166107905760405162461bcd60e51b815260040161020e9061112f565b6001600160a01b0385163314806107ac57506107ac8533610165565b61080a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161020e565b3361082a81878761081a88610b1e565b61082388610b1e565b5050505050565b610871836040518060600160405280602a81526020016113bc602a913960008781526001602090815260408083206001600160a01b038d168452909152902054919061091d565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546108a89084610954565b60008581526001602090815260408083206001600160a01b038a811680865291845293829020949094558051888152918201879052898316928516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610562818787878787610b69565b600081848411156109415760405162461bcd60e51b815260040161020e9190610cff565b5061094c83856111e7565b949350505050565b60008061096183856111fa565b9050838110156109b35760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161020e565b9392505050565b6001600160a01b0384163b156105625760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109fe908990899088908890889060040161120d565b6020604051808303816000875af1925050508015610a39575060408051601f3d908101601f19168201909252610a369181019061126b565b60015b610ae557610a45611288565b806308c379a003610a7e5750610a596112a4565b80610a645750610a80565b8060405162461bcd60e51b815260040161020e9190610cff565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161020e565b6001600160e01b0319811663bc197c8160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b5857610b58611174565b602090810291909101015292915050565b6001600160a01b0384163b156105625760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bad9089908990889088908890600401611376565b6020604051808303816000875af1925050508015610be8575060408051601f3d908101601f19168201909252610be59181019061126b565b60015b610bf457610a45611288565b6001600160e01b0319811663f23a6e6160e01b14610b155760405162461bcd60e51b815260040161020e9061132e565b80356001600160a01b0381168114610c3b57600080fd5b919050565b60008060408385031215610c5357600080fd5b610c5c83610c24565b946020939093013593505050565b6001600160e01b031981168114610c8057600080fd5b50565b600060208284031215610c9557600080fd5b81356109b381610c6a565b600060208284031215610cb257600080fd5b5035919050565b6000815180845260005b81811015610cdf57602081850181015186830182015201610cc3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109b36020830184610cb9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610d4e57610d4e610d12565b6040525050565b600067ffffffffffffffff821115610d6f57610d6f610d12565b5060051b60200190565b600082601f830112610d8a57600080fd5b81356020610d9782610d55565b604051610da48282610d28565b83815260059390931b8501820192828101915086841115610dc457600080fd5b8286015b84811015610ddf5780358352918301918301610dc8565b509695505050505050565b600082601f830112610dfb57600080fd5b813567ffffffffffffffff811115610e1557610e15610d12565b604051610e2c601f8301601f191660200182610d28565b818152846020838601011115610e4157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e7657600080fd5b610e7f86610c24565b9450610e8d60208701610c24565b9350604086013567ffffffffffffffff80821115610eaa57600080fd5b610eb689838a01610d79565b94506060880135915080821115610ecc57600080fd5b610ed889838a01610d79565b93506080880135915080821115610eee57600080fd5b50610efb88828901610dea565b9150509295509295909350565b60008060408385031215610f1b57600080fd5b823567ffffffffffffffff80821115610f3357600080fd5b818501915085601f830112610f4757600080fd5b81356020610f5482610d55565b604051610f618282610d28565b83815260059390931b8501820192828101915089841115610f8157600080fd5b948201945b83861015610fa657610f9786610c24565b82529482019490820190610f86565b96505086013592505080821115610fbc57600080fd5b50610fc985828601610d79565b9150509250929050565b600081518084526020808501945080840160005b8381101561100357815187529582019590820190600101610fe7565b509495945050505050565b6020815260006109b36020830184610fd3565b6000806040838503121561103457600080fd5b61103d83610c24565b91506020830135801515811461105257600080fd5b809150509250929050565b6000806040838503121561107057600080fd5b61107983610c24565b915061108760208401610c24565b90509250929050565b600080600080600060a086880312156110a857600080fd5b6110b186610c24565b94506110bf60208701610c24565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110e957600080fd5b610efb88828901610dea565b600181811c9082168061110957607f821691505b60208210810361112957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016111b2576111b261118a565b5060010190565b6040815260006111cc6040830185610fd3565b82810360208401526111de8185610fd3565b95945050505050565b8181038181111561023c5761023c61118a565b8082018082111561023c5761023c61118a565b6001600160a01b0386811682528516602082015260a06040820181905260009061123990830186610fd3565b828103606084015261124b8186610fd3565b9050828103608084015261125f8185610cb9565b98975050505050505050565b60006020828403121561127d57600080fd5b81516109b381610c6a565b600060033d11156112a15760046000803e5060005160e01c5b90565b600060443d10156112b25790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112e257505050505090565b82850191508151818111156112fa5750505050505090565b843d87010160208285010111156113145750505050505090565b61132360208286010187610d28565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113b090830184610cb9565b97965050505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a264697066735822122011702b91954b7c2aae03561aa31ee658793825c71b6e237a609c79433e29ce8264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x122 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27D SWAP1 PUSH2 0x10F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x37A JUMPI POP PUSH2 0x37A DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x48D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x91D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C4 SWAP1 DUP3 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x4F5 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x54C SWAP3 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EB PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x614 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68C JUMPI PUSH2 0x65F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1A6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x671 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7AC JUMPI POP PUSH2 0x7AC DUP6 CALLER PUSH2 0x165 JUMP JUMPDEST PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST CALLER PUSH2 0x82A DUP2 DUP8 DUP8 PUSH2 0x81A DUP9 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x823 DUP9 PUSH2 0xB1E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x871 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13BC PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8A8 SWAP1 DUP5 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x562 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP PUSH2 0x94C DUP4 DUP6 PUSH2 0x11E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 DUP4 DUP6 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA39 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA36 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA7E JUMPI POP PUSH2 0xA59 PUSH2 0x12A4 JUMP JUMPDEST DUP1 PUSH2 0xA64 JUMPI POP PUSH2 0xA80 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF4 JUMPI PUSH2 0xA45 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x132E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCC3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD97 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA4 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDDF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDC8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE15 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8D PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB6 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED8 DUP10 DUP4 DUP11 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF54 DUP3 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF61 DUP3 DUP3 PUSH2 0xD28 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xF97 DUP7 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFE7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 PUSH1 0x20 DUP5 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B1 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP PUSH2 0x10BF PUSH1 0x20 DUP8 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1109 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x118A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DE DUP2 DUP6 PUSH2 0xFD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x118A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1239 SWAP1 DUP4 ADD DUP7 PUSH2 0xFD3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x124B DUP2 DUP7 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x125F DUP2 DUP6 PUSH2 0xCB9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B3 DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x12B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12E2 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12FA JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1314 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1323 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xD28 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCB9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH17 0x2B91954B7C2AAE03561AA31EE658793825 0xC7 SHL PUSH15 0x237A609C79433E29CE8264736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "11162:14090:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13681:231;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;13681:231:0;;;;;;;;2688:150;;;;;;:::i;:::-;-1:-1:-1;;;;;;2797:33:0;2773:4;2797:33;;;;;;;;;;;;;;2688:150;;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;2688:150:0;1019:187:1;13423:107:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16324:1220::-;;;;;;:::i;:::-;;:::i;:::-;;14078:549;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14700:311::-;;;;;;:::i;:::-;;:::i;15083:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15206:27:0;;;15182:4;15206:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;15083:168;15323:924;;;;;;:::i;:::-;;:::i;13681:231::-;13767:7;-1:-1:-1;;;;;13795:21:0;;13787:77;;;;-1:-1:-1;;;13787:77:0;;8209:2:1;13787:77:0;;;8191:21:1;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:1;;;8331:41;8389:19;;13787:77:0;;;;;;;;;-1:-1:-1;13882:13:0;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;13882:22:0;;;;;;;;;;13681:231;;;;;:::o;13423:107::-;13485:13;13518:4;13511:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13423:107;;;:::o;16324:1220::-;16589:7;:14;16575:3;:10;:28;16567:81;;;;-1:-1:-1;;;16567:81:0;;9006:2:1;16567:81:0;;;8988:21:1;9045:2;9025:18;;;9018:30;9084:34;9064:18;;;9057:62;-1:-1:-1;;;9135:18:1;;;9128:38;9183:19;;16567:81:0;8804:404:1;16567:81:0;-1:-1:-1;;;;;16667:16:0;;16659:66;;;;-1:-1:-1;;;16659:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;16758:20:0;;1697:10;16758:20;;:60;;-1:-1:-1;16782:36:0;16799:4;1697:10;15083:168;:::i;16782:36::-;16736:160;;;;-1:-1:-1;;;16736:160:0;;9821:2:1;16736:160:0;;;9803:21:1;9860:2;9840:18;;;9833:30;9899:34;9879:18;;;9872:62;-1:-1:-1;;;9950:18:1;;;9943:48;10008:19;;16736:160:0;9619:414:1;16736:160:0;1697:10;16909:16;17026:358;17050:3;:10;17046:1;:14;17026:358;;;17082:10;17095:3;17099:1;17095:6;;;;;;;;:::i;:::-;;;;;;;17082:19;;17116:14;17133:7;17141:1;17133:10;;;;;;;;:::i;:::-;;;;;;;17116:27;;17182:126;17224:6;17182:126;;;;;;;;;;;;;;;;;:9;:13;17192:2;17182:13;;;;;;;;;;;:19;17196:4;-1:-1:-1;;;;;17182:19:0;-1:-1:-1;;;;;17182:19:0;;;;;;;;;;;;;:23;;:126;;;;;:::i;:::-;17160:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17160:19:0;;;;;;;;;;:148;;;;17343:17;;;;;;:29;;17365:6;17343:21;:29::i;:::-;17323:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17323:17:0;;;;;;;;;;:49;;;;-1:-1:-1;17062:3:0;;;:::i;:::-;;;17026:358;;;;17431:2;-1:-1:-1;;;;;17401:47:0;17425:4;-1:-1:-1;;;;;17401:47:0;17415:8;-1:-1:-1;;;;;17401:47:0;;17435:3;17440:7;17401:47;;;;;;;:::i;:::-;;;;;;;;17461:75;17497:8;17507:4;17513:2;17517:3;17522:7;17531:4;17461:35;:75::i;:::-;16556:988;16324:1220;;;;;:::o;14078:549::-;14259:16;14320:3;:10;14301:8;:15;:29;14293:83;;;;-1:-1:-1;;;14293:83:0;;11114:2:1;14293:83:0;;;11096:21:1;11153:2;11133:18;;;11126:30;11192:34;11172:18;;;11165:62;-1:-1:-1;;;11243:18:1;;;11236:39;11292:19;;14293:83:0;10912:405:1;14293:83:0;14389:30;14436:8;:15;14422:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14422:30:0;;14389:63;;14470:9;14465:122;14489:8;:15;14485:1;:19;14465:122;;;14545:30;14555:8;14564:1;14555:11;;;;;;;;:::i;:::-;;;;;;;14568:3;14572:1;14568:6;;;;;;;;:::i;:::-;;;;;;;14545:9;:30::i;:::-;14526:13;14540:1;14526:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;14506:3;;;:::i;:::-;;;14465:122;;;-1:-1:-1;14606:13:0;14078:549;-1:-1:-1;;;14078:549:0:o;14700:311::-;-1:-1:-1;;;;;14803:24:0;;1697:10;14803:24;14795:78;;;;-1:-1:-1;;;14795:78:0;;11524:2:1;14795:78:0;;;11506:21:1;11563:2;11543:18;;;11536:30;11602:34;11582:18;;;11575:62;-1:-1:-1;;;11653:18:1;;;11646:39;11702:19;;14795:78:0;11322:405:1;14795:78:0;1697:10;14886:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;14886:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;14886:53:0;;;;;;;;;;14955:48;;1159:41:1;;;14886:42:0;;1697:10;14955:48;;1132:18:1;14955:48:0;;;;;;;14700:311;;:::o;15323:924::-;-1:-1:-1;;;;;15549:16:0;;15541:66;;;;-1:-1:-1;;;15541:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15640:20:0;;1697:10;15640:20;;:60;;-1:-1:-1;15664:36:0;15681:4;1697:10;15083:168;:::i;15664:36::-;15618:151;;;;-1:-1:-1;;;15618:151:0;;11934:2:1;15618:151:0;;;11916:21:1;11973:2;11953:18;;;11946:30;12012:34;11992:18;;;11985:62;-1:-1:-1;;;12063:18:1;;;12056:39;12112:19;;15618:151:0;11732:405:1;15618:151:0;1697:10;15826:96;1697:10;15857:4;15863:2;15867:21;15885:2;15867:17;:21::i;:::-;15890:25;15908:6;15890:17;:25::i;:::-;16324:1220;;;;;;15826:96;15957:77;15981:6;15957:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15957:19:0;;;;;;;;;;;:77;:23;:77::i;:::-;15935:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15935:19:0;;;;;;;;;;:99;;;;16065:17;;;;;;:29;;16087:6;16065:21;:29::i;:::-;16045:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;16045:17:0;;;;;;;;;;;;;:49;;;;16112:46;;12316:25:1;;;12357:18;;;12350:34;;;16112:46:0;;;;;;;;;12289:18:1;16112:46:0;;;;;;;16171:68;16202:8;16212:4;16218:2;16222;16226:6;16234:4;16171:30;:68::i;33345:166::-;33431:7;33467:12;33459:6;;;;33451:29;;;;-1:-1:-1;;;33451:29:0;;;;;;;;:::i;:::-;-1:-1:-1;33498:5:0;33502:1;33498;:5;:::i;:::-;33491:12;33345:166;-1:-1:-1;;;;33345:166:0:o;30518:179::-;30576:7;;30608:5;30612:1;30608;:5;:::i;:::-;30596:17;;30637:1;30632;:6;;30624:46;;;;-1:-1:-1;;;30624:46:0;;12860:2:1;30624:46:0;;;12842:21:1;12899:2;12879:18;;;12872:30;12938:29;12918:18;;;12911:57;12985:18;;30624:46:0;12658:351:1;30624:46:0;30688:1;30518:179;-1:-1:-1;;;30518:179:0:o;24244:799::-;-1:-1:-1;;;;;24498:13:0;;36233:20;36272:8;24494:542;;24534:79;;-1:-1:-1;;;24534:79:0;;-1:-1:-1;;;;;24534:43:0;;;;;:79;;24578:8;;24588:4;;24594:3;;24599:7;;24608:4;;24534:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24534:79:0;;;;;;;;-1:-1:-1;;24534:79:0;;;;;;;;;;;;:::i;:::-;;;24530:495;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;24898:6;24891:14;;-1:-1:-1;;;24891:14:0;;;;;;;;:::i;24530:495::-;;;24947:62;;-1:-1:-1;;;24947:62:0;;15162:2:1;24947:62:0;;;15144:21:1;15201:2;15181:18;;;15174:30;15240:34;15220:18;;;15213:62;-1:-1:-1;;;15291:18:1;;;15284:50;15351:19;;24947:62:0;14960:416:1;24530:495:0;-1:-1:-1;;;;;;24663:64:0;;-1:-1:-1;;;24663:64:0;24659:163;;24752:50;;-1:-1:-1;;;24752:50:0;;;;;;;:::i;24659:163::-;24614:223;24244:799;;;;;;:::o;25051:198::-;25171:16;;;25185:1;25171:16;;;;;;;;;25117;;25146:22;;25171:16;;;;;;;;;;;;-1:-1:-1;25171:16:0;25146:41;;25209:7;25198:5;25204:1;25198:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;25236:5;25051:198;-1:-1:-1;;25051:198:0:o;23474:762::-;-1:-1:-1;;;;;23703:13:0;;36233:20;36272:8;23699:530;;23739:72;;-1:-1:-1;;;23739:72:0;;-1:-1:-1;;;;;23739:38:0;;;;;:72;;23778:8;;23788:4;;23794:2;;23798:6;;23806:4;;23739:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23739:72:0;;;;;;;;-1:-1:-1;;23739:72:0;;;;;;;;;;;;:::i;:::-;;;23735:483;;;;:::i;:::-;-1:-1:-1;;;;;;23861:59:0;;-1:-1:-1;;;23861:59:0;23857:158;;23945:50;;-1:-1:-1;;;23945:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:1;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:1;;5903:32;;-1:-1:-1;;5947:16:1;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:1;;6073:435;-1:-1:-1;;;;;6073:435:1:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8419:380::-;8498:1;8494:12;;;;8541;;;8562:61;;8616:4;8608:6;8604:17;8594:27;;8562:61;8669:2;8661:6;8658:14;8638:18;8635:38;8632:161;;8715:10;8710:3;8706:20;8703:1;8696:31;8750:4;8747:1;8740:15;8778:4;8775:1;8768:15;8632:161;;8419:380;;;:::o;9213:401::-;9415:2;9397:21;;;9454:2;9434:18;;;9427:30;9493:34;9488:2;9473:18;;9466:62;-1:-1:-1;;;9559:2:1;9544:18;;9537:35;9604:3;9589:19;;9213:401::o;10038:127::-;10099:10;10094:3;10090:20;10087:1;10080:31;10130:4;10127:1;10120:15;10154:4;10151:1;10144:15;10170:127;10231:10;10226:3;10222:20;10219:1;10212:31;10262:4;10259:1;10252:15;10286:4;10283:1;10276:15;10302:135;10341:3;10362:17;;;10359:43;;10382:18;;:::i;:::-;-1:-1:-1;10429:1:1;10418:13;;10302:135::o;10442:465::-;10699:2;10688:9;10681:21;10662:4;10725:56;10777:2;10766:9;10762:18;10754:6;10725:56;:::i;:::-;10829:9;10821:6;10817:22;10812:2;10801:9;10797:18;10790:50;10857:44;10894:6;10886;10857:44;:::i;:::-;10849:52;10442:465;-1:-1:-1;;;;;10442:465:1:o;12395:128::-;12462:9;;;12483:11;;;12480:37;;;12497:18;;:::i;12528:125::-;12593:9;;;12614:10;;;12611:36;;;12627:18;;:::i;13014:827::-;-1:-1:-1;;;;;13411:15:1;;;13393:34;;13463:15;;13458:2;13443:18;;13436:43;13373:3;13510:2;13495:18;;13488:31;;;13336:4;;13542:57;;13579:19;;13571:6;13542:57;:::i;:::-;13647:9;13639:6;13635:22;13630:2;13619:9;13615:18;13608:50;13681:44;13718:6;13710;13681:44;:::i;:::-;13667:58;;13774:9;13766:6;13762:22;13756:3;13745:9;13741:19;13734:51;13802:33;13828:6;13820;13802:33;:::i;:::-;13794:41;13014:827;-1:-1:-1;;;;;;;;13014:827:1:o;13846:249::-;13915:6;13968:2;13956:9;13947:7;13943:23;13939:32;13936:52;;;13984:1;13981;13974:12;13936:52;14016:9;14010:16;14035:30;14059:5;14035:30;:::i;14100:179::-;14135:3;14177:1;14159:16;14156:23;14153:120;;;14223:1;14220;14217;14202:23;-1:-1:-1;14260:1:1;14254:8;14249:3;14245:18;14153:120;14100:179;:::o;14284:671::-;14323:3;14365:4;14347:16;14344:26;14341:39;;;14284:671;:::o;14341:39::-;14407:2;14401:9;-1:-1:-1;;14472:16:1;14468:25;;14465:1;14401:9;14444:50;14523:4;14517:11;14547:16;14582:18;14653:2;14646:4;14638:6;14634:17;14631:25;14626:2;14618:6;14615:14;14612:45;14609:58;;;14660:5;;;;;14284:671;:::o;14609:58::-;14697:6;14691:4;14687:17;14676:28;;14733:3;14727:10;14760:2;14752:6;14749:14;14746:27;;;14766:5;;;;;;14284:671;:::o;14746:27::-;14850:2;14831:16;14825:4;14821:27;14817:36;14810:4;14801:6;14796:3;14792:16;14788:27;14785:69;14782:82;;;14857:5;;;;;;14284:671;:::o;14782:82::-;14873:57;14924:4;14915:6;14907;14903:19;14899:30;14893:4;14873:57;:::i;:::-;-1:-1:-1;14946:3:1;;14284:671;-1:-1:-1;;;;;14284:671:1:o;15381:404::-;15583:2;15565:21;;;15622:2;15602:18;;;15595:30;15661:34;15656:2;15641:18;;15634:62;-1:-1:-1;;;15727:2:1;15712:18;;15705:38;15775:3;15760:19;;15381:404::o;15790:561::-;-1:-1:-1;;;;;16087:15:1;;;16069:34;;16139:15;;16134:2;16119:18;;16112:43;16186:2;16171:18;;16164:34;;;16229:2;16214:18;;16207:34;;;16049:3;16272;16257:19;;16250:32;;;16012:4;;16299:46;;16325:19;;16317:6;16299:46;:::i;:::-;16291:54;15790:561;-1:-1:-1;;;;;;;15790:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1029400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2680",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "2575",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12650,
									"end": 13012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2483,
									"end": 2501,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2483,
									"end": 2523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12709,
									"end": 12713,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12708,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12701,
									"end": 12714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12806,
									"end": 12824,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12806,
									"end": 12847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12950,
									"end": 12968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12950,
									"end": 13004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3245,
									"end": 3446,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3245,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1395,
									"end": 1397,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1377,
									"end": 1398,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH",
									"source": 1,
									"value": "1C"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1437,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1521,
									"end": 1539,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3434,
									"end": 3438,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3245,
									"end": 3446,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18459,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18462,
									"end": 18468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18455,
									"end": 18468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1751,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1752,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1752,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1693,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1769,
									"end": 1787,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1804,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1856,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1841,
									"end": 1844,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1835,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1827,
									"end": 1858,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1881,
									"end": 1885,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1878,
									"end": 1879,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1871,
									"end": 1886,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1906,
									"end": 1907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2165,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2158,
									"end": 2161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2166,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2199,
									"end": 2200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2222,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2269,
									"end": 2273,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2265,
									"end": 2267,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2341,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2327,
									"end": 2337,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2321,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2316,
									"end": 2343,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2306,
									"end": 2344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2363,
									"end": 2373,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2380,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2398,
									"end": 2402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2357,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2453,
									"end": 2455,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2448,
									"end": 2451,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2456,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2442,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2437,
									"end": 2457,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2458,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2526,
									"end": 2528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2519,
									"end": 2524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2529,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2588,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2553,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2541,
									"end": 2554,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2508,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2152,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2902,
									"end": 2912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2902,
									"end": 2912,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2924,
									"end": 2954,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2924,
									"end": 2954,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2921,
									"end": 2977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2957,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3076,
									"end": 3082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3068,
									"end": 3072,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3073,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3036,
									"end": 3074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3036,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3030,
									"end": 3034,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2986,
									"end": 3083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2986,
									"end": 3083,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3138,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3138,
									"end": 3142,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3202,
									"end": 3204,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3191,
									"end": 3205,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3191,
									"end": 3205,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3219,
									"end": 3220,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3921,
									"end": 3922,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3938,
									"end": 3944,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3990,
									"end": 4009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3935,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2739,
									"end": 2740,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2746,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2755,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2727,
									"end": 2756,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2717,
									"end": 2757,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2770,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 2771,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4118,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4118,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3184,
									"end": 4128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3184,
									"end": 4128,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3214,
									"end": 3877,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2045,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2050,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3250,
									"end": 3270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3390,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3465,
									"end": 3491,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3450,
									"end": 3492,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3450,
									"end": 3492,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3590,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3531,
									"end": 3532,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3519,
									"end": 3533,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3417,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3368,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3372,
									"end": 3375,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3638,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3623,
									"end": 3630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3620,
									"end": 3639,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3693,
									"end": 3712,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3687,
									"end": 3713,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3776,
									"end": 3777,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3786,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3788,
									"end": 3791,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3768,
									"end": 3792,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3764,
									"end": 3801,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3802,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3745,
									"end": 3803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3804,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3617,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3864,
									"end": 3865,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3844,
									"end": 3866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3867,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2782,
									"end": 4134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2782,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11162,
									"end": 25252,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011702b91954b7c2aae03561aa31ee658793825c71b6e237a609c79433e29ce8264736f6c63430008130033",
									".code": [
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 25252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15182,
											"end": 15186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15323,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15323,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13767,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13795,
											"end": 13816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13795,
											"end": 13816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13485,
											"end": 13498,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13518,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13511,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13511,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16603,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9128,
											"end": 9166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9183,
											"end": 9202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8804,
											"end": 9208,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16659,
											"end": 16725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16758,
											"end": 16818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16799,
											"end": 16803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9860,
											"end": 9862,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 9933,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9943,
											"end": 9991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10027,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10008,
											"end": 10027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9619,
											"end": 10033,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17050,
											"end": 17053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17050,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 17060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17095,
											"end": 17101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17133,
											"end": 17140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17133,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17224,
											"end": 17230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17192,
											"end": 17194,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17196,
											"end": 17200,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17182,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17343,
											"end": 17372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17062,
											"end": 17065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17425,
											"end": 17429,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17415,
											"end": 17423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17447,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17401,
											"end": 17448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17497,
											"end": 17505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17507,
											"end": 17511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17517,
											"end": 17520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17529,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17531,
											"end": 17535,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17461,
											"end": 17536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14259,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14320,
											"end": 14323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11226,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11165,
											"end": 11227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11292,
											"end": 11311,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11292,
											"end": 11311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10912,
											"end": 11317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14436,
											"end": 14444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14436,
											"end": 14451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14422,
											"end": 14452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14485,
											"end": 14504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14555,
											"end": 14563,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14555,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14568,
											"end": 14574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14545,
											"end": 14575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14526,
											"end": 14542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14506,
											"end": 14509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14606,
											"end": 14619,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11636,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11582,
											"end": 11600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11702,
											"end": 11721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11322,
											"end": 11727,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15549,
											"end": 15565,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15541,
											"end": 15607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15681,
											"end": 15685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11934,
											"end": 11936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11916,
											"end": 11937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11973,
											"end": 11975,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11946,
											"end": 11976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12046,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12112,
											"end": 12131,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12112,
											"end": 12131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11732,
											"end": 12137,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15861,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15885,
											"end": 15887,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15867,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15908,
											"end": 15914,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15890,
											"end": 15915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15957,
											"end": 16034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16065,
											"end": 16094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12316,
											"end": 12341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12289,
											"end": 12307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 16171,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16202,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16212,
											"end": 16216,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16218,
											"end": 16220,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16222,
											"end": 16224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16226,
											"end": 16232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16234,
											"end": 16238,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16171,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16171,
											"end": 16239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33431,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33467,
											"end": 33479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 33451,
											"end": 33480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33502,
											"end": 33503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 33498,
											"end": 33503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33491,
											"end": 33503,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33345,
											"end": 33511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30576,
											"end": 30583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30576,
											"end": 30583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30612,
											"end": 30613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30608,
											"end": 30613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12967,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12911,
											"end": 12968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12985,
											"end": 13003,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12985,
											"end": 13003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12658,
											"end": 13009,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30518,
											"end": 30697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24498,
											"end": 24511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24498,
											"end": 24511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36233,
											"end": 36253,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 25036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24494,
											"end": 25036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24586,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24588,
											"end": 24592,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24588,
											"end": 24592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24606,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24612,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24534,
											"end": 24613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24534,
											"end": 24613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24530,
											"end": 25025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24530,
											"end": 25025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24898,
											"end": 24904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24891,
											"end": 24905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15162,
											"end": 15164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15274,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15351,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15351,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14960,
											"end": 15376,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24752,
											"end": 24802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24614,
											"end": 24837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25185,
											"end": 25186,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25117,
											"end": 25133,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25117,
											"end": 25133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25146,
											"end": 25168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25204,
											"end": 25205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25198,
											"end": 25206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25236,
											"end": 25241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25051,
											"end": 25249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 24236,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 23474,
											"end": 24236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23703,
											"end": 23716,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23703,
											"end": 23716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36233,
											"end": 36253,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23699,
											"end": 24229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23786,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23804,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23806,
											"end": 23810,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23806,
											"end": 23810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23739,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23739,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23735,
											"end": 24218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23857,
											"end": 24015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 23857,
											"end": 24015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23945,
											"end": 23995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4191,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4239,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4431,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4613,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4798,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5042,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5367,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5451,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5787,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6335,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6712,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6908,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6944,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7299,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7347,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7625,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7673,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7911,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7947,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8672,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8710,
											"end": 8713,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8740,
											"end": 8755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8782,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9614,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 9213,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 9488,
											"end": 9490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9607,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9589,
											"end": 9608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10165,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10038,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10094,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10127,
											"end": 10128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10158,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10297,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10170,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10226,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10437,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10302,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10359,
											"end": 10402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10382,
											"end": 10400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10681,
											"end": 10702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 10760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10725,
											"end": 10781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10894,
											"end": 10900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10857,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10857,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10901,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10907,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10442,
											"end": 10907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12523,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12395,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12480,
											"end": 12517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12497,
											"end": 12515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12528,
											"end": 12653,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 12528,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12611,
											"end": 12647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12627,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13478,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13463,
											"end": 13478,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13458,
											"end": 13460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13510,
											"end": 13512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13542,
											"end": 13599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13657,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13619,
											"end": 13628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 13718,
											"end": 13724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13716,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13681,
											"end": 13725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 13681,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13774,
											"end": 13783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13766,
											"end": 13772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13762,
											"end": 13784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13759,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13741,
											"end": 13760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13734,
											"end": 13785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13820,
											"end": 13826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 13802,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13794,
											"end": 13835,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 13014,
											"end": 13841,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13014,
											"end": 13841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13846,
											"end": 14095,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 13846,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 13954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 13966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 13971,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 13982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 13986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13936,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14010,
											"end": 14026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14035,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14059,
											"end": 14064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14035,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14035,
											"end": 14065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14135,
											"end": 14138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14177,
											"end": 14178,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 14159,
											"end": 14175,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14179,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14223,
											"end": 14224,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14220,
											"end": 14221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14217,
											"end": 14218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14202,
											"end": 14225,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14260,
											"end": 14261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14249,
											"end": 14252,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14245,
											"end": 14263,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 14153,
											"end": 14273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14365,
											"end": 14369,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14347,
											"end": 14363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 14341,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14407,
											"end": 14409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14472,
											"end": 14488,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14465,
											"end": 14466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14494,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14517,
											"end": 14528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14563,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14653,
											"end": 14655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14650,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14638,
											"end": 14644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14634,
											"end": 14651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14631,
											"end": 14656,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14618,
											"end": 14624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14615,
											"end": 14629,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14612,
											"end": 14657,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 14609,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14695,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14687,
											"end": 14704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14727,
											"end": 14737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14760,
											"end": 14762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14749,
											"end": 14763,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14746,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14850,
											"end": 14852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14831,
											"end": 14847,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14825,
											"end": 14829,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14817,
											"end": 14853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14796,
											"end": 14799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14792,
											"end": 14808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14788,
											"end": 14815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14785,
											"end": 14854,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14782,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14915,
											"end": 14921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14899,
											"end": 14929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14873,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14873,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14955,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14284,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15381,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15565,
											"end": 15586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15622,
											"end": 15624,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15695,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15656,
											"end": 15658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 15696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15727,
											"end": 15729,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15705,
											"end": 15743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15775,
											"end": 15778,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15760,
											"end": 15779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15760,
											"end": 15779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16069,
											"end": 16103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16069,
											"end": 16103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16171,
											"end": 16189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16164,
											"end": 16198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16229,
											"end": 16231,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16214,
											"end": 16232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16052,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16257,
											"end": 16276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16250,
											"end": 16282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16012,
											"end": 16016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16317,
											"end": 16323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16299,
											"end": 16345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16299,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16291,
											"end": 16345,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 16351,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15790,
											"end": 16351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572"
									}
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 432,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 438,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 440,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							}
						},
						"stateVariables": {
							"_supportedInterfaces": {
								"details": "Mapping of interface ids to whether or not it's supported."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "TTT_ERC1155Token-Jason.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_Available since v3.1._\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "_Available since v3.1._",
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 309,
								"contract": "TTT_ERC1155Token-Jason.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":28391:35181  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":28391:35181  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f8f1fd5e8eb7c3a068a87aabb24822ae689733c12588a603cc16ed4a3b4fb68d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f8f1fd5e8eb7c3a068a87aabb24822ae689733c12588a603cc16ed4a3b4fb68d64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 CALL REVERT 0x5E DUP15 0xB7 0xC3 LOG0 PUSH9 0xA87AABB24822AE6897 CALLER 0xC1 0x25 DUP9 0xA6 SUB 0xCC AND 0xED 0x4A EXTCODESIZE 0x4F 0xB6 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "28391:6790:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;28391:6790:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f8f1fd5e8eb7c3a068a87aabb24822ae689733c12588a603cc16ed4a3b4fb68d64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 CALL REVERT 0x5E DUP15 0xB7 0xC3 LOG0 PUSH9 0xA87AABB24822AE6897 CALLER 0xC1 0x25 DUP9 0xA6 SUB 0xCC AND 0xED 0x4A EXTCODESIZE 0x4F 0xB6 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "28391:6790:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28391,
									"end": 35181,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8f1fd5e8eb7c3a068a87aabb24822ae689733c12588a603cc16ed4a3b4fb68d64736f6c63430008130033",
									".code": [
										{
											"begin": 28391,
											"end": 35181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28391,
											"end": 35181,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":7848:8710  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":7848:8710  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205fac59d9c1fce179f164e54da3818ace5d912f688e8d18a4a6642105d1d7a0fc64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fac59d9c1fce179f164e54da3818ace5d912f688e8d18a4a6642105d1d7a0fc64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xAC MSIZE 0xD9 0xC1 0xFC 0xE1 PUSH26 0xF164E54DA3818ACE5D912F688E8D18A4A6642105D1D7A0FC6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "7848:862:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7848:862:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fac59d9c1fce179f164e54da3818ace5d912f688e8d18a4a6642105d1d7a0fc64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xAC MSIZE 0xD9 0xC1 0xFC 0xE1 PUSH26 0xF164E54DA3818ACE5D912F688E8D18A4A6642105D1D7A0FC6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "7848:862:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7848,
									"end": 8710,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fac59d9c1fce179f164e54da3818ace5d912f688e8d18a4a6642105d1d7a0fc64736f6c63430008130033",
									".code": [
										{
											"begin": 7848,
											"end": 8710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 8710,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TTTERC1155": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TTT_ERC1155Token-Jason.sol\":43127:43401  contract TTTERC1155 is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"TTT_ERC1155Token-Jason.sol\":43167:43249  constructor() ERC1155(\"https://game.example/api/item/{id}.json\"){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":12650:13012  constructor (string memory uri_) public {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2523  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_6\n  shl(0xe0, 0x01ffc9a7)\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2501  _registerInterface */\n  tag_7\n    /* \"TTT_ERC1155Token-Jason.sol\":2483:2523  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_6:\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12714  _setURI(uri_) */\n  tag_9\n    /* \"TTT_ERC1155Token-Jason.sol\":12709:12713  uri_ */\n  dup2\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12708  _setURI */\n  tag_10\n    /* \"TTT_ERC1155Token-Jason.sol\":12701:12714  _setURI(uri_) */\n  jump\t// in\ntag_9:\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12847  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_11\n  shl(0xe1, 0x6cdb3d13)\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12824  _registerInterface */\n  tag_7\n    /* \"TTT_ERC1155Token-Jason.sol\":12806:12847  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_11:\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:13004  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_12\n  shl(0xe2, 0x03a24d07)\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:12968  _registerInterface */\n  tag_7\n    /* \"TTT_ERC1155Token-Jason.sol\":12950:13004  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_12:\n    /* \"TTT_ERC1155Token-Jason.sol\":12650:13012  constructor (string memory uri_) public {... */\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":43127:43401  contract TTTERC1155 is ERC1155 {... */\n  jump(tag_27)\n    /* \"TTT_ERC1155Token-Jason.sol\":3245:3446  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_7:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3329:3354  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  swap1\n  sub\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1c\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:324   */\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:325   */\n  mstore\n    /* \"#utility.yul\":342:360   */\n  0x64\n  add\n    /* \"TTT_ERC1155Token-Jason.sol\":3321:3387  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3431  _supportedInterfaces[interfaceId] */\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3418  _supportedInterfaces */\n  0x00\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3431  _supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3438  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"TTT_ERC1155Token-Jason.sol\":3434:3438  true */\n  0x01\n    /* \"TTT_ERC1155Token-Jason.sol\":3398:3438  _supportedInterfaces[interfaceId] = true */\n  or\n  swap1\n  sstore\n    /* \"TTT_ERC1155Token-Jason.sol\":3245:3446  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"TTT_ERC1155Token-Jason.sol\":18388:18476  function _setURI(string memory newuri) internal virtual {... */\ntag_10:\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18459  _uri */\n  0x03\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18468  _uri = newuri */\n  tag_20\n    /* \"TTT_ERC1155Token-Jason.sol\":18462:18468  newuri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18459  _uri */\n  dup3\n    /* \"TTT_ERC1155Token-Jason.sol\":18455:18468  _uri = newuri */\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"TTT_ERC1155Token-Jason.sol\":18388:18476  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":371:498   */\ntag_22:\n    /* \"#utility.yul\":432:442   */\n  0x4e487b71\n    /* \"#utility.yul\":427:430   */\n  0xe0\n    /* \"#utility.yul\":423:443   */\n  shl\n    /* \"#utility.yul\":420:421   */\n  0x00\n    /* \"#utility.yul\":413:444   */\n  mstore\n    /* \"#utility.yul\":463:467   */\n  0x41\n    /* \"#utility.yul\":460:461   */\n  0x04\n    /* \"#utility.yul\":453:468   */\n  mstore\n    /* \"#utility.yul\":487:491   */\n  0x24\n    /* \"#utility.yul\":484:485   */\n  0x00\n    /* \"#utility.yul\":477:492   */\n  revert\n    /* \"#utility.yul\":503:883   */\ntag_23:\n    /* \"#utility.yul\":582:583   */\n  0x01\n    /* \"#utility.yul\":578:590   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":625:637   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":646:707   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":700:704   */\n  0x7f\n    /* \"#utility.yul\":692:698   */\n  dup3\n    /* \"#utility.yul\":688:705   */\n  and\n    /* \"#utility.yul\":678:705   */\n  swap2\n  pop\n    /* \"#utility.yul\":646:707   */\ntag_31:\n    /* \"#utility.yul\":753:755   */\n  0x20\n    /* \"#utility.yul\":745:751   */\n  dup3\n    /* \"#utility.yul\":742:756   */\n  lt\n    /* \"#utility.yul\":722:740   */\n  dup2\n    /* \"#utility.yul\":719:757   */\n  sub\n    /* \"#utility.yul\":716:877   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":799:809   */\n  0x4e487b71\n    /* \"#utility.yul\":794:797   */\n  0xe0\n    /* \"#utility.yul\":790:810   */\n  shl\n    /* \"#utility.yul\":787:788   */\n  0x00\n    /* \"#utility.yul\":780:811   */\n  mstore\n    /* \"#utility.yul\":834:838   */\n  0x22\n    /* \"#utility.yul\":831:832   */\n  0x04\n    /* \"#utility.yul\":824:839   */\n  mstore\n    /* \"#utility.yul\":862:866   */\n  0x24\n    /* \"#utility.yul\":859:860   */\n  0x00\n    /* \"#utility.yul\":852:867   */\n  revert\n    /* \"#utility.yul\":716:877   */\ntag_32:\n  pop\n    /* \"#utility.yul\":503:883   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1014:1559   */\ntag_25:\n    /* \"#utility.yul\":1116:1118   */\n  0x1f\n    /* \"#utility.yul\":1111:1114   */\n  dup3\n    /* \"#utility.yul\":1108:1119   */\n  gt\n    /* \"#utility.yul\":1105:1553   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1152:1153   */\n  0x00\n    /* \"#utility.yul\":1177:1182   */\n  dup2\n    /* \"#utility.yul\":1173:1175   */\n  dup2\n    /* \"#utility.yul\":1166:1183   */\n  mstore\n    /* \"#utility.yul\":1222:1226   */\n  0x20\n    /* \"#utility.yul\":1218:1220   */\n  dup2\n    /* \"#utility.yul\":1208:1227   */\n  keccak256\n    /* \"#utility.yul\":1292:1294   */\n  0x1f\n    /* \"#utility.yul\":1280:1290   */\n  dup6\n    /* \"#utility.yul\":1276:1295   */\n  add\n    /* \"#utility.yul\":1273:1274   */\n  0x05\n    /* \"#utility.yul\":1269:1296   */\n  shr\n    /* \"#utility.yul\":1263:1267   */\n  dup2\n    /* \"#utility.yul\":1259:1297   */\n  add\n    /* \"#utility.yul\":1328:1332   */\n  0x20\n    /* \"#utility.yul\":1316:1326   */\n  dup7\n    /* \"#utility.yul\":1313:1333   */\n  lt\n    /* \"#utility.yul\":1310:1357   */\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"#utility.yul\":1351:1355   */\n  dup1\n    /* \"#utility.yul\":1310:1357   */\ntag_36:\n    /* \"#utility.yul\":1406:1408   */\n  0x1f\n    /* \"#utility.yul\":1401:1404   */\n  dup6\n    /* \"#utility.yul\":1397:1409   */\n  add\n    /* \"#utility.yul\":1394:1395   */\n  0x05\n    /* \"#utility.yul\":1390:1410   */\n  shr\n    /* \"#utility.yul\":1384:1388   */\n  dup3\n    /* \"#utility.yul\":1380:1411   */\n  add\n    /* \"#utility.yul\":1370:1411   */\n  swap2\n  pop\n    /* \"#utility.yul\":1461:1543   */\ntag_37:\n    /* \"#utility.yul\":1479:1481   */\n  dup2\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1469:1482   */\n  lt\n    /* \"#utility.yul\":1461:1543   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1524:1541   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1505:1506   */\n  0x01\n    /* \"#utility.yul\":1494:1507   */\n  add\n    /* \"#utility.yul\":1461:1543   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":1465:1468   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1105:1553   */\ntag_35:\n    /* \"#utility.yul\":1014:1559   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1735:3087   */\ntag_21:\n    /* \"#utility.yul\":1855:1865   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1877:1907   */\n  dup2\n  gt\n    /* \"#utility.yul\":1874:1930   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1910:1928   */\n  tag_43\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1939:2036   */\n  tag_44\n    /* \"#utility.yul\":2029:2035   */\n  dup2\n    /* \"#utility.yul\":1989:2027   */\n  tag_45\n    /* \"#utility.yul\":2021:2025   */\n  dup5\n    /* \"#utility.yul\":2015:2026   */\n  sload\n    /* \"#utility.yul\":1989:2027   */\n  tag_23\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1983:1987   */\n  dup5\n    /* \"#utility.yul\":1939:2036   */\n  tag_25\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2091:2095   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2155:2157   */\n  0x1f\n    /* \"#utility.yul\":2144:2158   */\n  dup4\n  gt\n    /* \"#utility.yul\":2172:2173   */\n  0x01\n    /* \"#utility.yul\":2167:2830   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2874:2875   */\n  0x00\n    /* \"#utility.yul\":2891:2897   */\n  dup5\n    /* \"#utility.yul\":2888:2977   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2943:2962   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2937:2963   */\n  mload\n    /* \"#utility.yul\":2888:2977   */\ntag_48:\n  not(0x00)\n    /* \"#utility.yul\":1692:1693   */\n  0x03\n    /* \"#utility.yul\":1688:1699   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1684:1708   */\n  shr\n    /* \"#utility.yul\":1680:1709   */\n  not\n    /* \"#utility.yul\":1670:1710   */\n  and\n    /* \"#utility.yul\":1716:1717   */\n  0x01\n    /* \"#utility.yul\":1712:1723   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1667:1724   */\n  or\n    /* \"#utility.yul\":2990:3071   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2137:3081   */\n  jump(tag_39)\n    /* \"#utility.yul\":2167:2830   */\ntag_47:\n    /* \"#utility.yul\":961:962   */\n  0x00\n    /* \"#utility.yul\":954:968   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":998:1002   */\n  0x20\n    /* \"#utility.yul\":985:1003   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2203:2223   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2321:2557   */\ntag_51:\n    /* \"#utility.yul\":2335:2342   */\n  dup3\n    /* \"#utility.yul\":2332:2333   */\n  dup2\n    /* \"#utility.yul\":2329:2343   */\n  lt\n    /* \"#utility.yul\":2321:2557   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2424:2443   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2418:2444   */\n  mload\n    /* \"#utility.yul\":2403:2445   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2516:2543   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2484:2485   */\n  0x01\n    /* \"#utility.yul\":2472:2486   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2351:2370   */\n  dup5\n  add\n    /* \"#utility.yul\":2321:2557   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":2325:2328   */\n  pop\n    /* \"#utility.yul\":2585:2591   */\n  dup6\n    /* \"#utility.yul\":2576:2583   */\n  dup3\n    /* \"#utility.yul\":2573:2592   */\n  lt\n    /* \"#utility.yul\":2570:2771   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2646:2665   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2640:2666   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2729:2730   */\n  0x03\n    /* \"#utility.yul\":2725:2739   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2741:2744   */\n  0xf8\n    /* \"#utility.yul\":2721:2745   */\n  and\n    /* \"#utility.yul\":2717:2754   */\n  shr\n    /* \"#utility.yul\":2713:2755   */\n  not\n    /* \"#utility.yul\":2698:2756   */\n  and\n    /* \"#utility.yul\":2683:2757   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2570:2771   */\ntag_54:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2817:2818   */\n  0x01\n    /* \"#utility.yul\":2801:2815   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2797:2819   */\n  add\n    /* \"#utility.yul\":2784:2820   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1735:3087   */\n  jump\t// out\ntag_27:\n    /* \"TTT_ERC1155Token-Jason.sol\":43127:43401  contract TTTERC1155 is ERC1155 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"TTT_ERC1155Token-Jason.sol\":43127:43401  contract TTTERC1155 is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x156e29f6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":2797:2830  _supportedInterfaces[interfaceId] */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":2773:2777  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":2797:2830  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":2688:2838  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":43255:43398  function mint(address winer, uint256 id, uint256 value) external {... */\n    tag_6:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_31\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_9:\n      tag_31\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_10:\n      tag_19\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15182:15186  bool */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15224  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15233  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15206:15243  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15323:16247  function safeTransferFrom(... */\n    tag_11:\n      tag_31\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n        /* \"TTT_ERC1155Token-Jason.sol\":13767:13774  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13795:13816  account != address(0) */\n      dup4\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8536:8538   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8518:8539   */\n      mstore\n        /* \"#utility.yul\":8575:8577   */\n      0x2b\n        /* \"#utility.yul\":8555:8573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8548:8578   */\n      mstore\n        /* \"#utility.yul\":8614:8648   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8594:8612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8587:8649   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8665:8683   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8658:8699   */\n      mstore\n        /* \"#utility.yul\":8716:8735   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":13787:13864  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13895  _balances[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13891  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13895  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":13882:13904  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":13681:13912  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_58:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"TTT_ERC1155Token-Jason.sol\":13485:13498  string memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":13518:13522  _uri */\n      0x03\n        /* \"TTT_ERC1155Token-Jason.sol\":13511:13522  return _uri */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":13423:13530  function uri(uint256) external view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":43255:43398  function mint(address winer, uint256 id, uint256 value) external {... */\n    tag_34:\n        /* \"TTT_ERC1155Token-Jason.sol\":43331:43349  bytes memory empty */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":43360:43390  _mint(winer, id, value, empty) */\n      tag_71\n        /* \"TTT_ERC1155Token-Jason.sol\":43366:43371  winer */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":43373:43375  id */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":43377:43382  value */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":43384:43389  empty */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":43360:43365  _mint */\n      tag_72\n        /* \"TTT_ERC1155Token-Jason.sol\":43360:43390  _mint(winer, id, value, empty) */\n      jump\t// in\n    tag_71:\n        /* \"TTT_ERC1155Token-Jason.sol\":43320:43398  {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":43255:43398  function mint(address winer, uint256 id, uint256 value) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n    tag_38:\n        /* \"TTT_ERC1155Token-Jason.sol\":16589:16596  amounts */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16589:16603  amounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16578  ids */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16585  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":16575:16603  ids.length == amounts.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9333:9335   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9315:9336   */\n      mstore\n        /* \"#utility.yul\":9372:9374   */\n      0x28\n        /* \"#utility.yul\":9352:9370   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9345:9375   */\n      mstore\n        /* \"#utility.yul\":9411:9445   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":9391:9409   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9384:9446   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9462:9480   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9455:9493   */\n      mstore\n        /* \"#utility.yul\":9510:9529   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_60\n        /* \"#utility.yul\":9131:9535   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16567:16648  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16667:16683  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":16659:16725  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_79\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16778  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16778  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":16758:16818  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_83\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16782:16818  isApprovedForAll(from, _msgSender()) */\n      tag_83\n        /* \"TTT_ERC1155Token-Jason.sol\":16799:16803  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_50\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":16782:16818  isApprovedForAll(from, _msgSender()) */\n    tag_83:\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10148:10150   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10130:10151   */\n      mstore\n        /* \"#utility.yul\":10187:10189   */\n      0x32\n        /* \"#utility.yul\":10167:10185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10160:10190   */\n      mstore\n        /* \"#utility.yul\":10226:10260   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":10206:10224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10199:10261   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":10277:10295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10270:10318   */\n      mstore\n        /* \"#utility.yul\":10335:10354   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n      tag_60\n        /* \"#utility.yul\":9946:10360   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":16736:16896  require(... */\n    tag_85:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":16909:16925  address operator */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_91:\n        /* \"TTT_ERC1155Token-Jason.sol\":17050:17053  ids */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":17050:17060  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17046:17047  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17046:17060  i < ids.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":17082:17092  uint256 id */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17095:17098  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17099:17100  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17095:17101  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17082:17101  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17116:17130  uint256 amount */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17133:17140  amounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":17141:17142  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":17133:17143  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_96\n      jump\t// in\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":17116:17143  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      tag_99\n        /* \"TTT_ERC1155Token-Jason.sol\":17224:17230  amount */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17191  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17195  _balances[id] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17192:17194  id */\n      dup7\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17195  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17201  _balances[id][from] */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":17196:17200  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17201  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17205  _balances[id][from].sub */\n      tag_100\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17182:17308  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17173  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17169  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17173  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17179  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17160:17308  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17360  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17372  _balances[id][to].add(amount) */\n      tag_101\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":17365:17371  amount */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17364  _balances[id][to].add */\n      tag_102\n        /* \"TTT_ERC1155Token-Jason.sol\":17343:17372  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_101:\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17336  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17332  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17336  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17340  _balances[id][to] */\n      dup13\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":17323:17372  _balances[id][to] = _balances[id][to].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17062:17065  ++i */\n      tag_103\n      dup2\n      tag_104\n      jump\t// in\n    tag_103:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17026:17384  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_91)\n    tag_92:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":17431:17433  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17425:17429  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":17415:17423  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"TTT_ERC1155Token-Jason.sol\":17435:17438  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17440:17447  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17401:17448  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17536  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_107\n        /* \"TTT_ERC1155Token-Jason.sol\":17497:17505  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":17507:17511  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17513:17515  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17517:17520  ids */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17522:17529  amounts */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17531:17535  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17496  _doSafeBatchTransferAcceptanceCheck */\n      tag_108\n        /* \"TTT_ERC1155Token-Jason.sol\":17461:17536  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_107:\n        /* \"TTT_ERC1155Token-Jason.sol\":16556:17544  {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n    tag_42:\n        /* \"TTT_ERC1155Token-Jason.sol\":14259:14275  uint256[] memory */\n      0x60\n        /* \"TTT_ERC1155Token-Jason.sol\":14320:14323  ids */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14320:14330  ids.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14309  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14316  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14301:14330  accounts.length == ids.length */\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11441:11443   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11423:11444   */\n      mstore\n        /* \"#utility.yul\":11480:11482   */\n      0x29\n        /* \"#utility.yul\":11460:11478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11453:11483   */\n      mstore\n        /* \"#utility.yul\":11519:11553   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":11499:11517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11492:11554   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":11570:11588   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11563:11602   */\n      mstore\n        /* \"#utility.yul\":11619:11638   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_60\n        /* \"#utility.yul\":11239:11644   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14293:14376  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_110:\n        /* \"TTT_ERC1155Token-Jason.sol\":14389:14419  uint256[] memory batchBalances */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14436:14444  accounts */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14436:14451  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14422:14452  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_116:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14389:14452  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14470:14479  uint256 i */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_117:\n        /* \"TTT_ERC1155Token-Jason.sol\":14489:14497  accounts */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":14489:14504  accounts.length */\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14485:14486  i */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":14485:14504  i < accounts.length */\n      lt\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14575  balanceOf(accounts[i], ids[i]) */\n      tag_120\n        /* \"TTT_ERC1155Token-Jason.sol\":14555:14563  accounts */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14564:14565  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14555:14566  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_122\n      tag_96\n      jump\t// in\n    tag_122:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14568:14571  ids */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":14572:14573  i */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":14568:14574  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_96\n      jump\t// in\n    tag_124:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14554  balanceOf */\n      tag_16\n        /* \"TTT_ERC1155Token-Jason.sol\":14545:14575  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_120:\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14539  batchBalances */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14540:14541  i */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14542  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_96\n      jump\t// in\n    tag_126:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14526:14575  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14506:14509  ++i */\n      tag_127\n      dup2\n      tag_104\n      jump\t// in\n    tag_127:\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14465:14587  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_117)\n    tag_118:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":14606:14619  batchBalances */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":14078:14627  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14803:14827  _msgSender() != operator */\n      dup3\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14803:14827  _msgSender() != operator */\n      sub\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11851:11853   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11833:11854   */\n      mstore\n        /* \"#utility.yul\":11890:11892   */\n      0x29\n        /* \"#utility.yul\":11870:11888   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11863:11893   */\n      mstore\n        /* \"#utility.yul\":11929:11963   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":11909:11927   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11902:11964   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":11980:11998   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11973:12012   */\n      mstore\n        /* \"#utility.yul\":12029:12048   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_60\n        /* \"#utility.yul\":11649:12054   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":14795:14873  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n    tag_130:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14918  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14904  _operatorApprovals */\n      0x02\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14918  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14928  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14939  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap1\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":14886:14928  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":14955:15003  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TTT_ERC1155Token-Jason.sol\":14700:15011  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":15323:16247  function safeTransferFrom(... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15549:15565  to != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":15541:15607  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_79\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15660  from == _msgSender() */\n      dup6\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15660  from == _msgSender() */\n      eq\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":15640:15700  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_142\n      jumpi\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":15664:15700  isApprovedForAll(from, _msgSender()) */\n      tag_142\n        /* \"TTT_ERC1155Token-Jason.sol\":15681:15685  from */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15083:15251  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_50\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":15664:15700  isApprovedForAll(from, _msgSender()) */\n    tag_142:\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12261:12263   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12243:12264   */\n      mstore\n        /* \"#utility.yul\":12300:12302   */\n      0x29\n        /* \"#utility.yul\":12280:12298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12273:12303   */\n      mstore\n        /* \"#utility.yul\":12339:12373   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":12319:12337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12312:12374   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":12390:12408   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12383:12422   */\n      mstore\n        /* \"#utility.yul\":12439:12458   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n      tag_60\n        /* \"#utility.yul\":12059:12464   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15618:15769  require(... */\n    tag_144:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":15826:15922  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_148\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":15857:15861  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15863:15865  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15888  _asSingletonArray(id) */\n      tag_149\n        /* \"TTT_ERC1155Token-Jason.sol\":15885:15887  id */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15884  _asSingletonArray */\n      tag_150\n        /* \"TTT_ERC1155Token-Jason.sol\":15867:15888  _asSingletonArray(id) */\n      jump\t// in\n    tag_149:\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15915  _asSingletonArray(amount) */\n      tag_151\n        /* \"TTT_ERC1155Token-Jason.sol\":15908:15914  amount */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15907  _asSingletonArray */\n      tag_150\n        /* \"TTT_ERC1155Token-Jason.sol\":15890:15915  _asSingletonArray(amount) */\n      jump\t// in\n    tag_151:\n        /* \"TTT_ERC1155Token-Jason.sol\":16324:17544  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":15826:15922  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_148:\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_152\n        /* \"TTT_ERC1155Token-Jason.sol\":15981:15987  amount */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15970  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15966  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15970  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15976  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:15980  _balances[id][from].sub */\n      tag_100\n        /* \"TTT_ERC1155Token-Jason.sol\":15957:16034  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_152:\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15948  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15944  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15948  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:15954  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":15935:16034  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16082  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16094  _balances[id][to].add(amount) */\n      tag_153\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":16087:16093  amount */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16086  _balances[id][to].add */\n      tag_102\n        /* \"TTT_ERC1155Token-Jason.sol\":16065:16094  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_153:\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16058  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16054  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16058  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16062  _balances[id][to] */\n      dup11\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":16045:16094  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n        /* \"#utility.yul\":12643:12668   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12684:12702   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12677:12711   */\n      dup8\n      swap1\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      dup10\n      dup4\n      and\n      swap3\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12616:12634   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":16112:16158  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16239  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_107\n        /* \"TTT_ERC1155Token-Jason.sol\":16202:16210  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":16212:16216  from */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16218:16220  to */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16222:16224  id */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16226:16232  amount */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16234:16238  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16201  _doSafeTransferAcceptanceCheck */\n      tag_157\n        /* \"TTT_ERC1155Token-Jason.sol\":16171:16239  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":18877:19460  function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":18992:19013  account != address(0) */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":18984:19051  require(account != address(0), \"ERC1155: mint to the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12924:12926   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":18984:19051  require(account != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12906:12927   */\n      mstore\n        /* \"#utility.yul\":12963:12965   */\n      0x21\n        /* \"#utility.yul\":12943:12961   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12936:12966   */\n      mstore\n        /* \"#utility.yul\":13002:13036   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":12982:13000   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12975:13037   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":13053:13071   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13046:13077   */\n      mstore\n        /* \"#utility.yul\":13094:13113   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":18984:19051  require(account != address(0), \"ERC1155: mint to the zero address\") */\n      tag_60\n        /* \"#utility.yul\":12722:13119   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":18984:19051  require(account != address(0), \"ERC1155: mint to the zero address\") */\n    tag_159:\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      caller\n        /* \"TTT_ERC1155Token-Jason.sol\":19108:19215  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_163\n        /* \"TTT_ERC1155Token-Jason.sol\":1697:1707  msg.sender */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":19064:19080  address operator */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":19151:19158  account */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":19160:19181  _asSingletonArray(id) */\n      tag_149\n        /* \"TTT_ERC1155Token-Jason.sol\":19178:19180  id */\n      dup9\n        /* \"TTT_ERC1155Token-Jason.sol\":19160:19177  _asSingletonArray */\n      tag_150\n        /* \"TTT_ERC1155Token-Jason.sol\":19160:19181  _asSingletonArray(id) */\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":19108:19215  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_163:\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19266  _balances[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19262  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19266  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19275  _balances[id][account] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19287  _balances[id][account].add(amount) */\n      tag_166\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":19280:19286  amount */\n      dup5\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19279  _balances[id][account].add */\n      tag_102\n        /* \"TTT_ERC1155Token-Jason.sol\":19253:19287  _balances[id][account].add(amount) */\n      jump\t// in\n    tag_166:\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19241  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19237  _balances */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19241  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19250  _balances[id][account] */\n      dup11\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19287  _balances[id][account] = _balances[id][account].add(amount) */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"TTT_ERC1155Token-Jason.sol\":19303:19360  TransferSingle(operator, address(0), account, id, amount) */\n      dup2\n      mload\n        /* \"#utility.yul\":12643:12668   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":12684:12702   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":12677:12711   */\n      dup9\n      swap1\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":19228:19250  _balances[id][account] */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":19303:19360  TransferSingle(operator, address(0), account, id, amount) */\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12616:12634   */\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":19303:19360  TransferSingle(operator, address(0), account, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"TTT_ERC1155Token-Jason.sol\":19373:19452  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      tag_151\n        /* \"TTT_ERC1155Token-Jason.sol\":19404:19412  operator */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":19422:19423  0 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":19426:19433  account */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":19435:19437  id */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":19439:19445  amount */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":19447:19451  data */\n      dup8\n        /* \"TTT_ERC1155Token-Jason.sol\":19373:19403  _doSafeTransferAcceptanceCheck */\n      tag_157\n        /* \"TTT_ERC1155Token-Jason.sol\":19373:19452  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":33345:33511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"TTT_ERC1155Token-Jason.sol\":33431:33438  uint256 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":33467:33479  errorMessage */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":33459:33465  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":33451:33480  require(b <= a, errorMessage) */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_172:\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33503  a - b */\n      tag_174\n        /* \"TTT_ERC1155Token-Jason.sol\":33502:33503  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33499  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":33498:33503  a - b */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"TTT_ERC1155Token-Jason.sol\":33491:33503  return a - b */\n      swap5\n        /* \"TTT_ERC1155Token-Jason.sol\":33345:33511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":30518:30697  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"TTT_ERC1155Token-Jason.sol\":30576:30583  uint256 */\n      0x00\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30613  a + b */\n      tag_177\n        /* \"TTT_ERC1155Token-Jason.sol\":30612:30613  b */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30609  a */\n      dup6\n        /* \"TTT_ERC1155Token-Jason.sol\":30608:30613  a + b */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"TTT_ERC1155Token-Jason.sol\":30596:30613  uint256 c = a + b */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":30637:30638  a */\n      dup4\n        /* \"TTT_ERC1155Token-Jason.sol\":30632:30633  c */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":30632:30638  c >= a */\n      lt\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13589:13591   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13571:13592   */\n      mstore\n        /* \"#utility.yul\":13628:13630   */\n      0x1b\n        /* \"#utility.yul\":13608:13626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13601:13631   */\n      mstore\n        /* \"#utility.yul\":13667:13696   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":13647:13665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13640:13697   */\n      mstore\n        /* \"#utility.yul\":13714:13732   */\n      0x64\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_60\n        /* \"#utility.yul\":13387:13738   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":30624:30670  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_179:\n        /* \"TTT_ERC1155Token-Jason.sol\":30688:30689  c */\n      swap4\n        /* \"TTT_ERC1155Token-Jason.sol\":30518:30697  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":24244:25043  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24498:24511  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36233:36253  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36272:36280  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":24494:25036  if (to.isContract()) {... */\n      tag_107\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24577  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_186\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24578:24586  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24588:24592  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24594:24597  ids */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24599:24606  amounts */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24608:24612  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":24534:24613  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_189\n      swap2\n      dup2\n      add\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      0x01\n    tag_188:\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_191\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n      dup1\n      0x08c379a0\n      sub\n      tag_194\n      jumpi\n      pop\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n      dup1\n      tag_199\n      jumpi\n      pop\n      jump(tag_193)\n    tag_199:\n        /* \"TTT_ERC1155Token-Jason.sol\":24898:24904  reason */\n      dup1\n        /* \"TTT_ERC1155Token-Jason.sol\":24891:24905  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_194:\n      pop\n    tag_193:\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15891:15893   */\n      0x20\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15873:15894   */\n      mstore\n        /* \"#utility.yul\":15930:15932   */\n      0x34\n        /* \"#utility.yul\":15910:15928   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15903:15933   */\n      mstore\n        /* \"#utility.yul\":15969:16003   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15949:15967   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15942:16004   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":16020:16038   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16013:16063   */\n      mstore\n        /* \"#utility.yul\":16080:16099   */\n      0x84\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":24947:25009  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_60\n        /* \"#utility.yul\":15689:16105   */\n      jump\n        /* \"TTT_ERC1155Token-Jason.sol\":24530:25025  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_191:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":24663:24727  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":24659:24822  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_204\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":24752:24802  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_206\n      jump\t// in\n        /* \"TTT_ERC1155Token-Jason.sol\":24659:24822  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_204:\n        /* \"TTT_ERC1155Token-Jason.sol\":24614:24837  returns (bytes4 response) {... */\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":24244:25043  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":25051:25249  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_150:\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"TTT_ERC1155Token-Jason.sol\":25185:25186  1 */\n      0x01\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25117:25133  uint256[] memory */\n      0x60\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25146:25168  uint256[] memory array */\n      0x00\n      swap2\n        /* \"TTT_ERC1155Token-Jason.sol\":25171:25187  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25146:25187  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"TTT_ERC1155Token-Jason.sol\":25209:25216  element */\n      dup3\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25203  array */\n      dup2\n        /* \"TTT_ERC1155Token-Jason.sol\":25204:25205  0 */\n      0x00\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25206  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_96\n      jump\t// in\n    tag_212:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TTT_ERC1155Token-Jason.sol\":25198:25216  array[0] = element */\n      mstore\n        /* \"TTT_ERC1155Token-Jason.sol\":25236:25241  array */\n      swap3\n        /* \"TTT_ERC1155Token-Jason.sol\":25051:25249  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TTT_ERC1155Token-Jason.sol\":23474:24236  function _doSafeTransferAcceptanceCheck(... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23703:23716  to.isContract */\n      dup5\n      and\n        /* \"TTT_ERC1155Token-Jason.sol\":36233:36253  extcodesize(account) */\n      extcodesize\n        /* \"TTT_ERC1155Token-Jason.sol\":36272:36280  size > 0 */\n      iszero\n        /* \"TTT_ERC1155Token-Jason.sol\":23699:24229  if (to.isContract()) {... */\n      tag_107\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23777  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_216\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23778:23786  operator */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23788:23792  from */\n      dup10\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23794:23796  id */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23798:23804  amount */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23806:23810  data */\n      dup9\n      swap1\n        /* \"TTT_ERC1155Token-Jason.sol\":23739:23811  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_219\n      swap2\n      dup2\n      add\n      swap1\n      tag_190\n      jump\t// in\n    tag_219:\n      0x01\n    tag_218:\n        /* \"TTT_ERC1155Token-Jason.sol\":23735:24218  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_220\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_220:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"TTT_ERC1155Token-Jason.sol\":23861:23920  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"TTT_ERC1155Token-Jason.sol\":23857:24015  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_204\n      jumpi\n        /* \"TTT_ERC1155Token-Jason.sol\":23945:23995  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_206\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_233:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_244:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_15:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_246:\n        /* \"#utility.yul\":360:389   */\n      tag_247\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_233\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_234:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_250:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_21:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_252:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_179\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_234\n      jump\t// in\n        /* \"#utility.yul\":1211:1391   */\n    tag_27:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_256:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_235:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_258:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_258)\n    tag_260:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_30:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_179\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_235\n      jump\t// in\n        /* \"#utility.yul\":2049:2371   */\n    tag_33:\n        /* \"#utility.yul\":2126:2132   */\n      0x00\n        /* \"#utility.yul\":2134:2140   */\n      dup1\n        /* \"#utility.yul\":2142:2148   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x60\n        /* \"#utility.yul\":2183:2192   */\n      dup5\n        /* \"#utility.yul\":2174:2181   */\n      dup7\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2215   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2208:2209   */\n      dup1\n        /* \"#utility.yul\":2201:2213   */\n      revert\n        /* \"#utility.yul\":2163:2215   */\n    tag_264:\n        /* \"#utility.yul\":2234:2263   */\n      tag_265\n        /* \"#utility.yul\":2253:2262   */\n      dup5\n        /* \"#utility.yul\":2234:2263   */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2224:2263   */\n      swap6\n        /* \"#utility.yul\":2310:2312   */\n      0x20\n        /* \"#utility.yul\":2295:2313   */\n      dup6\n      add\n        /* \"#utility.yul\":2282:2314   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2361:2363   */\n      0x40\n        /* \"#utility.yul\":2346:2364   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2333:2365   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2049:2371   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2376:2503   */\n    tag_115:\n        /* \"#utility.yul\":2437:2447   */\n      0x4e487b71\n        /* \"#utility.yul\":2432:2435   */\n      0xe0\n        /* \"#utility.yul\":2428:2448   */\n      shl\n        /* \"#utility.yul\":2425:2426   */\n      0x00\n        /* \"#utility.yul\":2418:2449   */\n      mstore\n        /* \"#utility.yul\":2468:2472   */\n      0x41\n        /* \"#utility.yul\":2465:2466   */\n      0x04\n        /* \"#utility.yul\":2458:2473   */\n      mstore\n        /* \"#utility.yul\":2492:2496   */\n      0x24\n        /* \"#utility.yul\":2489:2490   */\n      0x00\n        /* \"#utility.yul\":2482:2497   */\n      revert\n        /* \"#utility.yul\":2508:2757   */\n    tag_236:\n        /* \"#utility.yul\":2618:2620   */\n      0x1f\n        /* \"#utility.yul\":2599:2612   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2595:2622   */\n      and\n        /* \"#utility.yul\":2583:2623   */\n      dup2\n      add\n        /* \"#utility.yul\":2653:2671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2638:2672   */\n      dup2\n      gt\n        /* \"#utility.yul\":2674:2696   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2635:2697   */\n      or\n        /* \"#utility.yul\":2632:2720   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2700:2718   */\n      tag_269\n      tag_115\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2736:2738   */\n      0x40\n        /* \"#utility.yul\":2729:2751   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2508:2757   */\n      jump\t// out\n        /* \"#utility.yul\":2762:2945   */\n    tag_237:\n        /* \"#utility.yul\":2822:2826   */\n      0x00\n        /* \"#utility.yul\":2855:2873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2847:2853   */\n      dup3\n        /* \"#utility.yul\":2844:2874   */\n      gt\n        /* \"#utility.yul\":2841:2897   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2877:2895   */\n      tag_272\n      tag_115\n      jump\t// in\n    tag_272:\n      pop\n        /* \"#utility.yul\":2922:2923   */\n      0x05\n        /* \"#utility.yul\":2918:2932   */\n      shl\n        /* \"#utility.yul\":2934:2938   */\n      0x20\n        /* \"#utility.yul\":2914:2939   */\n      add\n      swap1\n        /* \"#utility.yul\":2762:2945   */\n      jump\t// out\n        /* \"#utility.yul\":2950:3674   */\n    tag_238:\n        /* \"#utility.yul\":3004:3009   */\n      0x00\n        /* \"#utility.yul\":3057:3060   */\n      dup3\n        /* \"#utility.yul\":3050:3054   */\n      0x1f\n        /* \"#utility.yul\":3042:3048   */\n      dup4\n        /* \"#utility.yul\":3038:3055   */\n      add\n        /* \"#utility.yul\":3034:3061   */\n      slt\n        /* \"#utility.yul\":3024:3079   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3075:3076   */\n      0x00\n        /* \"#utility.yul\":3072:3073   */\n      dup1\n        /* \"#utility.yul\":3065:3077   */\n      revert\n        /* \"#utility.yul\":3024:3079   */\n    tag_274:\n        /* \"#utility.yul\":3111:3117   */\n      dup2\n        /* \"#utility.yul\":3098:3118   */\n      calldataload\n        /* \"#utility.yul\":3137:3141   */\n      0x20\n        /* \"#utility.yul\":3160:3203   */\n      tag_275\n        /* \"#utility.yul\":3200:3202   */\n      dup3\n        /* \"#utility.yul\":3160:3203   */\n      tag_237\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3232:3234   */\n      0x40\n        /* \"#utility.yul\":3226:3235   */\n      mload\n        /* \"#utility.yul\":3244:3275   */\n      tag_276\n        /* \"#utility.yul\":3272:3274   */\n      dup3\n        /* \"#utility.yul\":3264:3270   */\n      dup3\n        /* \"#utility.yul\":3244:3275   */\n      tag_236\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3310:3328   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3402:3403   */\n      0x05\n        /* \"#utility.yul\":3398:3408   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3386:3409   */\n      dup6\n      add\n        /* \"#utility.yul\":3382:3414   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3344:3359   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3426:3441   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3423:3458   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3451:3452   */\n      dup1\n        /* \"#utility.yul\":3444:3456   */\n      revert\n        /* \"#utility.yul\":3423:3458   */\n    tag_277:\n        /* \"#utility.yul\":3490:3492   */\n      dup3\n        /* \"#utility.yul\":3482:3488   */\n      dup7\n        /* \"#utility.yul\":3478:3493   */\n      add\n        /* \"#utility.yul\":3502:3644   */\n    tag_278:\n        /* \"#utility.yul\":3518:3524   */\n      dup5\n        /* \"#utility.yul\":3513:3516   */\n      dup2\n        /* \"#utility.yul\":3510:3525   */\n      lt\n        /* \"#utility.yul\":3502:3644   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3584:3601   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3572:3602   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3622:3634   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3535:3547   */\n      dup4\n      add\n        /* \"#utility.yul\":3502:3644   */\n      jump(tag_278)\n    tag_280:\n      pop\n        /* \"#utility.yul\":3662:3668   */\n      swap7\n        /* \"#utility.yul\":2950:3674   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3679:4234   */\n    tag_239:\n        /* \"#utility.yul\":3721:3726   */\n      0x00\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3767:3771   */\n      0x1f\n        /* \"#utility.yul\":3759:3765   */\n      dup4\n        /* \"#utility.yul\":3755:3772   */\n      add\n        /* \"#utility.yul\":3751:3778   */\n      slt\n        /* \"#utility.yul\":3741:3796   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3792:3793   */\n      0x00\n        /* \"#utility.yul\":3789:3790   */\n      dup1\n        /* \"#utility.yul\":3782:3794   */\n      revert\n        /* \"#utility.yul\":3741:3796   */\n    tag_282:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3815:3835   */\n      calldataload\n        /* \"#utility.yul\":3854:3872   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3850:3852   */\n      dup2\n        /* \"#utility.yul\":3847:3873   */\n      gt\n        /* \"#utility.yul\":3844:3896   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3876:3894   */\n      tag_284\n      tag_115\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3925:3927   */\n      0x40\n        /* \"#utility.yul\":3919:3928   */\n      mload\n        /* \"#utility.yul\":3937:4004   */\n      tag_285\n        /* \"#utility.yul\":3992:3994   */\n      0x1f\n        /* \"#utility.yul\":3973:3986   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3969:3996   */\n      and\n        /* \"#utility.yul\":3998:4002   */\n      0x20\n        /* \"#utility.yul\":3965:4003   */\n      add\n        /* \"#utility.yul\":3919:3928   */\n      dup3\n        /* \"#utility.yul\":3937:4004   */\n      tag_236\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4028:4030   */\n      dup2\n        /* \"#utility.yul\":4020:4026   */\n      dup2\n        /* \"#utility.yul\":4013:4031   */\n      mstore\n        /* \"#utility.yul\":4074:4077   */\n      dup5\n        /* \"#utility.yul\":4067:4071   */\n      0x20\n        /* \"#utility.yul\":4062:4064   */\n      dup4\n        /* \"#utility.yul\":4054:4060   */\n      dup7\n        /* \"#utility.yul\":4050:4065   */\n      add\n        /* \"#utility.yul\":4046:4072   */\n      add\n        /* \"#utility.yul\":4043:4078   */\n      gt\n        /* \"#utility.yul\":4040:4095   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":4091:4092   */\n      0x00\n        /* \"#utility.yul\":4088:4089   */\n      dup1\n        /* \"#utility.yul\":4081:4093   */\n      revert\n        /* \"#utility.yul\":4040:4095   */\n    tag_286:\n        /* \"#utility.yul\":4155:4157   */\n      dup2\n        /* \"#utility.yul\":4148:4152   */\n      0x20\n        /* \"#utility.yul\":4140:4146   */\n      dup6\n        /* \"#utility.yul\":4136:4153   */\n      add\n        /* \"#utility.yul\":4129:4133   */\n      0x20\n        /* \"#utility.yul\":4121:4127   */\n      dup4\n        /* \"#utility.yul\":4117:4134   */\n      add\n        /* \"#utility.yul\":4104:4158   */\n      calldatacopy\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4178:4193   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4195:4199   */\n      0x20\n        /* \"#utility.yul\":4174:4200   */\n      add\n        /* \"#utility.yul\":4167:4204   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4182:4188   */\n      swap4\n        /* \"#utility.yul\":3679:4234   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:5182   */\n    tag_37:\n        /* \"#utility.yul\":4393:4399   */\n      0x00\n        /* \"#utility.yul\":4401:4407   */\n      dup1\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4478:4481   */\n      0xa0\n        /* \"#utility.yul\":4466:4475   */\n      dup7\n        /* \"#utility.yul\":4457:4464   */\n      dup9\n        /* \"#utility.yul\":4453:4476   */\n      sub\n        /* \"#utility.yul\":4449:4482   */\n      slt\n        /* \"#utility.yul\":4446:4499   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4495:4496   */\n      0x00\n        /* \"#utility.yul\":4492:4493   */\n      dup1\n        /* \"#utility.yul\":4485:4497   */\n      revert\n        /* \"#utility.yul\":4446:4499   */\n    tag_288:\n        /* \"#utility.yul\":4518:4547   */\n      tag_289\n        /* \"#utility.yul\":4537:4546   */\n      dup7\n        /* \"#utility.yul\":4518:4547   */\n      tag_233\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4508:4547   */\n      swap5\n      pop\n        /* \"#utility.yul\":4566:4604   */\n      tag_290\n        /* \"#utility.yul\":4600:4602   */\n      0x20\n        /* \"#utility.yul\":4589:4598   */\n      dup8\n        /* \"#utility.yul\":4585:4603   */\n      add\n        /* \"#utility.yul\":4566:4604   */\n      tag_233\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4556:4604   */\n      swap4\n      pop\n        /* \"#utility.yul\":4655:4657   */\n      0x40\n        /* \"#utility.yul\":4644:4653   */\n      dup7\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4627:4659   */\n      calldataload\n        /* \"#utility.yul\":4678:4696   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4719:4721   */\n      dup1\n        /* \"#utility.yul\":4711:4717   */\n      dup3\n        /* \"#utility.yul\":4708:4722   */\n      gt\n        /* \"#utility.yul\":4705:4739   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4735:4736   */\n      0x00\n        /* \"#utility.yul\":4732:4733   */\n      dup1\n        /* \"#utility.yul\":4725:4737   */\n      revert\n        /* \"#utility.yul\":4705:4739   */\n    tag_291:\n        /* \"#utility.yul\":4758:4819   */\n      tag_292\n        /* \"#utility.yul\":4811:4818   */\n      dup10\n        /* \"#utility.yul\":4802:4808   */\n      dup4\n        /* \"#utility.yul\":4791:4800   */\n      dup11\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4758:4819   */\n      tag_238\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4748:4819   */\n      swap5\n      pop\n        /* \"#utility.yul\":4872:4874   */\n      0x60\n        /* \"#utility.yul\":4861:4870   */\n      dup9\n        /* \"#utility.yul\":4857:4875   */\n      add\n        /* \"#utility.yul\":4844:4876   */\n      calldataload\n        /* \"#utility.yul\":4828:4876   */\n      swap2\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      dup1\n        /* \"#utility.yul\":4891:4899   */\n      dup3\n        /* \"#utility.yul\":4888:4904   */\n      gt\n        /* \"#utility.yul\":4885:4921   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4917:4918   */\n      0x00\n        /* \"#utility.yul\":4914:4915   */\n      dup1\n        /* \"#utility.yul\":4907:4919   */\n      revert\n        /* \"#utility.yul\":4885:4921   */\n    tag_293:\n        /* \"#utility.yul\":4940:5003   */\n      tag_294\n        /* \"#utility.yul\":4995:5002   */\n      dup10\n        /* \"#utility.yul\":4984:4992   */\n      dup4\n        /* \"#utility.yul\":4973:4982   */\n      dup11\n        /* \"#utility.yul\":4969:4993   */\n      add\n        /* \"#utility.yul\":4940:5003   */\n      tag_238\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4930:5003   */\n      swap4\n      pop\n        /* \"#utility.yul\":5056:5059   */\n      0x80\n        /* \"#utility.yul\":5045:5054   */\n      dup9\n        /* \"#utility.yul\":5041:5060   */\n      add\n        /* \"#utility.yul\":5028:5061   */\n      calldataload\n        /* \"#utility.yul\":5012:5061   */\n      swap2\n      pop\n        /* \"#utility.yul\":5086:5088   */\n      dup1\n        /* \"#utility.yul\":5076:5084   */\n      dup3\n        /* \"#utility.yul\":5073:5089   */\n      gt\n        /* \"#utility.yul\":5070:5106   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":5102:5103   */\n      0x00\n        /* \"#utility.yul\":5099:5100   */\n      dup1\n        /* \"#utility.yul\":5092:5104   */\n      revert\n        /* \"#utility.yul\":5070:5106   */\n    tag_295:\n      pop\n        /* \"#utility.yul\":5125:5176   */\n      tag_296\n        /* \"#utility.yul\":5168:5175   */\n      dup9\n        /* \"#utility.yul\":5157:5165   */\n      dup3\n        /* \"#utility.yul\":5146:5155   */\n      dup10\n        /* \"#utility.yul\":5142:5166   */\n      add\n        /* \"#utility.yul\":5125:5176   */\n      tag_239\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5115:5176   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4239:5182   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5187:6395   */\n    tag_41:\n        /* \"#utility.yul\":5305:5311   */\n      0x00\n        /* \"#utility.yul\":5313:5319   */\n      dup1\n        /* \"#utility.yul\":5366:5368   */\n      0x40\n        /* \"#utility.yul\":5354:5363   */\n      dup4\n        /* \"#utility.yul\":5345:5352   */\n      dup6\n        /* \"#utility.yul\":5341:5364   */\n      sub\n        /* \"#utility.yul\":5337:5369   */\n      slt\n        /* \"#utility.yul\":5334:5386   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":5382:5383   */\n      0x00\n        /* \"#utility.yul\":5379:5380   */\n      dup1\n        /* \"#utility.yul\":5372:5384   */\n      revert\n        /* \"#utility.yul\":5334:5386   */\n    tag_298:\n        /* \"#utility.yul\":5422:5431   */\n      dup3\n        /* \"#utility.yul\":5409:5432   */\n      calldataload\n        /* \"#utility.yul\":5451:5469   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5492:5494   */\n      dup1\n        /* \"#utility.yul\":5484:5490   */\n      dup3\n        /* \"#utility.yul\":5481:5495   */\n      gt\n        /* \"#utility.yul\":5478:5512   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5508:5509   */\n      0x00\n        /* \"#utility.yul\":5505:5506   */\n      dup1\n        /* \"#utility.yul\":5498:5510   */\n      revert\n        /* \"#utility.yul\":5478:5512   */\n    tag_299:\n        /* \"#utility.yul\":5546:5552   */\n      dup2\n        /* \"#utility.yul\":5535:5544   */\n      dup6\n        /* \"#utility.yul\":5531:5553   */\n      add\n        /* \"#utility.yul\":5521:5553   */\n      swap2\n      pop\n        /* \"#utility.yul\":5591:5598   */\n      dup6\n        /* \"#utility.yul\":5584:5588   */\n      0x1f\n        /* \"#utility.yul\":5580:5582   */\n      dup4\n        /* \"#utility.yul\":5576:5589   */\n      add\n        /* \"#utility.yul\":5572:5599   */\n      slt\n        /* \"#utility.yul\":5562:5617   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5613:5614   */\n      0x00\n        /* \"#utility.yul\":5610:5611   */\n      dup1\n        /* \"#utility.yul\":5603:5615   */\n      revert\n        /* \"#utility.yul\":5562:5617   */\n    tag_300:\n        /* \"#utility.yul\":5649:5651   */\n      dup2\n        /* \"#utility.yul\":5636:5652   */\n      calldataload\n        /* \"#utility.yul\":5671:5675   */\n      0x20\n        /* \"#utility.yul\":5694:5737   */\n      tag_301\n        /* \"#utility.yul\":5734:5736   */\n      dup3\n        /* \"#utility.yul\":5694:5737   */\n      tag_237\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5766:5768   */\n      0x40\n        /* \"#utility.yul\":5760:5769   */\n      mload\n        /* \"#utility.yul\":5778:5809   */\n      tag_302\n        /* \"#utility.yul\":5806:5808   */\n      dup3\n        /* \"#utility.yul\":5798:5804   */\n      dup3\n        /* \"#utility.yul\":5778:5809   */\n      tag_236\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5844:5862   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5932:5933   */\n      0x05\n        /* \"#utility.yul\":5928:5938   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5920:5939   */\n      dup6\n      add\n        /* \"#utility.yul\":5916:5944   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5878:5893   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5956:5975   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5953:5992   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5988:5989   */\n      0x00\n        /* \"#utility.yul\":5985:5986   */\n      dup1\n        /* \"#utility.yul\":5978:5990   */\n      revert\n        /* \"#utility.yul\":5953:5992   */\n    tag_303:\n        /* \"#utility.yul\":6012:6023   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6032:6180   */\n    tag_304:\n        /* \"#utility.yul\":6048:6054   */\n      dup4\n        /* \"#utility.yul\":6043:6046   */\n      dup7\n        /* \"#utility.yul\":6040:6055   */\n      lt\n        /* \"#utility.yul\":6032:6180   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6114:6137   */\n      tag_307\n        /* \"#utility.yul\":6133:6136   */\n      dup7\n        /* \"#utility.yul\":6114:6137   */\n      tag_233\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6102:6138   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6065:6077   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6158:6170   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6032:6180   */\n      jump(tag_304)\n    tag_306:\n        /* \"#utility.yul\":6199:6205   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6243:6261   */\n      dup7\n      add\n        /* \"#utility.yul\":6230:6262   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6274:6290   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6271:6307   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6300:6301   */\n      dup1\n        /* \"#utility.yul\":6293:6305   */\n      revert\n        /* \"#utility.yul\":6271:6307   */\n    tag_308:\n      pop\n        /* \"#utility.yul\":6326:6389   */\n      tag_309\n        /* \"#utility.yul\":6381:6388   */\n      dup6\n        /* \"#utility.yul\":6370:6378   */\n      dup3\n        /* \"#utility.yul\":6359:6368   */\n      dup7\n        /* \"#utility.yul\":6355:6379   */\n      add\n        /* \"#utility.yul\":6326:6389   */\n      tag_238\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6316:6389   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5187:6395   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6400:6835   */\n    tag_240:\n        /* \"#utility.yul\":6453:6456   */\n      0x00\n        /* \"#utility.yul\":6491:6496   */\n      dup2\n        /* \"#utility.yul\":6485:6497   */\n      mload\n        /* \"#utility.yul\":6518:6524   */\n      dup1\n        /* \"#utility.yul\":6513:6516   */\n      dup5\n        /* \"#utility.yul\":6506:6525   */\n      mstore\n        /* \"#utility.yul\":6544:6548   */\n      0x20\n        /* \"#utility.yul\":6573:6575   */\n      dup1\n        /* \"#utility.yul\":6568:6571   */\n      dup6\n        /* \"#utility.yul\":6564:6576   */\n      add\n        /* \"#utility.yul\":6557:6576   */\n      swap5\n      pop\n        /* \"#utility.yul\":6610:6612   */\n      dup1\n        /* \"#utility.yul\":6603:6608   */\n      dup5\n        /* \"#utility.yul\":6599:6613   */\n      add\n        /* \"#utility.yul\":6631:6632   */\n      0x00\n        /* \"#utility.yul\":6641:6810   */\n    tag_311:\n        /* \"#utility.yul\":6655:6661   */\n      dup4\n        /* \"#utility.yul\":6652:6653   */\n      dup2\n        /* \"#utility.yul\":6649:6662   */\n      lt\n        /* \"#utility.yul\":6641:6810   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":6716:6729   */\n      dup2\n      mload\n        /* \"#utility.yul\":6704:6730   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6750:6762   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6785:6800   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6677:6678   */\n      0x01\n        /* \"#utility.yul\":6670:6679   */\n      add\n        /* \"#utility.yul\":6641:6810   */\n      jump(tag_311)\n    tag_313:\n      pop\n        /* \"#utility.yul\":6826:6829   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6400:6835   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7101   */\n    tag_44:\n        /* \"#utility.yul\":7019:7021   */\n      0x20\n        /* \"#utility.yul\":7008:7017   */\n      dup2\n        /* \"#utility.yul\":7001:7022   */\n      mstore\n        /* \"#utility.yul\":6982:6986   */\n      0x00\n        /* \"#utility.yul\":7039:7095   */\n      tag_179\n        /* \"#utility.yul\":7091:7093   */\n      0x20\n        /* \"#utility.yul\":7080:7089   */\n      dup4\n        /* \"#utility.yul\":7076:7094   */\n      add\n        /* \"#utility.yul\":7068:7074   */\n      dup5\n        /* \"#utility.yul\":7039:7095   */\n      tag_240\n      jump\t// in\n        /* \"#utility.yul\":7106:7453   */\n    tag_47:\n        /* \"#utility.yul\":7171:7177   */\n      0x00\n        /* \"#utility.yul\":7179:7185   */\n      dup1\n        /* \"#utility.yul\":7232:7234   */\n      0x40\n        /* \"#utility.yul\":7220:7229   */\n      dup4\n        /* \"#utility.yul\":7211:7218   */\n      dup6\n        /* \"#utility.yul\":7207:7230   */\n      sub\n        /* \"#utility.yul\":7203:7235   */\n      slt\n        /* \"#utility.yul\":7200:7252   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7248:7249   */\n      0x00\n        /* \"#utility.yul\":7245:7246   */\n      dup1\n        /* \"#utility.yul\":7238:7250   */\n      revert\n        /* \"#utility.yul\":7200:7252   */\n    tag_317:\n        /* \"#utility.yul\":7271:7300   */\n      tag_318\n        /* \"#utility.yul\":7290:7299   */\n      dup4\n        /* \"#utility.yul\":7271:7300   */\n      tag_233\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7261:7300   */\n      swap2\n      pop\n        /* \"#utility.yul\":7350:7352   */\n      0x20\n        /* \"#utility.yul\":7339:7348   */\n      dup4\n        /* \"#utility.yul\":7335:7353   */\n      add\n        /* \"#utility.yul\":7322:7354   */\n      calldataload\n        /* \"#utility.yul\":7397:7402   */\n      dup1\n        /* \"#utility.yul\":7390:7403   */\n      iszero\n        /* \"#utility.yul\":7383:7404   */\n      iszero\n        /* \"#utility.yul\":7376:7381   */\n      dup2\n        /* \"#utility.yul\":7373:7405   */\n      eq\n        /* \"#utility.yul\":7363:7423   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":7419:7420   */\n      0x00\n        /* \"#utility.yul\":7416:7417   */\n      dup1\n        /* \"#utility.yul\":7409:7421   */\n      revert\n        /* \"#utility.yul\":7363:7423   */\n    tag_319:\n        /* \"#utility.yul\":7442:7447   */\n      dup1\n        /* \"#utility.yul\":7432:7447   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7106:7453   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7718   */\n    tag_51:\n        /* \"#utility.yul\":7526:7532   */\n      0x00\n        /* \"#utility.yul\":7534:7540   */\n      dup1\n        /* \"#utility.yul\":7587:7589   */\n      0x40\n        /* \"#utility.yul\":7575:7584   */\n      dup4\n        /* \"#utility.yul\":7566:7573   */\n      dup6\n        /* \"#utility.yul\":7562:7585   */\n      sub\n        /* \"#utility.yul\":7558:7590   */\n      slt\n        /* \"#utility.yul\":7555:7607   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7603:7604   */\n      0x00\n        /* \"#utility.yul\":7600:7601   */\n      dup1\n        /* \"#utility.yul\":7593:7605   */\n      revert\n        /* \"#utility.yul\":7555:7607   */\n    tag_321:\n        /* \"#utility.yul\":7626:7655   */\n      tag_322\n        /* \"#utility.yul\":7645:7654   */\n      dup4\n        /* \"#utility.yul\":7626:7655   */\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7616:7655   */\n      swap2\n      pop\n        /* \"#utility.yul\":7674:7712   */\n      tag_323\n        /* \"#utility.yul\":7708:7710   */\n      0x20\n        /* \"#utility.yul\":7697:7706   */\n      dup5\n        /* \"#utility.yul\":7693:7711   */\n      add\n        /* \"#utility.yul\":7674:7712   */\n      tag_233\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7664:7712   */\n      swap1\n      pop\n        /* \"#utility.yul\":7458:7718   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7723:8329   */\n    tag_56:\n        /* \"#utility.yul\":7827:7833   */\n      0x00\n        /* \"#utility.yul\":7835:7841   */\n      dup1\n        /* \"#utility.yul\":7843:7849   */\n      0x00\n        /* \"#utility.yul\":7851:7857   */\n      dup1\n        /* \"#utility.yul\":7859:7865   */\n      0x00\n        /* \"#utility.yul\":7912:7915   */\n      0xa0\n        /* \"#utility.yul\":7900:7909   */\n      dup7\n        /* \"#utility.yul\":7891:7898   */\n      dup9\n        /* \"#utility.yul\":7887:7910   */\n      sub\n        /* \"#utility.yul\":7883:7916   */\n      slt\n        /* \"#utility.yul\":7880:7933   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":7929:7930   */\n      0x00\n        /* \"#utility.yul\":7926:7927   */\n      dup1\n        /* \"#utility.yul\":7919:7931   */\n      revert\n        /* \"#utility.yul\":7880:7933   */\n    tag_325:\n        /* \"#utility.yul\":7952:7981   */\n      tag_326\n        /* \"#utility.yul\":7971:7980   */\n      dup7\n        /* \"#utility.yul\":7952:7981   */\n      tag_233\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7942:7981   */\n      swap5\n      pop\n        /* \"#utility.yul\":8000:8038   */\n      tag_327\n        /* \"#utility.yul\":8034:8036   */\n      0x20\n        /* \"#utility.yul\":8023:8032   */\n      dup8\n        /* \"#utility.yul\":8019:8037   */\n      add\n        /* \"#utility.yul\":8000:8038   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7990:8038   */\n      swap4\n      pop\n        /* \"#utility.yul\":8085:8087   */\n      0x40\n        /* \"#utility.yul\":8074:8083   */\n      dup7\n        /* \"#utility.yul\":8070:8088   */\n      add\n        /* \"#utility.yul\":8057:8089   */\n      calldataload\n        /* \"#utility.yul\":8047:8089   */\n      swap3\n      pop\n        /* \"#utility.yul\":8136:8138   */\n      0x60\n        /* \"#utility.yul\":8125:8134   */\n      dup7\n        /* \"#utility.yul\":8121:8139   */\n      add\n        /* \"#utility.yul\":8108:8140   */\n      calldataload\n        /* \"#utility.yul\":8098:8140   */\n      swap2\n      pop\n        /* \"#utility.yul\":8191:8194   */\n      0x80\n        /* \"#utility.yul\":8180:8189   */\n      dup7\n        /* \"#utility.yul\":8176:8195   */\n      add\n        /* \"#utility.yul\":8163:8196   */\n      calldataload\n        /* \"#utility.yul\":8219:8237   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8211:8217   */\n      dup2\n        /* \"#utility.yul\":8208:8238   */\n      gt\n        /* \"#utility.yul\":8205:8255   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":8251:8252   */\n      0x00\n        /* \"#utility.yul\":8248:8249   */\n      dup1\n        /* \"#utility.yul\":8241:8253   */\n      revert\n        /* \"#utility.yul\":8205:8255   */\n    tag_328:\n        /* \"#utility.yul\":8274:8323   */\n      tag_296\n        /* \"#utility.yul\":8315:8322   */\n      dup9\n        /* \"#utility.yul\":8306:8312   */\n      dup3\n        /* \"#utility.yul\":8295:8304   */\n      dup10\n        /* \"#utility.yul\":8291:8313   */\n      add\n        /* \"#utility.yul\":8274:8323   */\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":8746:9126   */\n    tag_65:\n        /* \"#utility.yul\":8825:8826   */\n      0x01\n        /* \"#utility.yul\":8821:8833   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8868:8880   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8889:8950   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":8943:8947   */\n      0x7f\n        /* \"#utility.yul\":8935:8941   */\n      dup3\n        /* \"#utility.yul\":8931:8948   */\n      and\n        /* \"#utility.yul\":8921:8948   */\n      swap2\n      pop\n        /* \"#utility.yul\":8889:8950   */\n    tag_332:\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8988:8994   */\n      dup3\n        /* \"#utility.yul\":8985:8999   */\n      lt\n        /* \"#utility.yul\":8965:8983   */\n      dup2\n        /* \"#utility.yul\":8962:9000   */\n      sub\n        /* \"#utility.yul\":8959:9120   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9042:9052   */\n      0x4e487b71\n        /* \"#utility.yul\":9037:9040   */\n      0xe0\n        /* \"#utility.yul\":9033:9053   */\n      shl\n        /* \"#utility.yul\":9030:9031   */\n      0x00\n        /* \"#utility.yul\":9023:9054   */\n      mstore\n        /* \"#utility.yul\":9077:9081   */\n      0x22\n        /* \"#utility.yul\":9074:9075   */\n      0x04\n        /* \"#utility.yul\":9067:9082   */\n      mstore\n        /* \"#utility.yul\":9105:9109   */\n      0x24\n        /* \"#utility.yul\":9102:9103   */\n      0x00\n        /* \"#utility.yul\":9095:9110   */\n      revert\n        /* \"#utility.yul\":8959:9120   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":8746:9126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9540:9941   */\n    tag_79:\n        /* \"#utility.yul\":9742:9744   */\n      0x20\n        /* \"#utility.yul\":9724:9745   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9781:9783   */\n      0x25\n        /* \"#utility.yul\":9761:9779   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9754:9784   */\n      mstore\n        /* \"#utility.yul\":9820:9854   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":9815:9817   */\n      0x40\n        /* \"#utility.yul\":9800:9818   */\n      dup3\n      add\n        /* \"#utility.yul\":9793:9855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9886:9888   */\n      0x60\n        /* \"#utility.yul\":9871:9889   */\n      dup3\n      add\n        /* \"#utility.yul\":9864:9899   */\n      mstore\n        /* \"#utility.yul\":9931:9934   */\n      0x80\n        /* \"#utility.yul\":9916:9935   */\n      add\n      swap1\n        /* \"#utility.yul\":9540:9941   */\n      jump\t// out\n        /* \"#utility.yul\":10365:10492   */\n    tag_96:\n        /* \"#utility.yul\":10426:10436   */\n      0x4e487b71\n        /* \"#utility.yul\":10421:10424   */\n      0xe0\n        /* \"#utility.yul\":10417:10437   */\n      shl\n        /* \"#utility.yul\":10414:10415   */\n      0x00\n        /* \"#utility.yul\":10407:10438   */\n      mstore\n        /* \"#utility.yul\":10457:10461   */\n      0x32\n        /* \"#utility.yul\":10454:10455   */\n      0x04\n        /* \"#utility.yul\":10447:10462   */\n      mstore\n        /* \"#utility.yul\":10481:10485   */\n      0x24\n        /* \"#utility.yul\":10478:10479   */\n      0x00\n        /* \"#utility.yul\":10471:10486   */\n      revert\n        /* \"#utility.yul\":10497:10624   */\n    tag_241:\n        /* \"#utility.yul\":10558:10568   */\n      0x4e487b71\n        /* \"#utility.yul\":10553:10556   */\n      0xe0\n        /* \"#utility.yul\":10549:10569   */\n      shl\n        /* \"#utility.yul\":10546:10547   */\n      0x00\n        /* \"#utility.yul\":10539:10570   */\n      mstore\n        /* \"#utility.yul\":10589:10593   */\n      0x11\n        /* \"#utility.yul\":10586:10587   */\n      0x04\n        /* \"#utility.yul\":10579:10594   */\n      mstore\n        /* \"#utility.yul\":10613:10617   */\n      0x24\n        /* \"#utility.yul\":10610:10611   */\n      0x00\n        /* \"#utility.yul\":10603:10618   */\n      revert\n        /* \"#utility.yul\":10629:10764   */\n    tag_104:\n        /* \"#utility.yul\":10668:10671   */\n      0x00\n        /* \"#utility.yul\":10689:10706   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10686:10729   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10709:10727   */\n      tag_341\n      tag_241\n      jump\t// in\n    tag_341:\n      pop\n        /* \"#utility.yul\":10756:10757   */\n      0x01\n        /* \"#utility.yul\":10745:10758   */\n      add\n      swap1\n        /* \"#utility.yul\":10629:10764   */\n      jump\t// out\n        /* \"#utility.yul\":10769:11234   */\n    tag_106:\n        /* \"#utility.yul\":11026:11028   */\n      0x40\n        /* \"#utility.yul\":11015:11024   */\n      dup2\n        /* \"#utility.yul\":11008:11029   */\n      mstore\n        /* \"#utility.yul\":10989:10993   */\n      0x00\n        /* \"#utility.yul\":11052:11108   */\n      tag_343\n        /* \"#utility.yul\":11104:11106   */\n      0x40\n        /* \"#utility.yul\":11093:11102   */\n      dup4\n        /* \"#utility.yul\":11089:11107   */\n      add\n        /* \"#utility.yul\":11081:11087   */\n      dup6\n        /* \"#utility.yul\":11052:11108   */\n      tag_240\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11156:11165   */\n      dup3\n        /* \"#utility.yul\":11148:11154   */\n      dup2\n        /* \"#utility.yul\":11144:11166   */\n      sub\n        /* \"#utility.yul\":11139:11141   */\n      0x20\n        /* \"#utility.yul\":11128:11137   */\n      dup5\n        /* \"#utility.yul\":11124:11142   */\n      add\n        /* \"#utility.yul\":11117:11167   */\n      mstore\n        /* \"#utility.yul\":11184:11228   */\n      tag_344\n        /* \"#utility.yul\":11221:11227   */\n      dup2\n        /* \"#utility.yul\":11213:11219   */\n      dup6\n        /* \"#utility.yul\":11184:11228   */\n      tag_240\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11176:11228   */\n      swap6\n        /* \"#utility.yul\":10769:11234   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13124:13252   */\n    tag_175:\n        /* \"#utility.yul\":13191:13200   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13212:13223   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13209:13246   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":13226:13244   */\n      tag_58\n      tag_241\n      jump\t// in\n        /* \"#utility.yul\":13257:13382   */\n    tag_178:\n        /* \"#utility.yul\":13322:13331   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13343:13353   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13340:13376   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":13356:13374   */\n      tag_58\n      tag_241\n      jump\t// in\n        /* \"#utility.yul\":13743:14570   */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14140:14155   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":14122:14156   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14192:14207   */\n      dup6\n      and\n        /* \"#utility.yul\":14187:14189   */\n      0x20\n        /* \"#utility.yul\":14172:14190   */\n      dup3\n      add\n        /* \"#utility.yul\":14165:14208   */\n      mstore\n        /* \"#utility.yul\":14102:14105   */\n      0xa0\n        /* \"#utility.yul\":14239:14241   */\n      0x40\n        /* \"#utility.yul\":14224:14242   */\n      dup3\n      add\n        /* \"#utility.yul\":14217:14248   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14065:14069   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14271:14328   */\n      tag_358\n      swap1\n        /* \"#utility.yul\":14308:14327   */\n      dup4\n      add\n        /* \"#utility.yul\":14300:14306   */\n      dup7\n        /* \"#utility.yul\":14271:14328   */\n      tag_240\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14376:14385   */\n      dup3\n        /* \"#utility.yul\":14368:14374   */\n      dup2\n        /* \"#utility.yul\":14364:14386   */\n      sub\n        /* \"#utility.yul\":14359:14361   */\n      0x60\n        /* \"#utility.yul\":14348:14357   */\n      dup5\n        /* \"#utility.yul\":14344:14362   */\n      add\n        /* \"#utility.yul\":14337:14387   */\n      mstore\n        /* \"#utility.yul\":14410:14454   */\n      tag_359\n        /* \"#utility.yul\":14447:14453   */\n      dup2\n        /* \"#utility.yul\":14439:14445   */\n      dup7\n        /* \"#utility.yul\":14410:14454   */\n      tag_240\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14396:14454   */\n      swap1\n      pop\n        /* \"#utility.yul\":14503:14512   */\n      dup3\n        /* \"#utility.yul\":14495:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14513   */\n      sub\n        /* \"#utility.yul\":14485:14488   */\n      0x80\n        /* \"#utility.yul\":14474:14483   */\n      dup5\n        /* \"#utility.yul\":14470:14489   */\n      add\n        /* \"#utility.yul\":14463:14514   */\n      mstore\n        /* \"#utility.yul\":14531:14564   */\n      tag_360\n        /* \"#utility.yul\":14557:14563   */\n      dup2\n        /* \"#utility.yul\":14549:14555   */\n      dup6\n        /* \"#utility.yul\":14531:14564   */\n      tag_235\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14523:14564   */\n      swap9\n        /* \"#utility.yul\":13743:14570   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14575:14824   */\n    tag_190:\n        /* \"#utility.yul\":14644:14650   */\n      0x00\n        /* \"#utility.yul\":14697:14699   */\n      0x20\n        /* \"#utility.yul\":14685:14694   */\n      dup3\n        /* \"#utility.yul\":14676:14683   */\n      dup5\n        /* \"#utility.yul\":14672:14695   */\n      sub\n        /* \"#utility.yul\":14668:14700   */\n      slt\n        /* \"#utility.yul\":14665:14717   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":14713:14714   */\n      0x00\n        /* \"#utility.yul\":14710:14711   */\n      dup1\n        /* \"#utility.yul\":14703:14715   */\n      revert\n        /* \"#utility.yul\":14665:14717   */\n    tag_362:\n        /* \"#utility.yul\":14745:14754   */\n      dup2\n        /* \"#utility.yul\":14739:14755   */\n      mload\n        /* \"#utility.yul\":14764:14794   */\n      tag_179\n        /* \"#utility.yul\":14788:14793   */\n      dup2\n        /* \"#utility.yul\":14764:14794   */\n      tag_234\n      jump\t// in\n        /* \"#utility.yul\":14829:15008   */\n    tag_196:\n        /* \"#utility.yul\":14864:14867   */\n      0x00\n        /* \"#utility.yul\":14906:14907   */\n      0x03\n        /* \"#utility.yul\":14888:14904   */\n      returndatasize\n        /* \"#utility.yul\":14885:14908   */\n      gt\n        /* \"#utility.yul\":14882:15002   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":14952:14953   */\n      0x04\n        /* \"#utility.yul\":14949:14950   */\n      0x00\n        /* \"#utility.yul\":14946:14947   */\n      dup1\n        /* \"#utility.yul\":14931:14954   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14989:14990   */\n      0x00\n        /* \"#utility.yul\":14983:14991   */\n      mload\n        /* \"#utility.yul\":14978:14981   */\n      0xe0\n        /* \"#utility.yul\":14974:14992   */\n      shr\n        /* \"#utility.yul\":14882:15002   */\n    tag_365:\n        /* \"#utility.yul\":14829:15008   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15013:15684   */\n    tag_198:\n        /* \"#utility.yul\":15052:15055   */\n      0x00\n        /* \"#utility.yul\":15094:15098   */\n      0x44\n        /* \"#utility.yul\":15076:15092   */\n      returndatasize\n        /* \"#utility.yul\":15073:15099   */\n      lt\n        /* \"#utility.yul\":15070:15109   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":15013:15684   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15070:15109   */\n    tag_367:\n        /* \"#utility.yul\":15136:15138   */\n      0x40\n        /* \"#utility.yul\":15130:15139   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15201:15217   */\n      returndatasize\n        /* \"#utility.yul\":15197:15222   */\n      dup2\n      add\n        /* \"#utility.yul\":15194:15195   */\n      0x04\n        /* \"#utility.yul\":15130:15139   */\n      dup4\n        /* \"#utility.yul\":15173:15223   */\n      returndatacopy\n        /* \"#utility.yul\":15252:15256   */\n      dup2\n        /* \"#utility.yul\":15246:15257   */\n      mload\n        /* \"#utility.yul\":15276:15292   */\n      returndatasize\n        /* \"#utility.yul\":15311:15329   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15382:15384   */\n      dup2\n        /* \"#utility.yul\":15375:15379   */\n      0x24\n        /* \"#utility.yul\":15367:15373   */\n      dup5\n        /* \"#utility.yul\":15363:15380   */\n      add\n        /* \"#utility.yul\":15360:15385   */\n      gt\n        /* \"#utility.yul\":15355:15357   */\n      dup2\n        /* \"#utility.yul\":15347:15353   */\n      dup5\n        /* \"#utility.yul\":15344:15358   */\n      gt\n        /* \"#utility.yul\":15341:15386   */\n      or\n        /* \"#utility.yul\":15338:15396   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":15389:15394   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15013:15684   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15338:15396   */\n    tag_368:\n        /* \"#utility.yul\":15426:15432   */\n      dup3\n        /* \"#utility.yul\":15420:15424   */\n      dup6\n        /* \"#utility.yul\":15416:15433   */\n      add\n        /* \"#utility.yul\":15405:15433   */\n      swap2\n      pop\n        /* \"#utility.yul\":15462:15465   */\n      dup2\n        /* \"#utility.yul\":15456:15466   */\n      mload\n        /* \"#utility.yul\":15489:15491   */\n      dup2\n        /* \"#utility.yul\":15481:15487   */\n      dup2\n        /* \"#utility.yul\":15478:15492   */\n      gt\n        /* \"#utility.yul\":15475:15502   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":15495:15500   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15013:15684   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15475:15502   */\n    tag_369:\n        /* \"#utility.yul\":15579:15581   */\n      dup5\n        /* \"#utility.yul\":15560:15576   */\n      returndatasize\n        /* \"#utility.yul\":15554:15558   */\n      dup8\n        /* \"#utility.yul\":15550:15577   */\n      add\n        /* \"#utility.yul\":15546:15582   */\n      add\n        /* \"#utility.yul\":15539:15543   */\n      0x20\n        /* \"#utility.yul\":15530:15536   */\n      dup3\n        /* \"#utility.yul\":15525:15528   */\n      dup6\n        /* \"#utility.yul\":15521:15537   */\n      add\n        /* \"#utility.yul\":15517:15544   */\n      add\n        /* \"#utility.yul\":15514:15583   */\n      gt\n        /* \"#utility.yul\":15511:15593   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":15586:15591   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15013:15684   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15511:15593   */\n    tag_370:\n        /* \"#utility.yul\":15602:15659   */\n      tag_371\n        /* \"#utility.yul\":15653:15657   */\n      0x20\n        /* \"#utility.yul\":15644:15650   */\n      dup3\n        /* \"#utility.yul\":15636:15642   */\n      dup7\n        /* \"#utility.yul\":15632:15651   */\n      add\n        /* \"#utility.yul\":15628:15658   */\n      add\n        /* \"#utility.yul\":15622:15626   */\n      dup8\n        /* \"#utility.yul\":15602:15659   */\n      tag_236\n      jump\t// in\n    tag_371:\n      pop\n        /* \"#utility.yul\":15675:15678   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15013:15684   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16110:16514   */\n    tag_206:\n        /* \"#utility.yul\":16312:16314   */\n      0x20\n        /* \"#utility.yul\":16294:16315   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16351:16353   */\n      0x28\n        /* \"#utility.yul\":16331:16349   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16324:16354   */\n      mstore\n        /* \"#utility.yul\":16390:16424   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":16385:16387   */\n      0x40\n        /* \"#utility.yul\":16370:16388   */\n      dup3\n      add\n        /* \"#utility.yul\":16363:16425   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":16456:16458   */\n      0x60\n        /* \"#utility.yul\":16441:16459   */\n      dup3\n      add\n        /* \"#utility.yul\":16434:16472   */\n      mstore\n        /* \"#utility.yul\":16504:16507   */\n      0x80\n        /* \"#utility.yul\":16489:16508   */\n      add\n      swap1\n        /* \"#utility.yul\":16110:16514   */\n      jump\t// out\n        /* \"#utility.yul\":16519:17080   */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16816:16831   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16798:16832   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16868:16883   */\n      dup6\n      and\n        /* \"#utility.yul\":16863:16865   */\n      0x20\n        /* \"#utility.yul\":16848:16866   */\n      dup3\n      add\n        /* \"#utility.yul\":16841:16884   */\n      mstore\n        /* \"#utility.yul\":16915:16917   */\n      0x40\n        /* \"#utility.yul\":16900:16918   */\n      dup2\n      add\n        /* \"#utility.yul\":16893:16927   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16958:16960   */\n      0x60\n        /* \"#utility.yul\":16943:16961   */\n      dup2\n      add\n        /* \"#utility.yul\":16936:16970   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16778:16781   */\n      0xa0\n        /* \"#utility.yul\":17001:17004   */\n      0x80\n        /* \"#utility.yul\":16986:17005   */\n      dup3\n      add\n        /* \"#utility.yul\":16979:17011   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16741:16745   */\n      0x00\n      swap1\n        /* \"#utility.yul\":17028:17074   */\n      tag_375\n      swap1\n        /* \"#utility.yul\":17054:17073   */\n      dup4\n      add\n        /* \"#utility.yul\":17046:17052   */\n      dup5\n        /* \"#utility.yul\":17028:17074   */\n      tag_235\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":17020:17074   */\n      swap8\n        /* \"#utility.yul\":16519:17080   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n\n    auxdata: 0xa26469706673582212201cbe8cf9566417eebb73cad7689f74c7c1e3edc3cb2252cf504f246acf90858264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2104": {
									"entryPoint": null,
									"id": 2104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_registerInterface_87": {
									"entryPoint": 116,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 248,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3089:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:30:1",
																		"type": "",
																		"value": "ERC165: invalid interface id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "334:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "357:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "334:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "420:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "427:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "432:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "460:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "453:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "484:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "477:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "371:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "558:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "568:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "582:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "585:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "568:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "599:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "629:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "635:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "603:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "676:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "678:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "692:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "700:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "688:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "678:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "656:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:26:1"
															},
															"nodeType": "YulIf",
															"src": "646:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "787:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "794:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "799:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "790:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "790:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "831:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "834:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "859:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "862:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "852:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "852:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "852:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "722:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "742:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "719:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:38:1"
															},
															"nodeType": "YulIf",
															"src": "716:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "538:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "547:6:1",
														"type": ""
													}
												],
												"src": "503:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "961:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "964:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "954:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "977:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "995:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "985:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "977:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "927:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "935:4:1",
														"type": ""
													}
												],
												"src": "888:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1095:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1128:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1142:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1152:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1146:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1173:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1177:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1166:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1166:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1166:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1196:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1218:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1222:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1208:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1208:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1200:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1240:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1263:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1273:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1280:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1292:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1276:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1276:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1269:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1269:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1259:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1259:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1244:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1334:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1336:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1351:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1336:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1316:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1313:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1313:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "1310:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1370:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1384:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1394:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1401:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1406:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1397:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1397:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1390:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1390:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1380:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1380:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1374:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1424:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1437:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1428:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1522:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1531:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1538:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1524:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1524:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1524:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1472:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1479:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1469:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1469:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1483:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1485:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1498:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1505:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1494:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1485:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1465:3:1",
																			"statements": []
																		},
																		"src": "1461:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1111:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1116:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1108:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:11:1"
															},
															"nodeType": "YulIf",
															"src": "1105:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1067:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1074:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1079:10:1",
														"type": ""
													}
												],
												"src": "1014:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1649:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1659:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1674:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1692:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1695:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1688:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1688:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1705:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1701:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1701:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1684:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1684:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1670:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1716:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1719:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1667:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1659:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1626:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1632:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1640:4:1",
														"type": ""
													}
												],
												"src": "1564:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1831:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1841:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1861:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1855:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1855:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1845:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1908:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1910:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1910:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1880:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1896:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1900:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1892:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1892:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1904:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1888:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1877:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:30:1"
															},
															"nodeType": "YulIf",
															"src": "1874:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1983:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2021:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2015:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2015:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1989:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1989:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2029:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1939:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1939:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2045:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2062:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2049:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2072:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2091:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2076:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2104:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2117:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2104:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2174:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2188:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2207:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2219:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2215:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2215:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2203:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2203:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2192:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2236:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2280:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2250:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2250:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2240:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2298:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2302:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2385:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2410:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2428:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2433:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2424:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2424:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2418:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2418:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2403:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2403:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2403:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2462:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2476:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2484:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2472:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2472:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2462:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2503:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2520:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2531:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2516:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2516:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2503:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2332:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2335:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2329:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2329:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2344:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2346:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2355:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2358:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2351:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2351:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2346:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2325:3:1",
																					"statements": []
																				},
																				"src": "2321:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2605:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2623:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2650:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2655:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2646:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2646:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2640:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2640:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2627:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2690:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2702:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2729:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2732:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2725:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2725:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2741:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2721:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2721:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2751:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2747:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2747:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2717:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2717:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2713:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2713:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2698:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2698:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2683:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2683:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2683:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2576:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2585:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2573:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2573:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2570:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2791:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2805:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2808:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2801:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2801:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2817:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2797:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2797:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2784:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2784:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2784:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2167:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2172:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2847:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2861:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2874:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2865:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2910:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2928:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2947:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2952:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2943:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2943:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2937:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2937:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2928:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2891:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2888:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2997:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3056:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3063:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3003:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3003:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2990:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2990:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2990:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2839:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2155:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2144:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "2137:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1816:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1822:3:1",
														"type": ""
													}
												],
												"src": "1735:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060600160405280602781526020016200181b602791396200003e6301ffc9a760e01b62000074565b6200004981620000f8565b6200005b636cdb3d1360e11b62000074565b6200006d6303a24d0760e21b62000074565b506200027b565b6001600160e01b03198082169003620000d35760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6003620001068282620001af565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013557607f821691505b6020821081036200015657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001aa57600081815260208120601f850160051c81016020861015620001855750805b601f850160051c820191505b81811015620001a65782815560010162000191565b5050505b505050565b81516001600160401b03811115620001cb57620001cb6200010a565b620001e381620001dc845462000120565b846200015c565b602080601f8311600181146200021b5760008415620002025750858301515b600019600386901b1c1916600185901b178555620001a6565b600085815260208120601f198616915b828110156200024c578886015182559484019460019091019084016200022b565b50858210156200026b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611590806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d61461012f5780634e1273f414610142578063a22cb46514610162578063e985e9c514610175578063f242432a146101b157600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100fa578063156e29f61461011a575b600080fd5b6100aa6100a5366004610d82565b6101c4565b6040519081526020015b60405180910390f35b6100ea6100cb366004610dc5565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020016100b4565b61010d610108366004610de2565b610260565b6040516100b49190610e41565b61012d610128366004610e54565b6102f4565b005b61012d61013d366004610fd3565b610308565b61015561015036600461107d565b61059c565b6040516100b49190611183565b61012d610170366004611196565b6106c6565b6100ea6101833660046111d2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61012d6101bf366004611205565b61079c565b60006001600160a01b0383166102355760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60606003805461026f9061126a565b80601f016020809104026020016040519081016040528092919081815260200182805461029b9061126a565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b50505050509050919050565b60606103028484848461094f565b50505050565b815183511461036a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161022c565b6001600160a01b0384166103905760405162461bcd60e51b815260040161022c906112a4565b6001600160a01b0385163314806103ac57506103ac8533610183565b6104135760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161022c565b3360005b845181101561052e576000858281518110610434576104346112e9565b602002602001015190506000858381518110610452576104526112e9565b602002602001015190506104bf816040518060600160405280602a8152602001611531602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610a5f9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546104f69082610a96565b60009283526001602090815260408085206001600160a01b038c168652909152909220919091555061052781611315565b9050610417565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161057e92919061132e565b60405180910390a4610594818787878787610afc565b505050505050565b606081518351146106015760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161022c565b6000835167ffffffffffffffff81111561061d5761061d610e87565b604051908082528060200260200182016040528015610646578160200160208202803683370190505b50905060005b84518110156106be5761069185828151811061066a5761066a6112e9565b6020026020010151858381518110610684576106846112e9565b60200260200101516101c4565b8282815181106106a3576106a36112e9565b60209081029190910101526106b781611315565b905061064c565b509392505050565b6001600160a01b03821633036107305760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161022c565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0384166107c25760405162461bcd60e51b815260040161022c906112a4565b6001600160a01b0385163314806107de57506107de8533610183565b61083c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161022c565b3361085c81878761084c88610c60565b61085588610c60565b5050505050565b6108a3836040518060600160405280602a8152602001611531602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610a5f565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546108da9084610a96565b60008581526001602090815260408083206001600160a01b038a811680865291845293829020949094558051888152918201879052898316928516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610594818787878787610cab565b6001600160a01b0384166109af5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161022c565b336109c08160008761084c88610c60565b60008481526001602090815260408083206001600160a01b03891684529091529020546109ed9084610a96565b60008581526001602090815260408083206001600160a01b038a8116808652918452828520959095558151898152928301889052938516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461085581600087878787610cab565b60008184841115610a835760405162461bcd60e51b815260040161022c9190610e41565b50610a8e838561135c565b949350505050565b600080610aa3838561136f565b905083811015610af55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161022c565b9392505050565b6001600160a01b0384163b156105945760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b409089908990889088908890600401611382565b6020604051808303816000875af1925050508015610b7b575060408051601f3d908101601f19168201909252610b78918101906113e0565b60015b610c2757610b876113fd565b806308c379a003610bc05750610b9b611419565b80610ba65750610bc2565b8060405162461bcd60e51b815260040161022c9190610e41565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161022c565b6001600160e01b0319811663bc197c8160e01b14610c575760405162461bcd60e51b815260040161022c906114a3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c9a57610c9a6112e9565b602090810291909101015292915050565b6001600160a01b0384163b156105945760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cef90899089908890889088906004016114eb565b6020604051808303816000875af1925050508015610d2a575060408051601f3d908101601f19168201909252610d27918101906113e0565b60015b610d3657610b876113fd565b6001600160e01b0319811663f23a6e6160e01b14610c575760405162461bcd60e51b815260040161022c906114a3565b80356001600160a01b0381168114610d7d57600080fd5b919050565b60008060408385031215610d9557600080fd5b610d9e83610d66565b946020939093013593505050565b6001600160e01b031981168114610dc257600080fd5b50565b600060208284031215610dd757600080fd5b8135610af581610dac565b600060208284031215610df457600080fd5b5035919050565b6000815180845260005b81811015610e2157602081850181015186830182015201610e05565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610af56020830184610dfb565b600080600060608486031215610e6957600080fd5b610e7284610d66565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ec357610ec3610e87565b6040525050565b600067ffffffffffffffff821115610ee457610ee4610e87565b5060051b60200190565b600082601f830112610eff57600080fd5b81356020610f0c82610eca565b604051610f198282610e9d565b83815260059390931b8501820192828101915086841115610f3957600080fd5b8286015b84811015610f545780358352918301918301610f3d565b509695505050505050565b600082601f830112610f7057600080fd5b813567ffffffffffffffff811115610f8a57610f8a610e87565b604051610fa1601f8301601f191660200182610e9d565b818152846020838601011115610fb657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610feb57600080fd5b610ff486610d66565b945061100260208701610d66565b9350604086013567ffffffffffffffff8082111561101f57600080fd5b61102b89838a01610eee565b9450606088013591508082111561104157600080fd5b61104d89838a01610eee565b9350608088013591508082111561106357600080fd5b5061107088828901610f5f565b9150509295509295909350565b6000806040838503121561109057600080fd5b823567ffffffffffffffff808211156110a857600080fd5b818501915085601f8301126110bc57600080fd5b813560206110c982610eca565b6040516110d68282610e9d565b83815260059390931b85018201928281019150898411156110f657600080fd5b948201945b8386101561111b5761110c86610d66565b825294820194908201906110fb565b9650508601359250508082111561113157600080fd5b5061113e85828601610eee565b9150509250929050565b600081518084526020808501945080840160005b838110156111785781518752958201959082019060010161115c565b509495945050505050565b602081526000610af56020830184611148565b600080604083850312156111a957600080fd5b6111b283610d66565b9150602083013580151581146111c757600080fd5b809150509250929050565b600080604083850312156111e557600080fd5b6111ee83610d66565b91506111fc60208401610d66565b90509250929050565b600080600080600060a0868803121561121d57600080fd5b61122686610d66565b945061123460208701610d66565b93506040860135925060608601359150608086013567ffffffffffffffff81111561125e57600080fd5b61107088828901610f5f565b600181811c9082168061127e57607f821691505b60208210810361129e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611327576113276112ff565b5060010190565b6040815260006113416040830185611148565b82810360208401526113538185611148565b95945050505050565b8181038181111561025a5761025a6112ff565b8082018082111561025a5761025a6112ff565b6001600160a01b0386811682528516602082015260a0604082018190526000906113ae90830186611148565b82810360608401526113c08186611148565b905082810360808401526113d48185610dfb565b98975050505050505050565b6000602082840312156113f257600080fd5b8151610af581610dac565b600060033d11156114165760046000803e5060005160e01c5b90565b600060443d10156114275790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561145757505050505090565b828501915081518181111561146f5750505050505090565b843d87010160208285010111156114895750505050505090565b61149860208286010187610e9d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061152590830184610dfb565b97965050505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a26469706673582212201cbe8cf9566417eebb73cad7689f74c7c1e3edc3cb2252cf504f246acf90858264736f6c6343000813003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x181B PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x3E PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x74 JUMP JUMPDEST PUSH3 0x49 DUP2 PUSH3 0xF8 JUMP JUMPDEST PUSH3 0x5B PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x74 JUMP JUMPDEST PUSH3 0x6D PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x74 JUMP JUMPDEST POP PUSH3 0x27B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP1 SUB PUSH3 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH3 0x106 DUP3 DUP3 PUSH3 0x1AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x135 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x156 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1AA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x185 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1A6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x191 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1CB JUMPI PUSH3 0x1CB PUSH3 0x10A JUMP JUMPDEST PUSH3 0x1E3 DUP2 PUSH3 0x1DC DUP5 SLOAD PUSH3 0x120 JUMP JUMPDEST DUP5 PUSH3 0x15C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x21B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x202 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1A6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x24C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x22B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x26B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1590 DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x126A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29B SWAP1 PUSH2 0x126A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x302 DUP5 DUP5 DUP5 DUP5 PUSH2 0x94F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3AC JUMPI POP PUSH2 0x3AC DUP6 CALLER PUSH2 0x183 JUMP JUMPDEST PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x452 JUMPI PUSH2 0x452 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x4BF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1531 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA5F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4F6 SWAP1 DUP3 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x527 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP PUSH2 0x417 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x594 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xAFC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61D PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x646 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6BE JUMPI PUSH2 0x691 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6B7 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP PUSH2 0x64C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7DE JUMPI POP PUSH2 0x7DE DUP6 CALLER PUSH2 0x183 JUMP JUMPDEST PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x84C DUP9 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x855 DUP9 PUSH2 0xC60 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A3 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1531 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8DA SWAP1 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x594 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH2 0x9C0 DUP2 PUSH1 0x0 DUP8 PUSH2 0x84C DUP9 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x9ED SWAP1 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP4 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x855 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH2 0xA8E DUP4 DUP6 PUSH2 0x135C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA3 DUP4 DUP6 PUSH2 0x136F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xB40 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB7B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB78 SWAP2 DUP2 ADD SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC27 JUMPI PUSH2 0xB87 PUSH2 0x13FD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xBC0 JUMPI POP PUSH2 0xB9B PUSH2 0x1419 JUMP JUMPDEST DUP1 PUSH2 0xBA6 JUMPI POP PUSH2 0xBC2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x14A3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC9A JUMPI PUSH2 0xC9A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xCEF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD2A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD27 SWAP2 DUP2 ADD SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD36 JUMPI PUSH2 0xB87 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9E DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF5 DUP2 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE72 DUP5 PUSH2 0xD66 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC3 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE4 JUMPI PUSH2 0xEE4 PUSH2 0xE87 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF0C DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF19 DUP3 DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF54 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF4 DUP7 PUSH2 0xD66 JUMP JUMPDEST SWAP5 POP PUSH2 0x1002 PUSH1 0x20 DUP8 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102B DUP10 DUP4 DUP11 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104D DUP10 DUP4 DUP11 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1070 DUP9 DUP3 DUP10 ADD PUSH2 0xF5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x10C9 DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D6 DUP3 DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x111B JUMPI PUSH2 0x110C DUP7 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x10FB JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113E DUP6 DUP3 DUP7 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1178 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x115C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EE DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FC PUSH1 0x20 DUP5 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1226 DUP7 PUSH2 0xD66 JUMP JUMPDEST SWAP5 POP PUSH2 0x1234 PUSH1 0x20 DUP8 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1070 DUP9 DUP3 DUP10 ADD PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x127E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x129E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1327 JUMPI PUSH2 0x1327 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1341 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1148 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1353 DUP2 DUP6 PUSH2 0x1148 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x25A PUSH2 0x12FF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x25A PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13AE SWAP1 DUP4 ADD DUP7 PUSH2 0x1148 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x13C0 DUP2 DUP7 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x13D4 DUP2 DUP6 PUSH2 0xDFB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAF5 DUP2 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1427 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1457 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x146F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1489 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1498 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xE9D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1525 SWAP1 DUP4 ADD DUP5 PUSH2 0xDFB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xBE DUP13 0xF9 JUMP PUSH5 0x17EEBB73CA 0xD7 PUSH9 0x9F74C7C1E3EDC3CB22 MSTORE 0xCF POP 0x4F 0x24 PUSH11 0xCF90858264736F6C634300 ADDMOD SGT STOP CALLER PUSH9 0x747470733A2F2F6761 PUSH14 0x652E6578616D706C652F6170692F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
							"sourceMap": "43127:274:0:-:0;;;43167:82;;;;;;;;;;12650:362;;;;;;;;;;;;;;;;;2483:40;-1:-1:-1;;;2483:18:0;:40::i;:::-;12701:13;12709:4;12701:7;:13::i;:::-;12806:41;-1:-1:-1;;;12806:18:0;:41::i;:::-;12950:54;-1:-1:-1;;;12950:18:0;:54::i;:::-;12650:362;43127:274;;3245:201;-1:-1:-1;;;;;;3329:25:0;;;;;3321:66;;;;-1:-1:-1;;;3321:66:0;;216:2:1;3321:66:0;;;198:21:1;255:2;235:18;;;228:30;294;274:18;;;267:58;342:18;;3321:66:0;;;;;;;;-1:-1:-1;;;;;;3398:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;3398:40:0;3434:4;3398:40;;;3245:201::o;18388:88::-;18455:4;:13;18462:6;18455:4;:13;:::i;:::-;;18388:88;:::o;371:127:1:-;432:10;427:3;423:20;420:1;413:31;463:4;460:1;453:15;487:4;484:1;477:15;503:380;582:1;578:12;;;;625;;;646:61;;700:4;692:6;688:17;678:27;;646:61;753:2;745:6;742:14;722:18;719:38;716:161;;799:10;794:3;790:20;787:1;780:31;834:4;831:1;824:15;862:4;859:1;852:15;716:161;;503:380;;;:::o;1014:545::-;1116:2;1111:3;1108:11;1105:448;;;1152:1;1177:5;1173:2;1166:17;1222:4;1218:2;1208:19;1292:2;1280:10;1276:19;1273:1;1269:27;1263:4;1259:38;1328:4;1316:10;1313:20;1310:47;;;-1:-1:-1;1351:4:1;1310:47;1406:2;1401:3;1397:12;1394:1;1390:20;1384:4;1380:31;1370:41;;1461:82;1479:2;1472:5;1469:13;1461:82;;;1524:17;;;1505:1;1494:13;1461:82;;;1465:3;;;1105:448;1014:545;;;:::o;1735:1352::-;1855:10;;-1:-1:-1;;;;;1877:30:1;;1874:56;;;1910:18;;:::i;:::-;1939:97;2029:6;1989:38;2021:4;2015:11;1989:38;:::i;:::-;1983:4;1939:97;:::i;:::-;2091:4;;2155:2;2144:14;;2172:1;2167:663;;;;2874:1;2891:6;2888:89;;;-1:-1:-1;2943:19:1;;;2937:26;2888:89;-1:-1:-1;;1692:1:1;1688:11;;;1684:24;1680:29;1670:40;1716:1;1712:11;;;1667:57;2990:81;;2137:944;;2167:663;961:1;954:14;;;998:4;985:18;;-1:-1:-1;;2203:20:1;;;2321:236;2335:7;2332:1;2329:14;2321:236;;;2424:19;;;2418:26;2403:42;;2516:27;;;;2484:1;2472:14;;;;2351:19;;2321:236;;;2325:3;2585:6;2576:7;2573:19;2570:201;;;2646:19;;;2640:26;-1:-1:-1;;2729:1:1;2725:14;;;2741:3;2721:24;2717:37;2713:42;2698:58;2683:74;;2570:201;-1:-1:-1;;;;;2817:1:1;2801:14;;;2797:22;2784:36;;-1:-1:-1;1735:1352:1:o;:::-;43127:274:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1409": {
									"entryPoint": 3168,
									"id": 1409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1249": {
									"entryPoint": null,
									"id": 1249,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1381": {
									"entryPoint": 2812,
									"id": 1381,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1314": {
									"entryPoint": 3243,
									"id": 1314,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_958": {
									"entryPoint": 2383,
									"id": 958,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_1628": {
									"entryPoint": 2710,
									"id": 1628,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfBatch_569": {
									"entryPoint": 1436,
									"id": 569,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_505": {
									"entryPoint": 452,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2124": {
									"entryPoint": 756,
									"id": 2124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_865": {
									"entryPoint": 776,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_727": {
									"entryPoint": 1948,
									"id": 727,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_603": {
									"entryPoint": 1734,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1752": {
									"entryPoint": 2655,
									"id": 1752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_477": {
									"entryPoint": 608,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17082:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:218:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:1"
															},
															"nodeType": "YulIf",
															"src": "2163:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2224:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2234:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2272:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2310:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2295:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2282:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2361:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2333:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2103:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2114:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2126:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2134:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2142:6:1",
														"type": ""
													}
												],
												"src": "2049:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2408:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2432:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2437:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2458:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2482:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2376:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2565:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2603:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2609:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2599:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2618:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2614:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2614:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2569:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2698:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2700:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2700:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2700:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2641:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2653:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2677:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:62:1"
															},
															"nodeType": "YulIf",
															"src": "2632:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2736:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2740:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2729:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2729:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:1",
														"type": ""
													}
												],
												"src": "2508:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2877:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2847:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2844:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:30:1"
															},
															"nodeType": "YulIf",
															"src": "2841:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2906:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2922:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2925:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2906:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2811:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2822:4:1",
														"type": ""
													}
												],
												"src": "2762:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3063:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3072:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3065:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3065:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3065:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3042:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3050:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3038:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3038:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3057:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:35:1"
															},
															"nodeType": "YulIf",
															"src": "3024:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3088:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3111:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3098:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3092:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3137:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3131:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3150:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3160:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3154:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3212:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3216:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3264:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3272:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3244:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3244:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3284:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3295:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3288:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3317:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3325:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3310:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3337:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3356:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3368:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3402:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3405:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3398:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3398:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3386:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3386:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3411:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3372:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3442:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3451:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3454:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3444:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3444:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3444:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3437:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3426:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:15:1"
															},
															"nodeType": "YulIf",
															"src": "3423:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3467:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3482:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3490:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3478:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3471:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3579:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3597:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3584:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3584:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3572:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3615:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3626:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3631:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3622:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3622:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3615:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3513:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3510:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3526:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3528:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3539:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3544:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3535:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3535:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3528:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3506:3:1",
																"statements": []
															},
															"src": "3502:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3653:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3662:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3653:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2988:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2996:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3004:5:1",
														"type": ""
													}
												],
												"src": "2950:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3731:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3782:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3759:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3767:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3755:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3751:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:35:1"
															},
															"nodeType": "YulIf",
															"src": "3741:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3805:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3815:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3809:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3874:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3876:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3876:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3850:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3847:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:26:1"
															},
															"nodeType": "YulIf",
															"src": "3844:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3905:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3925:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3919:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3909:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3957:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3977:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3981:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3973:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3973:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3992:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3988:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3988:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3969:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3969:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3937:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3937:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3937:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4020:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4028:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4013:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4079:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4088:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4091:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4081:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4081:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4054:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4062:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4050:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4050:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4046:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4043:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:35:1"
															},
															"nodeType": "YulIf",
															"src": "4040:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4121:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4129:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4117:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4117:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4155:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4104:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4182:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4190:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4178:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4178:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4195:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4174:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4167:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4167:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4213:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4222:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4213:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3705:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3713:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3721:5:1",
														"type": ""
													}
												],
												"src": "3679:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4436:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4483:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4492:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4495:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4485:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4485:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4457:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4466:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4453:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4478:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:33:1"
															},
															"nodeType": "YulIf",
															"src": "4446:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4508:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4537:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4518:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4508:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4556:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4589:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4566:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4613:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4627:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4617:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4668:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4678:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4672:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4723:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4735:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4725:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4725:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4725:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4711:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4719:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4708:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:14:1"
															},
															"nodeType": "YulIf",
															"src": "4705:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4748:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4791:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4787:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4811:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4758:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4828:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4872:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4844:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4832:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4905:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4907:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4907:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4891:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4901:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4888:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:16:1"
															},
															"nodeType": "YulIf",
															"src": "4885:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4930:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4984:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4969:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4995:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4940:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5012:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5056:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5041:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5028:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5016:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5090:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5076:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5086:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5073:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:16:1"
															},
															"nodeType": "YulIf",
															"src": "5070:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5115:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5146:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5157:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5142:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5168:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5125:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4370:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4381:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4393:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4401:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4409:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4417:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4425:6:1",
														"type": ""
													}
												],
												"src": "4239:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5324:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5370:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5379:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5382:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5372:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5372:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5372:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5345:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5341:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5366:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:32:1"
															},
															"nodeType": "YulIf",
															"src": "5334:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5395:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5422:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5409:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5399:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5441:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5451:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5445:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5496:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5505:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5508:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5498:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5498:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5484:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5492:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5481:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:14:1"
															},
															"nodeType": "YulIf",
															"src": "5478:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5521:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5535:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5546:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5525:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5601:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5610:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5603:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5603:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5603:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5580:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5584:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5576:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5591:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5572:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:35:1"
															},
															"nodeType": "YulIf",
															"src": "5562:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5626:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5649:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5636:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5630:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5661:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5671:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5665:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5684:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5734:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5694:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5694:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5688:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5746:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5766:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5760:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5750:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5798:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5806:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5778:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5778:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5818:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5829:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5822:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5851:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5859:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5871:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5890:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5878:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5871:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5902:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5924:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5932:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5935:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5928:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5928:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5920:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5941:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5906:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5976:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5985:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5978:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5978:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5978:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5959:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5967:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5956:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:19:1"
															},
															"nodeType": "YulIf",
															"src": "5953:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6001:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6016:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6020:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6012:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6005:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6088:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6109:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6133:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6114:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6114:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6102:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6102:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6102:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6151:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6162:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6167:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6158:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6158:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6151:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6043:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6040:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6040:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6056:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6058:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6069:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6074:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6065:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6065:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6058:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6036:3:1",
																"statements": []
															},
															"src": "6032:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6189:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6199:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6189:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6214:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6258:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6230:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6218:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6291:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6300:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6303:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6293:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6293:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6293:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6277:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6287:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6274:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:16:1"
															},
															"nodeType": "YulIf",
															"src": "6271:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6316:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6359:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6370:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6355:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6381:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6326:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5282:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5293:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5305:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5313:6:1",
														"type": ""
													}
												],
												"src": "5187:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6461:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6471:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6491:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6485:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6485:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6475:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6513:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6518:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6506:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6534:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6544:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6538:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6557:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6568:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6573:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6564:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6585:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6603:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6610:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6599:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6589:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6622:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6631:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6626:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6690:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6711:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6722:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6716:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6716:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6704:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6704:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6743:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6754:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6759:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6750:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6750:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6743:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6775:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6789:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6797:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6785:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6785:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6775:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6652:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6655:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6649:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6663:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6665:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6674:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6677:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6670:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6670:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6665:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6645:3:1",
																"statements": []
															},
															"src": "6641:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6819:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6826:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6819:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6438:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6445:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6453:3:1",
														"type": ""
													}
												],
												"src": "6400:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6991:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7008:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7019:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7001:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7031:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7068:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7091:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7076:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7039:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7031:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6960:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6971:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6982:4:1",
														"type": ""
													}
												],
												"src": "6840:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7190:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7236:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7245:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7248:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7238:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7238:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7238:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7211:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7220:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7207:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7203:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7203:32:1"
															},
															"nodeType": "YulIf",
															"src": "7200:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7261:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7290:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7271:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7309:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7339:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7350:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7335:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7322:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7313:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7407:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7416:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7419:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7409:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7409:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7409:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7376:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7397:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7390:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7390:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7383:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7383:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7373:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7373:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:40:1"
															},
															"nodeType": "YulIf",
															"src": "7363:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7432:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7442:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7432:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7148:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7159:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7171:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7179:6:1",
														"type": ""
													}
												],
												"src": "7106:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7545:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7600:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7603:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7566:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7575:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7562:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7587:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:32:1"
															},
															"nodeType": "YulIf",
															"src": "7555:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7616:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7645:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7626:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7626:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7616:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7708:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7693:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7503:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7514:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7526:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7534:6:1",
														"type": ""
													}
												],
												"src": "7458:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7870:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7917:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7926:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7929:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7919:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7919:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7919:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7891:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7900:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7887:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:33:1"
															},
															"nodeType": "YulIf",
															"src": "7880:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7942:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7971:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7952:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7952:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7942:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7990:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8000:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8047:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8057:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8057:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8098:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8108:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8149:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8180:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8191:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8176:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8163:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8163:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8153:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8239:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8248:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8251:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8241:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8241:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8241:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8211:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8219:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8208:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8208:30:1"
															},
															"nodeType": "YulIf",
															"src": "8205:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8264:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8295:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8306:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8291:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8315:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8274:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8274:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8264:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7827:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7835:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7843:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7851:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7859:6:1",
														"type": ""
													}
												],
												"src": "7723:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8508:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8518:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8555:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8575:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8548:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8548:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8609:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8594:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8614:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8587:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8587:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8680:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8665:18:1"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8685:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8708:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8731:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8499:4:1",
														"type": ""
													}
												],
												"src": "8334:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8801:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8811:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8825:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8828:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8842:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8872:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8846:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8919:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8921:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8935:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8943:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8931:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8931:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8921:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8899:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:26:1"
															},
															"nodeType": "YulIf",
															"src": "8889:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9009:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9037:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9023:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9023:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9074:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9077:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9067:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9067:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9102:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9105:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9095:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9095:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8965:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8988:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8996:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8985:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8985:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8962:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:38:1"
															},
															"nodeType": "YulIf",
															"src": "8959:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8781:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8790:6:1",
														"type": ""
													}
												],
												"src": "8746:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9305:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9315:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9356:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9367:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9352:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9372:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9345:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9345:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9395:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9406:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9391:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9411:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9384:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9384:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9384:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9466:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9477:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9462:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9482:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9455:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9455:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9502:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9525:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9510:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9502:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9282:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9296:4:1",
														"type": ""
													}
												],
												"src": "9131:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9761:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9781:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9754:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9800:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9820:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9793:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9871:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9891:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9864:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9864:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9705:4:1",
														"type": ""
													}
												],
												"src": "9540:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10120:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10187:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10206:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10226:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10277:18:1"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10297:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10327:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10339:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10327:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10111:4:1",
														"type": ""
													}
												],
												"src": "9946:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10397:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10414:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10421:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10426:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10407:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10454:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10457:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10447:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10447:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10471:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10365:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10529:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10553:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10558:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10549:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10539:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10586:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10589:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10579:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10610:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10603:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10603:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10497:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10676:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10707:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10709:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10709:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10709:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10692:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10703:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10699:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10689:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:17:1"
															},
															"nodeType": "YulIf",
															"src": "10686:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10738:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10749:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10738:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10658:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10668:3:1",
														"type": ""
													}
												],
												"src": "10629:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10998:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11015:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11026:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11008:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11008:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11038:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11081:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11093:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11104:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11089:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11052:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11052:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11042:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11128:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11139:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11124:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11148:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11156:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11144:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11117:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11117:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11176:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11213:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11221:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11184:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11176:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10959:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10970:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10978:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10989:4:1",
														"type": ""
													}
												],
												"src": "10769:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11413:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11441:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11423:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11464:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11475:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11460:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11480:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11453:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11514:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11499:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11519:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11492:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11574:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11585:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11570:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11590:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11563:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11611:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11623:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11634:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11611:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11390:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11404:4:1",
														"type": ""
													}
												],
												"src": "11239:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11823:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11840:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11833:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11874:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11885:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11870:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11890:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11863:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11863:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11924:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11909:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11929:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11902:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11902:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11984:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11995:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11980:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12000:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11973:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11973:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12044:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12021:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11800:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11814:4:1",
														"type": ""
													}
												],
												"src": "11649:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12233:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12250:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12243:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12243:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12295:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12280:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12300:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12273:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12334:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12319:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12339:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12312:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12312:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12394:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12405:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12390:18:1"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12410:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12383:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12383:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12431:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12443:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12454:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12431:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12210:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12224:4:1",
														"type": ""
													}
												],
												"src": "12059:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12598:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12608:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12616:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12608:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12650:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12661:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12643:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12643:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12684:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12704:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12677:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12677:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12559:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12570:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12578:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12589:4:1",
														"type": ""
													}
												],
												"src": "12469:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12896:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12913:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12906:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12958:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12943:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12936:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12986:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12997:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12982:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13002:34:1",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13068:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13053:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13073:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13046:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13046:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13086:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13098:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13109:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13094:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13086:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12873:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12887:4:1",
														"type": ""
													}
												],
												"src": "12722:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13173:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13183:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13195:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13198:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13191:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13183:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13224:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13226:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13226:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13226:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13215:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13221:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13212:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13212:11:1"
															},
															"nodeType": "YulIf",
															"src": "13209:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13155:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13158:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13164:4:1",
														"type": ""
													}
												],
												"src": "13124:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13305:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13315:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13326:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13329:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13322:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13315:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13354:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13356:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13356:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13356:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13346:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13349:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13343:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13343:10:1"
															},
															"nodeType": "YulIf",
															"src": "13340:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13288:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13291:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13297:3:1",
														"type": ""
													}
												],
												"src": "13257:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13561:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13578:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13589:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13571:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13571:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13623:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13608:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13628:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13601:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13601:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13662:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13647:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13667:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13640:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13718:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13729:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13706:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13538:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13552:4:1",
														"type": ""
													}
												],
												"src": "13387:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14074:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14084:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14102:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14107:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14098:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14111:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14094:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14094:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14088:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14129:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14144:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14152:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14140:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14122:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14122:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14187:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14172:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14196:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14204:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14192:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14165:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14165:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14228:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14239:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14224:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14244:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14217:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14217:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14257:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14300:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14323:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14308:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14271:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14271:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14261:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14348:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14359:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14344:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14368:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14376:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14364:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14337:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14337:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14337:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14396:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14439:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14447:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14410:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14410:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "14400:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14485:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14470:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "14495:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14503:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14463:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14463:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14523:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14549:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "14557:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14531:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14523:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14011:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14022:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14030:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14038:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14046:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14054:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14065:4:1",
														"type": ""
													}
												],
												"src": "13743:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14655:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14701:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14710:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14713:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14703:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14703:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14703:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14676:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14685:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14672:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14668:32:1"
															},
															"nodeType": "YulIf",
															"src": "14665:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14726:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14745:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14739:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14739:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14730:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14788:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14764:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14764:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14764:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14803:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14813:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14803:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14621:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14632:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14644:6:1",
														"type": ""
													}
												],
												"src": "14575:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14872:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14917:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14946:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14949:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14952:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14931:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14931:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14931:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14967:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14978:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14989:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14983:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14983:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14974:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14974:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14967:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14888:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14888:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14906:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:23:1"
															},
															"nodeType": "YulIf",
															"src": "14882:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14864:3:1",
														"type": ""
													}
												],
												"src": "14829:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15060:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15100:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15102:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15076:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15076:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15094:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15073:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15073:26:1"
															},
															"nodeType": "YulIf",
															"src": "15070:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15118:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15130:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15122:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15148:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15158:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15158:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15152:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15188:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15194:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15201:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15201:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15219:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15197:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15173:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15173:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15173:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15232:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15252:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15246:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15246:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15236:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15266:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15276:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15276:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15301:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15311:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15305:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15387:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15389:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15347:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15355:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15344:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15344:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15367:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15375:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15363:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15363:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15382:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15360:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15360:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15341:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15341:45:1"
															},
															"nodeType": "YulIf",
															"src": "15338:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15405:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15420:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15426:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15416:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15409:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15442:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15462:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15456:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15446:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15493:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15495:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15481:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "15489:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15478:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15478:14:1"
															},
															"nodeType": "YulIf",
															"src": "15475:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15584:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15586:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "15525:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15530:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15521:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15539:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15517:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "15554:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "15560:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15560:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15550:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15550:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15579:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15546:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15514:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15514:69:1"
															},
															"nodeType": "YulIf",
															"src": "15511:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15622:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15636:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15644:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15632:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15632:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15653:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15628:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "15602:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15602:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15602:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15668:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "15675:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15668:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15052:3:1",
														"type": ""
													}
												],
												"src": "15013:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15863:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15880:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15873:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15873:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15925:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15910:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15930:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15903:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15903:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15953:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15964:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15949:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15969:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15942:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15942:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16035:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16020:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16040:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16013:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16013:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16072:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16084:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16095:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16080:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16080:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16072:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15840:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15854:4:1",
														"type": ""
													}
												],
												"src": "15689:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16284:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16294:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16294:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16346:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16331:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16351:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16324:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16324:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16385:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16370:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16390:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16363:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16363:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16445:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16456:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16441:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16461:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16434:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16434:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16481:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16493:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16504:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16489:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16481:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16261:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16275:4:1",
														"type": ""
													}
												],
												"src": "16110:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16750:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16760:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16778:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16783:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16774:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16787:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16770:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16764:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16805:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16820:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16828:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16816:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16798:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16798:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16852:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16848:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16872:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16868:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16841:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16841:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16915:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16900:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16920:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16893:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16958:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16943:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16963:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16936:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16936:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16990:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17001:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16986:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17007:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16979:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16979:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17020:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17046:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17069:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17054:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17028:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17028:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17020:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16687:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16698:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16706:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16714:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16722:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16730:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16741:4:1",
														"type": ""
													}
												],
												"src": "16519:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d61461012f5780634e1273f414610142578063a22cb46514610162578063e985e9c514610175578063f242432a146101b157600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100fa578063156e29f61461011a575b600080fd5b6100aa6100a5366004610d82565b6101c4565b6040519081526020015b60405180910390f35b6100ea6100cb366004610dc5565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020016100b4565b61010d610108366004610de2565b610260565b6040516100b49190610e41565b61012d610128366004610e54565b6102f4565b005b61012d61013d366004610fd3565b610308565b61015561015036600461107d565b61059c565b6040516100b49190611183565b61012d610170366004611196565b6106c6565b6100ea6101833660046111d2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61012d6101bf366004611205565b61079c565b60006001600160a01b0383166102355760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60606003805461026f9061126a565b80601f016020809104026020016040519081016040528092919081815260200182805461029b9061126a565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b50505050509050919050565b60606103028484848461094f565b50505050565b815183511461036a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161022c565b6001600160a01b0384166103905760405162461bcd60e51b815260040161022c906112a4565b6001600160a01b0385163314806103ac57506103ac8533610183565b6104135760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161022c565b3360005b845181101561052e576000858281518110610434576104346112e9565b602002602001015190506000858381518110610452576104526112e9565b602002602001015190506104bf816040518060600160405280602a8152602001611531602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610a5f9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546104f69082610a96565b60009283526001602090815260408085206001600160a01b038c168652909152909220919091555061052781611315565b9050610417565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161057e92919061132e565b60405180910390a4610594818787878787610afc565b505050505050565b606081518351146106015760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161022c565b6000835167ffffffffffffffff81111561061d5761061d610e87565b604051908082528060200260200182016040528015610646578160200160208202803683370190505b50905060005b84518110156106be5761069185828151811061066a5761066a6112e9565b6020026020010151858381518110610684576106846112e9565b60200260200101516101c4565b8282815181106106a3576106a36112e9565b60209081029190910101526106b781611315565b905061064c565b509392505050565b6001600160a01b03821633036107305760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161022c565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0384166107c25760405162461bcd60e51b815260040161022c906112a4565b6001600160a01b0385163314806107de57506107de8533610183565b61083c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161022c565b3361085c81878761084c88610c60565b61085588610c60565b5050505050565b6108a3836040518060600160405280602a8152602001611531602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610a5f565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546108da9084610a96565b60008581526001602090815260408083206001600160a01b038a811680865291845293829020949094558051888152918201879052898316928516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610594818787878787610cab565b6001600160a01b0384166109af5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161022c565b336109c08160008761084c88610c60565b60008481526001602090815260408083206001600160a01b03891684529091529020546109ed9084610a96565b60008581526001602090815260408083206001600160a01b038a8116808652918452828520959095558151898152928301889052938516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461085581600087878787610cab565b60008184841115610a835760405162461bcd60e51b815260040161022c9190610e41565b50610a8e838561135c565b949350505050565b600080610aa3838561136f565b905083811015610af55760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161022c565b9392505050565b6001600160a01b0384163b156105945760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b409089908990889088908890600401611382565b6020604051808303816000875af1925050508015610b7b575060408051601f3d908101601f19168201909252610b78918101906113e0565b60015b610c2757610b876113fd565b806308c379a003610bc05750610b9b611419565b80610ba65750610bc2565b8060405162461bcd60e51b815260040161022c9190610e41565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161022c565b6001600160e01b0319811663bc197c8160e01b14610c575760405162461bcd60e51b815260040161022c906114a3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c9a57610c9a6112e9565b602090810291909101015292915050565b6001600160a01b0384163b156105945760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cef90899089908890889088906004016114eb565b6020604051808303816000875af1925050508015610d2a575060408051601f3d908101601f19168201909252610d27918101906113e0565b60015b610d3657610b876113fd565b6001600160e01b0319811663f23a6e6160e01b14610c575760405162461bcd60e51b815260040161022c906114a3565b80356001600160a01b0381168114610d7d57600080fd5b919050565b60008060408385031215610d9557600080fd5b610d9e83610d66565b946020939093013593505050565b6001600160e01b031981168114610dc257600080fd5b50565b600060208284031215610dd757600080fd5b8135610af581610dac565b600060208284031215610df457600080fd5b5035919050565b6000815180845260005b81811015610e2157602081850181015186830182015201610e05565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610af56020830184610dfb565b600080600060608486031215610e6957600080fd5b610e7284610d66565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ec357610ec3610e87565b6040525050565b600067ffffffffffffffff821115610ee457610ee4610e87565b5060051b60200190565b600082601f830112610eff57600080fd5b81356020610f0c82610eca565b604051610f198282610e9d565b83815260059390931b8501820192828101915086841115610f3957600080fd5b8286015b84811015610f545780358352918301918301610f3d565b509695505050505050565b600082601f830112610f7057600080fd5b813567ffffffffffffffff811115610f8a57610f8a610e87565b604051610fa1601f8301601f191660200182610e9d565b818152846020838601011115610fb657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610feb57600080fd5b610ff486610d66565b945061100260208701610d66565b9350604086013567ffffffffffffffff8082111561101f57600080fd5b61102b89838a01610eee565b9450606088013591508082111561104157600080fd5b61104d89838a01610eee565b9350608088013591508082111561106357600080fd5b5061107088828901610f5f565b9150509295509295909350565b6000806040838503121561109057600080fd5b823567ffffffffffffffff808211156110a857600080fd5b818501915085601f8301126110bc57600080fd5b813560206110c982610eca565b6040516110d68282610e9d565b83815260059390931b85018201928281019150898411156110f657600080fd5b948201945b8386101561111b5761110c86610d66565b825294820194908201906110fb565b9650508601359250508082111561113157600080fd5b5061113e85828601610eee565b9150509250929050565b600081518084526020808501945080840160005b838110156111785781518752958201959082019060010161115c565b509495945050505050565b602081526000610af56020830184611148565b600080604083850312156111a957600080fd5b6111b283610d66565b9150602083013580151581146111c757600080fd5b809150509250929050565b600080604083850312156111e557600080fd5b6111ee83610d66565b91506111fc60208401610d66565b90509250929050565b600080600080600060a0868803121561121d57600080fd5b61122686610d66565b945061123460208701610d66565b93506040860135925060608601359150608086013567ffffffffffffffff81111561125e57600080fd5b61107088828901610f5f565b600181811c9082168061127e57607f821691505b60208210810361129e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611327576113276112ff565b5060010190565b6040815260006113416040830185611148565b82810360208401526113538185611148565b95945050505050565b8181038181111561025a5761025a6112ff565b8082018082111561025a5761025a6112ff565b6001600160a01b0386811682528516602082015260a0604082018190526000906113ae90830186611148565b82810360608401526113c08186611148565b905082810360808401526113d48185610dfb565b98975050505050505050565b6000602082840312156113f257600080fd5b8151610af581610dac565b600060033d11156114165760046000803e5060005160e01c5b90565b600060443d10156114275790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561145757505050505090565b828501915081518181111561146f5750505050505090565b843d87010160208285010111156114895750505050505090565b61149860208286010187610e9d565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061152590830184610dfb565b97965050505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a26469706673582212201cbe8cf9566417eebb73cad7689f74c7c1e3edc3cb2252cf504f246acf90858264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x126A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29B SWAP1 PUSH2 0x126A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x302 DUP5 DUP5 DUP5 DUP5 PUSH2 0x94F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3AC JUMPI POP PUSH2 0x3AC DUP6 CALLER PUSH2 0x183 JUMP JUMPDEST PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x452 JUMPI PUSH2 0x452 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x4BF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1531 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA5F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4F6 SWAP1 DUP3 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x527 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP PUSH2 0x417 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x594 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xAFC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61D PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x646 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6BE JUMPI PUSH2 0x691 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C4 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6B7 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP PUSH2 0x64C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7DE JUMPI POP PUSH2 0x7DE DUP6 CALLER PUSH2 0x183 JUMP JUMPDEST PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x84C DUP9 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x855 DUP9 PUSH2 0xC60 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A3 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1531 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8DA SWAP1 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP10 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x594 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST CALLER PUSH2 0x9C0 DUP2 PUSH1 0x0 DUP8 PUSH2 0x84C DUP9 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x9ED SWAP1 DUP5 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP4 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x855 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP PUSH2 0xA8E DUP4 DUP6 PUSH2 0x135C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA3 DUP4 DUP6 PUSH2 0x136F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xB40 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB7B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB78 SWAP2 DUP2 ADD SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC27 JUMPI PUSH2 0xB87 PUSH2 0x13FD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xBC0 JUMPI POP PUSH2 0xB9B PUSH2 0x1419 JUMP JUMPDEST DUP1 PUSH2 0xBA6 JUMPI POP PUSH2 0xBC2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x14A3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC9A JUMPI PUSH2 0xC9A PUSH2 0x12E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xCEF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD2A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD27 SWAP2 DUP2 ADD SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD36 JUMPI PUSH2 0xB87 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9E DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF5 DUP2 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE72 DUP5 PUSH2 0xD66 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC3 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE4 JUMPI PUSH2 0xEE4 PUSH2 0xE87 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF0C DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF19 DUP3 DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF54 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF4 DUP7 PUSH2 0xD66 JUMP JUMPDEST SWAP5 POP PUSH2 0x1002 PUSH1 0x20 DUP8 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102B DUP10 DUP4 DUP11 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104D DUP10 DUP4 DUP11 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1070 DUP9 DUP3 DUP10 ADD PUSH2 0xF5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x10C9 DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D6 DUP3 DUP3 PUSH2 0xE9D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x111B JUMPI PUSH2 0x110C DUP7 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x10FB JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113E DUP6 DUP3 DUP7 ADD PUSH2 0xEEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1178 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x115C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EE DUP4 PUSH2 0xD66 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FC PUSH1 0x20 DUP5 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1226 DUP7 PUSH2 0xD66 JUMP JUMPDEST SWAP5 POP PUSH2 0x1234 PUSH1 0x20 DUP8 ADD PUSH2 0xD66 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1070 DUP9 DUP3 DUP10 ADD PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x127E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x129E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1327 JUMPI PUSH2 0x1327 PUSH2 0x12FF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1341 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1148 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1353 DUP2 DUP6 PUSH2 0x1148 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x25A PUSH2 0x12FF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x25A PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13AE SWAP1 DUP4 ADD DUP7 PUSH2 0x1148 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x13C0 DUP2 DUP7 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x13D4 DUP2 DUP6 PUSH2 0xDFB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAF5 DUP2 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1427 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1457 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x146F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1489 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1498 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xE9D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1525 SWAP1 DUP4 ADD DUP5 PUSH2 0xDFB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xBE DUP13 0xF9 JUMP PUSH5 0x17EEBB73CA 0xD7 PUSH9 0x9F74C7C1E3EDC3CB22 MSTORE 0xCF POP 0x4F 0x24 PUSH11 0xCF90858264736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "43127:274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13681:231;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;13681:231:0;;;;;;;;2688:150;;;;;;:::i;:::-;-1:-1:-1;;;;;;2797:33:0;2773:4;2797:33;;;;;;;;;;;;;;2688:150;;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;2688:150:0;1019:187:1;13423:107:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;43255:143::-;;;;;;:::i;:::-;;:::i;:::-;;16324:1220;;;;;;:::i;:::-;;:::i;14078:549::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14700:311::-;;;;;;:::i;:::-;;:::i;15083:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15206:27:0;;;15182:4;15206:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;15083:168;15323:924;;;;;;:::i;:::-;;:::i;13681:231::-;13767:7;-1:-1:-1;;;;;13795:21:0;;13787:77;;;;-1:-1:-1;;;13787:77:0;;8536:2:1;13787:77:0;;;8518:21:1;8575:2;8555:18;;;8548:30;8614:34;8594:18;;;8587:62;-1:-1:-1;;;8665:18:1;;;8658:41;8716:19;;13787:77:0;;;;;;;;;-1:-1:-1;13882:13:0;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;13882:22:0;;;;;;;;;;13681:231;;;;;:::o;13423:107::-;13485:13;13518:4;13511:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13423:107;;;:::o;43255:143::-;43331:18;43360:30;43366:5;43373:2;43377:5;43384;43360;:30::i;:::-;43320:78;43255:143;;;:::o;16324:1220::-;16589:7;:14;16575:3;:10;:28;16567:81;;;;-1:-1:-1;;;16567:81:0;;9333:2:1;16567:81:0;;;9315:21:1;9372:2;9352:18;;;9345:30;9411:34;9391:18;;;9384:62;-1:-1:-1;;;9462:18:1;;;9455:38;9510:19;;16567:81:0;9131:404:1;16567:81:0;-1:-1:-1;;;;;16667:16:0;;16659:66;;;;-1:-1:-1;;;16659:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;16758:20:0;;1697:10;16758:20;;:60;;-1:-1:-1;16782:36:0;16799:4;1697:10;15083:168;:::i;16782:36::-;16736:160;;;;-1:-1:-1;;;16736:160:0;;10148:2:1;16736:160:0;;;10130:21:1;10187:2;10167:18;;;10160:30;10226:34;10206:18;;;10199:62;-1:-1:-1;;;10277:18:1;;;10270:48;10335:19;;16736:160:0;9946:414:1;16736:160:0;1697:10;16909:16;17026:358;17050:3;:10;17046:1;:14;17026:358;;;17082:10;17095:3;17099:1;17095:6;;;;;;;;:::i;:::-;;;;;;;17082:19;;17116:14;17133:7;17141:1;17133:10;;;;;;;;:::i;:::-;;;;;;;17116:27;;17182:126;17224:6;17182:126;;;;;;;;;;;;;;;;;:9;:13;17192:2;17182:13;;;;;;;;;;;:19;17196:4;-1:-1:-1;;;;;17182:19:0;-1:-1:-1;;;;;17182:19:0;;;;;;;;;;;;;:23;;:126;;;;;:::i;:::-;17160:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17160:19:0;;;;;;;;;;:148;;;;17343:17;;;;;;:29;;17365:6;17343:21;:29::i;:::-;17323:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;17323:17:0;;;;;;;;;;:49;;;;-1:-1:-1;17062:3:0;;;:::i;:::-;;;17026:358;;;;17431:2;-1:-1:-1;;;;;17401:47:0;17425:4;-1:-1:-1;;;;;17401:47:0;17415:8;-1:-1:-1;;;;;17401:47:0;;17435:3;17440:7;17401:47;;;;;;;:::i;:::-;;;;;;;;17461:75;17497:8;17507:4;17513:2;17517:3;17522:7;17531:4;17461:35;:75::i;:::-;16556:988;16324:1220;;;;;:::o;14078:549::-;14259:16;14320:3;:10;14301:8;:15;:29;14293:83;;;;-1:-1:-1;;;14293:83:0;;11441:2:1;14293:83:0;;;11423:21:1;11480:2;11460:18;;;11453:30;11519:34;11499:18;;;11492:62;-1:-1:-1;;;11570:18:1;;;11563:39;11619:19;;14293:83:0;11239:405:1;14293:83:0;14389:30;14436:8;:15;14422:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14422:30:0;;14389:63;;14470:9;14465:122;14489:8;:15;14485:1;:19;14465:122;;;14545:30;14555:8;14564:1;14555:11;;;;;;;;:::i;:::-;;;;;;;14568:3;14572:1;14568:6;;;;;;;;:::i;:::-;;;;;;;14545:9;:30::i;:::-;14526:13;14540:1;14526:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;14506:3;;;:::i;:::-;;;14465:122;;;-1:-1:-1;14606:13:0;14078:549;-1:-1:-1;;;14078:549:0:o;14700:311::-;-1:-1:-1;;;;;14803:24:0;;1697:10;14803:24;14795:78;;;;-1:-1:-1;;;14795:78:0;;11851:2:1;14795:78:0;;;11833:21:1;11890:2;11870:18;;;11863:30;11929:34;11909:18;;;11902:62;-1:-1:-1;;;11980:18:1;;;11973:39;12029:19;;14795:78:0;11649:405:1;14795:78:0;1697:10;14886:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;14886:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;14886:53:0;;;;;;;;;;14955:48;;1159:41:1;;;14886:42:0;;1697:10;14955:48;;1132:18:1;14955:48:0;;;;;;;14700:311;;:::o;15323:924::-;-1:-1:-1;;;;;15549:16:0;;15541:66;;;;-1:-1:-1;;;15541:66:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15640:20:0;;1697:10;15640:20;;:60;;-1:-1:-1;15664:36:0;15681:4;1697:10;15083:168;:::i;15664:36::-;15618:151;;;;-1:-1:-1;;;15618:151:0;;12261:2:1;15618:151:0;;;12243:21:1;12300:2;12280:18;;;12273:30;12339:34;12319:18;;;12312:62;-1:-1:-1;;;12390:18:1;;;12383:39;12439:19;;15618:151:0;12059:405:1;15618:151:0;1697:10;15826:96;1697:10;15857:4;15863:2;15867:21;15885:2;15867:17;:21::i;:::-;15890:25;15908:6;15890:17;:25::i;:::-;16324:1220;;;;;;15826:96;15957:77;15981:6;15957:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15957:19:0;;;;;;;;;;;:77;:23;:77::i;:::-;15935:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;15935:19:0;;;;;;;;;;:99;;;;16065:17;;;;;;:29;;16087:6;16065:21;:29::i;:::-;16045:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;16045:17:0;;;;;;;;;;;;;:49;;;;16112:46;;12643:25:1;;;12684:18;;;12677:34;;;16112:46:0;;;;;;;;;12616:18:1;16112:46:0;;;;;;;16171:68;16202:8;16212:4;16218:2;16222;16226:6;16234:4;16171:30;:68::i;18877:583::-;-1:-1:-1;;;;;18992:21:0;;18984:67;;;;-1:-1:-1;;;18984:67:0;;12924:2:1;18984:67:0;;;12906:21:1;12963:2;12943:18;;;12936:30;13002:34;12982:18;;;12975:62;-1:-1:-1;;;13053:18:1;;;13046:31;13094:19;;18984:67:0;12722:397:1;18984:67:0;1697:10;19108:107;1697:10;19064:16;19151:7;19160:21;19178:2;19160:17;:21::i;19108:107::-;19253:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;19253:22:0;;;;;;;;;;:34;;19280:6;19253:26;:34::i;:::-;19228:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;19228:22:0;;;;;;;;;;;;:59;;;;19303:57;;12643:25:1;;;12684:18;;;12677:34;;;19228:22:0;19303:57;;;;;12616:18:1;19303:57:0;;;;;;;19373:79;19404:8;19422:1;19426:7;19435:2;19439:6;19447:4;19373:30;:79::i;33345:166::-;33431:7;33467:12;33459:6;;;;33451:29;;;;-1:-1:-1;;;33451:29:0;;;;;;;;:::i;:::-;-1:-1:-1;33498:5:0;33502:1;33498;:5;:::i;:::-;33491:12;33345:166;-1:-1:-1;;;;33345:166:0:o;30518:179::-;30576:7;;30608:5;30612:1;30608;:5;:::i;:::-;30596:17;;30637:1;30632;:6;;30624:46;;;;-1:-1:-1;;;30624:46:0;;13589:2:1;30624:46:0;;;13571:21:1;13628:2;13608:18;;;13601:30;13667:29;13647:18;;;13640:57;13714:18;;30624:46:0;13387:351:1;30624:46:0;30688:1;30518:179;-1:-1:-1;;;30518:179:0:o;24244:799::-;-1:-1:-1;;;;;24498:13:0;;36233:20;36272:8;24494:542;;24534:79;;-1:-1:-1;;;24534:79:0;;-1:-1:-1;;;;;24534:43:0;;;;;:79;;24578:8;;24588:4;;24594:3;;24599:7;;24608:4;;24534:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24534:79:0;;;;;;;;-1:-1:-1;;24534:79:0;;;;;;;;;;;;:::i;:::-;;;24530:495;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;24898:6;24891:14;;-1:-1:-1;;;24891:14:0;;;;;;;;:::i;24530:495::-;;;24947:62;;-1:-1:-1;;;24947:62:0;;15891:2:1;24947:62:0;;;15873:21:1;15930:2;15910:18;;;15903:30;15969:34;15949:18;;;15942:62;-1:-1:-1;;;16020:18:1;;;16013:50;16080:19;;24947:62:0;15689:416:1;24530:495:0;-1:-1:-1;;;;;;24663:64:0;;-1:-1:-1;;;24663:64:0;24659:163;;24752:50;;-1:-1:-1;;;24752:50:0;;;;;;;:::i;24659:163::-;24614:223;24244:799;;;;;;:::o;25051:198::-;25171:16;;;25185:1;25171:16;;;;;;;;;25117;;25146:22;;25171:16;;;;;;;;;;;;-1:-1:-1;25171:16:0;25146:41;;25209:7;25198:5;25204:1;25198:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;25236:5;25051:198;-1:-1:-1;;25051:198:0:o;23474:762::-;-1:-1:-1;;;;;23703:13:0;;36233:20;36272:8;23699:530;;23739:72;;-1:-1:-1;;;23739:72:0;;-1:-1:-1;;;;;23739:38:0;;;;;:72;;23778:8;;23788:4;;23794:2;;23798:6;;23806:4;;23739:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23739:72:0;;;;;;;;-1:-1:-1;;23739:72:0;;;;;;;;;;;;:::i;:::-;;;23735:483;;;;:::i;:::-;-1:-1:-1;;;;;;23861:59:0;;-1:-1:-1;;;23861:59:0;23857:158;;23945:50;;-1:-1:-1;;;23945:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:322::-;2126:6;2134;2142;2195:2;2183:9;2174:7;2170:23;2166:32;2163:52;;;2211:1;2208;2201:12;2163:52;2234:29;2253:9;2234:29;:::i;:::-;2224:39;2310:2;2295:18;;2282:32;;-1:-1:-1;2361:2:1;2346:18;;;2333:32;;2049:322;-1:-1:-1;;;2049:322:1:o;2376:127::-;2437:10;2432:3;2428:20;2425:1;2418:31;2468:4;2465:1;2458:15;2492:4;2489:1;2482:15;2508:249;2618:2;2599:13;;-1:-1:-1;;2595:27:1;2583:40;;2653:18;2638:34;;2674:22;;;2635:62;2632:88;;;2700:18;;:::i;:::-;2736:2;2729:22;-1:-1:-1;;2508:249:1:o;2762:183::-;2822:4;2855:18;2847:6;2844:30;2841:56;;;2877:18;;:::i;:::-;-1:-1:-1;2922:1:1;2918:14;2934:4;2914:25;;2762:183::o;2950:724::-;3004:5;3057:3;3050:4;3042:6;3038:17;3034:27;3024:55;;3075:1;3072;3065:12;3024:55;3111:6;3098:20;3137:4;3160:43;3200:2;3160:43;:::i;:::-;3232:2;3226:9;3244:31;3272:2;3264:6;3244:31;:::i;:::-;3310:18;;;3402:1;3398:10;;;;3386:23;;3382:32;;;3344:15;;;;-1:-1:-1;3426:15:1;;;3423:35;;;3454:1;3451;3444:12;3423:35;3490:2;3482:6;3478:15;3502:142;3518:6;3513:3;3510:15;3502:142;;;3584:17;;3572:30;;3622:12;;;;3535;;3502:142;;;-1:-1:-1;3662:6:1;2950:724;-1:-1:-1;;;;;;2950:724:1:o;3679:555::-;3721:5;3774:3;3767:4;3759:6;3755:17;3751:27;3741:55;;3792:1;3789;3782:12;3741:55;3828:6;3815:20;3854:18;3850:2;3847:26;3844:52;;;3876:18;;:::i;:::-;3925:2;3919:9;3937:67;3992:2;3973:13;;-1:-1:-1;;3969:27:1;3998:4;3965:38;3919:9;3937:67;:::i;:::-;4028:2;4020:6;4013:18;4074:3;4067:4;4062:2;4054:6;4050:15;4046:26;4043:35;4040:55;;;4091:1;4088;4081:12;4040:55;4155:2;4148:4;4140:6;4136:17;4129:4;4121:6;4117:17;4104:54;4202:1;4178:15;;;4195:4;4174:26;4167:37;;;;4182:6;3679:555;-1:-1:-1;;;3679:555:1:o;4239:943::-;4393:6;4401;4409;4417;4425;4478:3;4466:9;4457:7;4453:23;4449:33;4446:53;;;4495:1;4492;4485:12;4446:53;4518:29;4537:9;4518:29;:::i;:::-;4508:39;;4566:38;4600:2;4589:9;4585:18;4566:38;:::i;:::-;4556:48;;4655:2;4644:9;4640:18;4627:32;4678:18;4719:2;4711:6;4708:14;4705:34;;;4735:1;4732;4725:12;4705:34;4758:61;4811:7;4802:6;4791:9;4787:22;4758:61;:::i;:::-;4748:71;;4872:2;4861:9;4857:18;4844:32;4828:48;;4901:2;4891:8;4888:16;4885:36;;;4917:1;4914;4907:12;4885:36;4940:63;4995:7;4984:8;4973:9;4969:24;4940:63;:::i;:::-;4930:73;;5056:3;5045:9;5041:19;5028:33;5012:49;;5086:2;5076:8;5073:16;5070:36;;;5102:1;5099;5092:12;5070:36;;5125:51;5168:7;5157:8;5146:9;5142:24;5125:51;:::i;:::-;5115:61;;;4239:943;;;;;;;;:::o;5187:1208::-;5305:6;5313;5366:2;5354:9;5345:7;5341:23;5337:32;5334:52;;;5382:1;5379;5372:12;5334:52;5422:9;5409:23;5451:18;5492:2;5484:6;5481:14;5478:34;;;5508:1;5505;5498:12;5478:34;5546:6;5535:9;5531:22;5521:32;;5591:7;5584:4;5580:2;5576:13;5572:27;5562:55;;5613:1;5610;5603:12;5562:55;5649:2;5636:16;5671:4;5694:43;5734:2;5694:43;:::i;:::-;5766:2;5760:9;5778:31;5806:2;5798:6;5778:31;:::i;:::-;5844:18;;;5932:1;5928:10;;;;5920:19;;5916:28;;;5878:15;;;;-1:-1:-1;5956:19:1;;;5953:39;;;5988:1;5985;5978:12;5953:39;6012:11;;;;6032:148;6048:6;6043:3;6040:15;6032:148;;;6114:23;6133:3;6114:23;:::i;:::-;6102:36;;6065:12;;;;6158;;;;6032:148;;;6199:6;-1:-1:-1;;6243:18:1;;6230:32;;-1:-1:-1;;6274:16:1;;;6271:36;;;6303:1;6300;6293:12;6271:36;;6326:63;6381:7;6370:8;6359:9;6355:24;6326:63;:::i;:::-;6316:73;;;5187:1208;;;;;:::o;6400:435::-;6453:3;6491:5;6485:12;6518:6;6513:3;6506:19;6544:4;6573:2;6568:3;6564:12;6557:19;;6610:2;6603:5;6599:14;6631:1;6641:169;6655:6;6652:1;6649:13;6641:169;;;6716:13;;6704:26;;6750:12;;;;6785:15;;;;6677:1;6670:9;6641:169;;;-1:-1:-1;6826:3:1;;6400:435;-1:-1:-1;;;;;6400:435:1:o;6840:261::-;7019:2;7008:9;7001:21;6982:4;7039:56;7091:2;7080:9;7076:18;7068:6;7039:56;:::i;7106:347::-;7171:6;7179;7232:2;7220:9;7211:7;7207:23;7203:32;7200:52;;;7248:1;7245;7238:12;7200:52;7271:29;7290:9;7271:29;:::i;:::-;7261:39;;7350:2;7339:9;7335:18;7322:32;7397:5;7390:13;7383:21;7376:5;7373:32;7363:60;;7419:1;7416;7409:12;7363:60;7442:5;7432:15;;;7106:347;;;;;:::o;7458:260::-;7526:6;7534;7587:2;7575:9;7566:7;7562:23;7558:32;7555:52;;;7603:1;7600;7593:12;7555:52;7626:29;7645:9;7626:29;:::i;:::-;7616:39;;7674:38;7708:2;7697:9;7693:18;7674:38;:::i;:::-;7664:48;;7458:260;;;;;:::o;7723:606::-;7827:6;7835;7843;7851;7859;7912:3;7900:9;7891:7;7887:23;7883:33;7880:53;;;7929:1;7926;7919:12;7880:53;7952:29;7971:9;7952:29;:::i;:::-;7942:39;;8000:38;8034:2;8023:9;8019:18;8000:38;:::i;:::-;7990:48;;8085:2;8074:9;8070:18;8057:32;8047:42;;8136:2;8125:9;8121:18;8108:32;8098:42;;8191:3;8180:9;8176:19;8163:33;8219:18;8211:6;8208:30;8205:50;;;8251:1;8248;8241:12;8205:50;8274:49;8315:7;8306:6;8295:9;8291:22;8274:49;:::i;8746:380::-;8825:1;8821:12;;;;8868;;;8889:61;;8943:4;8935:6;8931:17;8921:27;;8889:61;8996:2;8988:6;8985:14;8965:18;8962:38;8959:161;;9042:10;9037:3;9033:20;9030:1;9023:31;9077:4;9074:1;9067:15;9105:4;9102:1;9095:15;8959:161;;8746:380;;;:::o;9540:401::-;9742:2;9724:21;;;9781:2;9761:18;;;9754:30;9820:34;9815:2;9800:18;;9793:62;-1:-1:-1;;;9886:2:1;9871:18;;9864:35;9931:3;9916:19;;9540:401::o;10365:127::-;10426:10;10421:3;10417:20;10414:1;10407:31;10457:4;10454:1;10447:15;10481:4;10478:1;10471:15;10497:127;10558:10;10553:3;10549:20;10546:1;10539:31;10589:4;10586:1;10579:15;10613:4;10610:1;10603:15;10629:135;10668:3;10689:17;;;10686:43;;10709:18;;:::i;:::-;-1:-1:-1;10756:1:1;10745:13;;10629:135::o;10769:465::-;11026:2;11015:9;11008:21;10989:4;11052:56;11104:2;11093:9;11089:18;11081:6;11052:56;:::i;:::-;11156:9;11148:6;11144:22;11139:2;11128:9;11124:18;11117:50;11184:44;11221:6;11213;11184:44;:::i;:::-;11176:52;10769:465;-1:-1:-1;;;;;10769:465:1:o;13124:128::-;13191:9;;;13212:11;;;13209:37;;;13226:18;;:::i;13257:125::-;13322:9;;;13343:10;;;13340:36;;;13356:18;;:::i;13743:827::-;-1:-1:-1;;;;;14140:15:1;;;14122:34;;14192:15;;14187:2;14172:18;;14165:43;14102:3;14239:2;14224:18;;14217:31;;;14065:4;;14271:57;;14308:19;;14300:6;14271:57;:::i;:::-;14376:9;14368:6;14364:22;14359:2;14348:9;14344:18;14337:50;14410:44;14447:6;14439;14410:44;:::i;:::-;14396:58;;14503:9;14495:6;14491:22;14485:3;14474:9;14470:19;14463:51;14531:33;14557:6;14549;14531:33;:::i;:::-;14523:41;13743:827;-1:-1:-1;;;;;;;;13743:827:1:o;14575:249::-;14644:6;14697:2;14685:9;14676:7;14672:23;14668:32;14665:52;;;14713:1;14710;14703:12;14665:52;14745:9;14739:16;14764:30;14788:5;14764:30;:::i;14829:179::-;14864:3;14906:1;14888:16;14885:23;14882:120;;;14952:1;14949;14946;14931:23;-1:-1:-1;14989:1:1;14983:8;14978:3;14974:18;14882:120;14829:179;:::o;15013:671::-;15052:3;15094:4;15076:16;15073:26;15070:39;;;15013:671;:::o;15070:39::-;15136:2;15130:9;-1:-1:-1;;15201:16:1;15197:25;;15194:1;15130:9;15173:50;15252:4;15246:11;15276:16;15311:18;15382:2;15375:4;15367:6;15363:17;15360:25;15355:2;15347:6;15344:14;15341:45;15338:58;;;15389:5;;;;;15013:671;:::o;15338:58::-;15426:6;15420:4;15416:17;15405:28;;15462:3;15456:10;15489:2;15481:6;15478:14;15475:27;;;15495:5;;;;;;15013:671;:::o;15475:27::-;15579:2;15560:16;15554:4;15550:27;15546:36;15539:4;15530:6;15525:3;15521:16;15517:27;15514:69;15511:82;;;15586:5;;;;;;15013:671;:::o;15511:82::-;15602:57;15653:4;15644:6;15636;15632:19;15628:30;15622:4;15602:57;:::i;:::-;-1:-1:-1;15675:3:1;;15013:671;-1:-1:-1;;;;;15013:671:1:o;16110:404::-;16312:2;16294:21;;;16351:2;16331:18;;;16324:30;16390:34;16385:2;16370:18;;16363:62;-1:-1:-1;;;16456:2:1;16441:18;;16434:38;16504:3;16489:19;;16110:404::o;16519:561::-;-1:-1:-1;;;;;16816:15:1;;;16798:34;;16868:15;;16863:2;16848:18;;16841:43;16915:2;16900:18;;16893:34;;;16958:2;16943:18;;16936:34;;;16778:3;17001;16986:19;;16979:32;;;16741:4;;17028:46;;17054:19;;17046:6;17028:46;:::i;:::-;17020:54;16519:561;-1:-1:-1;;;;;;;16519:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1104000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2680",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26669",
								"supportsInterface(bytes4)": "2575",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43167,
									"end": 43249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH data",
									"source": 0,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2483,
									"end": 2501,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2483,
									"end": 2523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12709,
									"end": 12713,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12708,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12701,
									"end": 12714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12701,
									"end": 12714,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12806,
									"end": 12824,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12806,
									"end": 12847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12806,
									"end": 12847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12950,
									"end": 12968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12950,
									"end": 13004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12950,
									"end": 13004,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12650,
									"end": 13012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3245,
									"end": 3446,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3245,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3329,
									"end": 3354,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1C"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 325,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 342,
									"end": 360,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 342,
									"end": 360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3321,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3431,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3434,
									"end": 3438,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3398,
									"end": 3438,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3245,
									"end": 3446,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18459,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18462,
									"end": 18468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18455,
									"end": 18468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18468,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18388,
									"end": 18476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 371,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 432,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 427,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 423,
									"end": 443,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 420,
									"end": 421,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 444,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 463,
									"end": 467,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 460,
									"end": 461,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 453,
									"end": 468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 487,
									"end": 491,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 477,
									"end": 492,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 503,
									"end": 883,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 503,
									"end": 883,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 582,
									"end": 583,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 578,
									"end": 590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 578,
									"end": 590,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 578,
									"end": 590,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 625,
									"end": 637,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 625,
									"end": 637,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 625,
									"end": 637,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 646,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 646,
									"end": 707,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 700,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 692,
									"end": 698,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 678,
									"end": 705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 678,
									"end": 705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 646,
									"end": 707,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 646,
									"end": 707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 745,
									"end": 751,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 742,
									"end": 756,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 722,
									"end": 740,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 719,
									"end": 757,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 716,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 716,
									"end": 877,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 799,
									"end": 809,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 794,
									"end": 797,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 790,
									"end": 810,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 787,
									"end": 788,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 811,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 834,
									"end": 838,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 831,
									"end": 832,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 824,
									"end": 839,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 862,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 859,
									"end": 860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 716,
									"end": 877,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 716,
									"end": 877,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 716,
									"end": 877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 503,
									"end": 883,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 503,
									"end": 883,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 503,
									"end": 883,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 503,
									"end": 883,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1559,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1116,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1111,
									"end": 1114,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1119,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1553,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1105,
									"end": 1553,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1177,
									"end": 1182,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1183,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1226,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1220,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1208,
									"end": 1227,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1280,
									"end": 1290,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1295,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1296,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1332,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1326,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1333,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1357,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1310,
									"end": 1357,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 1355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1357,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1310,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 1404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1409,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1390,
									"end": 1410,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1388,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1411,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1482,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1506,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1461,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1105,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 3087,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1735,
									"end": 3087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1877,
									"end": 1907,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1907,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1930,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1874,
									"end": 1930,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1910,
									"end": 1928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1910,
									"end": 1928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1910,
									"end": 1928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1910,
									"end": 1928,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1910,
									"end": 1928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2029,
									"end": 2035,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1989,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2021,
									"end": 2025,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2026,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1989,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1989,
									"end": 2027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1989,
									"end": 2027,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1989,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1939,
									"end": 2036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2036,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1939,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2157,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2144,
									"end": 2158,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2158,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2172,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2891,
									"end": 2897,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2888,
									"end": 2977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2943,
									"end": 2962,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2943,
									"end": 2962,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2943,
									"end": 2962,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2937,
									"end": 2963,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2977,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2888,
									"end": 2977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1688,
									"end": 1699,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1699,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1708,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1709,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1710,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1712,
									"end": 1723,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1723,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1723,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1724,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3071,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 3071,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2137,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2137,
									"end": 3081,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2167,
									"end": 2830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 961,
									"end": 962,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 968,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 954,
									"end": 968,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 968,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2203,
									"end": 2223,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2223,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2223,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2342,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2329,
									"end": 2343,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2424,
									"end": 2443,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2424,
									"end": 2443,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2424,
									"end": 2443,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2444,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2445,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2445,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2543,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2543,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2543,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2484,
									"end": 2485,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2472,
									"end": 2486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2472,
									"end": 2486,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2472,
									"end": 2486,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2472,
									"end": 2486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2370,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2370,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2321,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2585,
									"end": 2591,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2583,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2592,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2771,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2570,
									"end": 2771,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2665,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2665,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2666,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2729,
									"end": 2730,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 2739,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2739,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2739,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2741,
									"end": 2744,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2721,
									"end": 2745,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2717,
									"end": 2754,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2713,
									"end": 2755,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2698,
									"end": 2756,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2683,
									"end": 2757,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2683,
									"end": 2757,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2771,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2570,
									"end": 2771,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2817,
									"end": 2818,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2801,
									"end": 2815,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2815,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2815,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2797,
									"end": 2819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1735,
									"end": 3087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 3087,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1735,
									"end": 3087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43127,
									"end": 43401,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cbe8cf9566417eebb73cad7689f74c7c1e3edc3cb2252cf504f246acf90858264736f6c63430008130033",
									".code": [
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "156E29F6"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43127,
											"end": 43401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2688,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 43255,
											"end": 43398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43255,
											"end": 43398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15182,
											"end": 15186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15206,
											"end": 15243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15323,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15323,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13767,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13795,
											"end": 13816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13795,
											"end": 13816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8536,
											"end": 8538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8577,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 8555,
											"end": 8573,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8555,
											"end": 8573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8587,
											"end": 8649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8735,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8716,
											"end": 8735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13882,
											"end": 13904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13485,
											"end": 13498,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13518,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13511,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13511,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13423,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43331,
											"end": 43349,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43360,
											"end": 43390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 43366,
											"end": 43371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43373,
											"end": 43375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43377,
											"end": 43382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43384,
											"end": 43389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 43360,
											"end": 43390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43360,
											"end": 43390,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 43360,
											"end": 43390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43320,
											"end": 43398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43255,
											"end": 43398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16575,
											"end": 16603,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9315,
											"end": 9336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9372,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 9352,
											"end": 9370,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9352,
											"end": 9370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9345,
											"end": 9375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9529,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9510,
											"end": 9529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9131,
											"end": 9535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16567,
											"end": 16648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16659,
											"end": 16725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16659,
											"end": 16725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16758,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16758,
											"end": 16818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16799,
											"end": 16803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16782,
											"end": 16818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10130,
											"end": 10151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10277,
											"end": 10295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10277,
											"end": 10295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9946,
											"end": 10360,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16736,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16909,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17050,
											"end": 17053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17050,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 17060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17095,
											"end": 17101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17133,
											"end": 17140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17133,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17224,
											"end": 17230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17192,
											"end": 17194,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17196,
											"end": 17200,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17182,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17182,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17179,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17343,
											"end": 17372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17343,
											"end": 17372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17372,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 17062,
											"end": 17065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17425,
											"end": 17429,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17415,
											"end": 17423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17447,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 17401,
											"end": 17448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17448,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 17497,
											"end": 17505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17507,
											"end": 17511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17513,
											"end": 17515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17517,
											"end": 17520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17529,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17531,
											"end": 17535,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 17461,
											"end": 17536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 17461,
											"end": 17536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14259,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14320,
											"end": 14323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 11444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11553,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11638,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11619,
											"end": 11638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11239,
											"end": 11644,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14293,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14436,
											"end": 14444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14436,
											"end": 14451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14422,
											"end": 14452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14422,
											"end": 14452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14485,
											"end": 14504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14555,
											"end": 14563,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14555,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14572,
											"end": 14573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14568,
											"end": 14574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14545,
											"end": 14575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14545,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14526,
											"end": 14542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14526,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14506,
											"end": 14509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14465,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14606,
											"end": 14619,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14078,
											"end": 14627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14078,
											"end": 14627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 11892,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11870,
											"end": 11888,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11870,
											"end": 11888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 11909,
											"end": 11927,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11909,
											"end": 11927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11909,
											"end": 11927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11902,
											"end": 11964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11980,
											"end": 11998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11973,
											"end": 12012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12048,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12029,
											"end": 12048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11649,
											"end": 12054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14795,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14939,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14928,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 15003,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14700,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15323,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15549,
											"end": 15565,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15541,
											"end": 15607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15541,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15640,
											"end": 15700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15681,
											"end": 15685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15083,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15083,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12300,
											"end": 12302,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12339,
											"end": 12373,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 12319,
											"end": 12337,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12319,
											"end": 12337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12390,
											"end": 12408,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12390,
											"end": 12408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12383,
											"end": 12422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12439,
											"end": 12458,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12439,
											"end": 12458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12059,
											"end": 12464,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15618,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15861,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15885,
											"end": 15887,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 15867,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15908,
											"end": 15914,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 15890,
											"end": 15915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15890,
											"end": 15915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 17544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 15826,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15970,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15957,
											"end": 16034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 15957,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 16034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16087,
											"end": 16093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16065,
											"end": 16094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16065,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16158,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 16171,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16202,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16212,
											"end": 16216,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16218,
											"end": 16220,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16222,
											"end": 16224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16226,
											"end": 16232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16234,
											"end": 16238,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16171,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16171,
											"end": 16239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18877,
											"end": 19460,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18877,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18992,
											"end": 19013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18992,
											"end": 19013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12924,
											"end": 12926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 12966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13036,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12975,
											"end": 13037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13046,
											"end": 13077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12722,
											"end": 13119,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 18984,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19151,
											"end": 19158,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19160,
											"end": 19181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19178,
											"end": 19180,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 19160,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 19160,
											"end": 19181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19215,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 19108,
											"end": 19215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19253,
											"end": 19287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19280,
											"end": 19286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19253,
											"end": 19287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19287,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19253,
											"end": 19287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19287,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19287,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19228,
											"end": 19287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19228,
											"end": 19250,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19303,
											"end": 19360,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19404,
											"end": 19412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19426,
											"end": 19433,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19435,
											"end": 19437,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19439,
											"end": 19445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19447,
											"end": 19451,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19373,
											"end": 19403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 19373,
											"end": 19452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33431,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33467,
											"end": 33479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33459,
											"end": 33465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 33451,
											"end": 33480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33451,
											"end": 33480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33502,
											"end": 33503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33498,
											"end": 33503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33498,
											"end": 33503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33491,
											"end": 33503,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33345,
											"end": 33511,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33345,
											"end": 33511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30576,
											"end": 30583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30576,
											"end": 30583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30612,
											"end": 30613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 30608,
											"end": 30613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 30608,
											"end": 30613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30637,
											"end": 30638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30632,
											"end": 30638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13571,
											"end": 13592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13628,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13601,
											"end": 13631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13696,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13640,
											"end": 13697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13714,
											"end": 13732,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13714,
											"end": 13732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13387,
											"end": 13738,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30624,
											"end": 30670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30518,
											"end": 30697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30518,
											"end": 30697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24498,
											"end": 24511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24498,
											"end": 24511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36233,
											"end": 36253,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 25036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24494,
											"end": 25036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 24534,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24586,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24588,
											"end": 24592,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24588,
											"end": 24592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24594,
											"end": 24597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24606,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24599,
											"end": 24606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24612,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24534,
											"end": 24613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 24534,
											"end": 24613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 24534,
											"end": 24613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24530,
											"end": 25025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 24530,
											"end": 25025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24898,
											"end": 24904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24891,
											"end": 24905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24891,
											"end": 24905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15891,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15873,
											"end": 15894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15930,
											"end": 15932,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 15910,
											"end": 15928,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15910,
											"end": 15928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15910,
											"end": 15928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15903,
											"end": 15933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 16003,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15949,
											"end": 15967,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15949,
											"end": 15967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 15967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15942,
											"end": 16004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16020,
											"end": 16038,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16020,
											"end": 16038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16020,
											"end": 16038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16013,
											"end": 16063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16099,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16080,
											"end": 16099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24947,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15689,
											"end": 16105,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 24530,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24663,
											"end": 24727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24752,
											"end": 24802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 24752,
											"end": 24802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 24659,
											"end": 24822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24614,
											"end": 24837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24244,
											"end": 25043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25185,
											"end": 25186,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25117,
											"end": 25133,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25117,
											"end": 25133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25146,
											"end": 25168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25171,
											"end": 25187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25146,
											"end": 25187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25204,
											"end": 25205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25198,
											"end": 25206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25236,
											"end": 25241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25051,
											"end": 25249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 24236,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 23474,
											"end": 24236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23703,
											"end": 23716,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23703,
											"end": 23716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36233,
											"end": 36253,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23699,
											"end": 24229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 23739,
											"end": 23777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23786,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23804,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23806,
											"end": 23810,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23806,
											"end": 23810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 23739,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 23739,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 23739,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23735,
											"end": 24218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 23735,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23857,
											"end": 24015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 23857,
											"end": 24015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23945,
											"end": 23995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23945,
											"end": 23995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2234,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2263,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2376,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2428,
											"end": 2448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2757,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2508,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2672,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2697,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2632,
											"end": 2720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2700,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2945,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2762,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2874,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2841,
											"end": 2897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2877,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2918,
											"end": 2932,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3674,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2950,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3061,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3024,
											"end": 3079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3079,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3024,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3160,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3203,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3160,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3272,
											"end": 3274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3244,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3244,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3423,
											"end": 3458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3458,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3423,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3525,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3601,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3502,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3674,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2950,
											"end": 3674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3679,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3778,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3741,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3876,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3937,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4004,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3937,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4078,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4040,
											"end": 4095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4095,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4040,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 4234,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3679,
											"end": 4234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4481,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4464,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4482,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4446,
											"end": 4499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4499,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4446,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4518,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4518,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4547,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4566,
											"end": 4604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4604,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4566,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4604,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4659,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4739,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4705,
											"end": 4739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4705,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4758,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4819,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4876,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 4904,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4885,
											"end": 4921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4921,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4885,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4995,
											"end": 5002,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 4992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4940,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5003,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4940,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5003,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5045,
											"end": 5054,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5125,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5352,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5369,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5334,
											"end": 5386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5386,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5334,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5478,
											"end": 5512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5510,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5512,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5478,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5599,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5562,
											"end": 5617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5615,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5562,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5652,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5734,
											"end": 5736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5694,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5694,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5806,
											"end": 5808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5778,
											"end": 5809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5809,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5778,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5932,
											"end": 5933,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5928,
											"end": 5938,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5938,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5938,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5956,
											"end": 5975,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5975,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5975,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5953,
											"end": 5992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5992,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5953,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6023,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6023,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6055,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6133,
											"end": 6136,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6114,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6114,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6032,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6205,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6262,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6274,
											"end": 6290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6290,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6381,
											"end": 6388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6368,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6326,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6389,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6326,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6389,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 6395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6835,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6400,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6610,
											"end": 6612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6662,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6730,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6762,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6641,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6826,
											"end": 6829,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6829,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6835,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6400,
											"end": 6835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 7101,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6840,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 6986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7068,
											"end": 7074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 7039,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7171,
											"end": 7177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7235,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7200,
											"end": 7252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7250,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7252,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7200,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7271,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7300,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7271,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7339,
											"end": 7348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7354,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7403,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7383,
											"end": 7404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7405,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7363,
											"end": 7423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7421,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7423,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7363,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7534,
											"end": 7540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7589,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7573,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7590,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7555,
											"end": 7607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7605,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7607,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7555,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7626,
											"end": 7655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7626,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7708,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7697,
											"end": 7706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7674,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7712,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7674,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 8329,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7723,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7915,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7900,
											"end": 7909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7898,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7883,
											"end": 7916,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7933,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7880,
											"end": 7933,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 7931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7933,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7880,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7971,
											"end": 7980,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7952,
											"end": 7981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7952,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7981,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8034,
											"end": 8036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8032,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 8000,
											"end": 8038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8038,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8000,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8038,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8089,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8108,
											"end": 8140,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8180,
											"end": 8189,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8196,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8237,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8238,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8205,
											"end": 8255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8253,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8255,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8205,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8274,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8315,
											"end": 8322,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8274,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 8274,
											"end": 8323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 9126,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8746,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8826,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8821,
											"end": 8833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8833,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 8889,
											"end": 8950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8947,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8935,
											"end": 8941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8950,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 8889,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 8999,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 8959,
											"end": 9120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9053,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9067,
											"end": 9082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9102,
											"end": 9103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 9120,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 8959,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 9120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 9126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 9126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 9126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 9126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9941,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 9540,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9724,
											"end": 9745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9761,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9754,
											"end": 9784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9854,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9916,
											"end": 9935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10365,
											"end": 10492,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10365,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10417,
											"end": 10437,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10461,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10447,
											"end": 10462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10485,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10624,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10497,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10553,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10549,
											"end": 10569,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10539,
											"end": 10570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10593,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10586,
											"end": 10587,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10579,
											"end": 10594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10617,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10610,
											"end": 10611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10629,
											"end": 10764,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10629,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10706,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10689,
											"end": 10706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 10706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10686,
											"end": 10729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10709,
											"end": 10727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10756,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10745,
											"end": 10758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10629,
											"end": 10764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10769,
											"end": 11234,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10769,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10989,
											"end": 10993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 11104,
											"end": 11106,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11093,
											"end": 11102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11052,
											"end": 11108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11108,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 11052,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11148,
											"end": 11154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11144,
											"end": 11166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11128,
											"end": 11137,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11117,
											"end": 11167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11213,
											"end": 11219,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11184,
											"end": 11228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11228,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11184,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11176,
											"end": 11228,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10769,
											"end": 11234,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10769,
											"end": 11234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13252,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13124,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13212,
											"end": 13223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13212,
											"end": 13223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13212,
											"end": 13223,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 13209,
											"end": 13246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 13226,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 13226,
											"end": 13244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13257,
											"end": 13382,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 13257,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13343,
											"end": 13353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13343,
											"end": 13353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13343,
											"end": 13353,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 13340,
											"end": 13376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13356,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 13356,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 13356,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13743,
											"end": 14570,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13743,
											"end": 14570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14140,
											"end": 14155,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14140,
											"end": 14155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14140,
											"end": 14155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14172,
											"end": 14190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14172,
											"end": 14190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14102,
											"end": 14105,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14239,
											"end": 14241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14224,
											"end": 14242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14217,
											"end": 14248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14217,
											"end": 14248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14217,
											"end": 14248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14065,
											"end": 14069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14271,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14271,
											"end": 14328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14271,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14271,
											"end": 14328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14271,
											"end": 14328,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14271,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14376,
											"end": 14385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14368,
											"end": 14374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14361,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14348,
											"end": 14357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 14447,
											"end": 14453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14439,
											"end": 14445,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14410,
											"end": 14454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14454,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 14410,
											"end": 14454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14491,
											"end": 14513,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 14488,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14474,
											"end": 14483,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14470,
											"end": 14489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14557,
											"end": 14563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14555,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 14531,
											"end": 14564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14564,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14531,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14564,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 13743,
											"end": 14570,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 14570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14824,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14575,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14644,
											"end": 14650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14697,
											"end": 14699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14685,
											"end": 14694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14676,
											"end": 14683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14668,
											"end": 14700,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14715,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 14665,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14745,
											"end": 14754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14739,
											"end": 14755,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14788,
											"end": 14793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 14764,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14829,
											"end": 15008,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14829,
											"end": 15008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14906,
											"end": 14907,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 14888,
											"end": 14904,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14885,
											"end": 14908,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 15002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 14882,
											"end": 15002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 14953,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14931,
											"end": 14954,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14989,
											"end": 14990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 14981,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 15002,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 14882,
											"end": 15002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14829,
											"end": 15008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14829,
											"end": 15008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15076,
											"end": 15092,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15073,
											"end": 15099,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 15070,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15130,
											"end": 15139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15201,
											"end": 15217,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15197,
											"end": 15222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15194,
											"end": 15195,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15130,
											"end": 15139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15173,
											"end": 15223,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15292,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15382,
											"end": 15384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15379,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15367,
											"end": 15373,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15363,
											"end": 15380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15385,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15347,
											"end": 15353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15344,
											"end": 15358,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15386,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15338,
											"end": 15396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15338,
											"end": 15396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 15338,
											"end": 15396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15338,
											"end": 15396,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 15338,
											"end": 15396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15424,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15456,
											"end": 15466,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15481,
											"end": 15487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15478,
											"end": 15492,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 15475,
											"end": 15502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15502,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 15475,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15579,
											"end": 15581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 15576,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15554,
											"end": 15558,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15550,
											"end": 15577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15539,
											"end": 15543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15530,
											"end": 15536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15521,
											"end": 15537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15517,
											"end": 15544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15514,
											"end": 15583,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15511,
											"end": 15593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15511,
											"end": 15593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 15511,
											"end": 15593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15511,
											"end": 15593,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 15511,
											"end": 15593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 15653,
											"end": 15657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15644,
											"end": 15650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15636,
											"end": 15642,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15632,
											"end": 15651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15622,
											"end": 15626,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15602,
											"end": 15659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15659,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 15602,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15013,
											"end": 15684,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15013,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16110,
											"end": 16514,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 16110,
											"end": 16514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16312,
											"end": 16314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16351,
											"end": 16353,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 16331,
											"end": 16349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16331,
											"end": 16349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16331,
											"end": 16349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16324,
											"end": 16354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16424,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16370,
											"end": 16388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16456,
											"end": 16458,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16441,
											"end": 16459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16441,
											"end": 16459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16504,
											"end": 16507,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16489,
											"end": 16508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16489,
											"end": 16508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16110,
											"end": 16514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16519,
											"end": 17080,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 16519,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16816,
											"end": 16831,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 16831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16798,
											"end": 16832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16798,
											"end": 16832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16863,
											"end": 16865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16848,
											"end": 16866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 16866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 16884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16900,
											"end": 16918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16893,
											"end": 16927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16893,
											"end": 16927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16893,
											"end": 16927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16958,
											"end": 16960,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16943,
											"end": 16961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16943,
											"end": 16961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 16970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 16970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 16970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16781,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17001,
											"end": 17004,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16986,
											"end": 17005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16986,
											"end": 17005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16979,
											"end": 17011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16979,
											"end": 17011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16979,
											"end": 17011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 17028,
											"end": 17074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17054,
											"end": 17073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17054,
											"end": 17073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17028,
											"end": 17074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17074,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 17028,
											"end": 17074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17074,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 16519,
											"end": 17080,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16519,
											"end": 17080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572"
									}
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"TTT_ERC1155Token-Jason.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TTT_ERC1155Token-Jason.sol\":\"TTTERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TTT_ERC1155Token-Jason.sol\":{\"keccak256\":\"0xdeddc96a9007960b7cd7ab14295c6e752d070b8cac42d1ca3de151eb3f9d4cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e1a2b7a1743f9c094d8360c7570c22f6dc61d92aee03eea61753169efaec9d\",\"dweb:/ipfs/Qma531WDLjEg22QjFAtypN4efEfTktuZvGZ9XCGkNP9RmS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "TTT_ERC1155Token-Jason.sol:TTTERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 432,
								"contract": "TTT_ERC1155Token-Jason.sol:TTTERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 438,
								"contract": "TTT_ERC1155Token-Jason.sol:TTTERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 440,
								"contract": "TTT_ERC1155Token-Jason.sol:TTTERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> TTT_ERC1155Token-Jason.sol:64:5:\n   |\n64 |     constructor () internal {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2531,
					"file": "TTT_ERC1155Token-Jason.sol",
					"start": 2310
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> TTT_ERC1155Token-Jason.sol:263:5:\n    |\n263 |     constructor () internal {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9650,
					"file": "TTT_ERC1155Token-Jason.sol",
					"start": 9487
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> TTT_ERC1155Token-Jason.sol:349:5:\n    |\n349 |     constructor (string memory uri_) public {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 13012,
					"file": "TTT_ERC1155Token-Jason.sol",
					"start": 12650
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TTT_ERC1155Token-Jason.sol": {
				"ast": {
					"absolutePath": "TTT_ERC1155Token-Jason.sol",
					"exportedSymbols": {
						"Address": [
							2095
						],
						"Context": [
							35
						],
						"ERC1155": [
							1410
						],
						"ERC165": [
							88
						],
						"IERC1155": [
							207
						],
						"IERC1155MetadataURI": [
							219
						],
						"IERC1155Receiver": [
							1448
						],
						"IERC165": [
							11
						],
						"Ownable": [
							411
						],
						"SafeMath": [
							1801
						],
						"Strings": [
							304
						],
						"TTTERC1155": [
							2125
						]
					},
					"id": 2126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "308:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "607:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "622:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "984:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1009:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1002:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:6:0"
									},
									"scope": 11,
									"src": "975:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "597:457:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "Context",
							"nameLocation": "1586:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "1671:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1697:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1701:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 16,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1689:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 15,
												"id": 21,
												"nodeType": "Return",
												"src": "1682:26:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1610:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:17:0"
									},
									"scope": 35,
									"src": "1601:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1789:168:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "1800:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$35",
														"typeString": "contract Context"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "1800:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 30,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1941:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1945:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1941:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 27,
												"id": 32,
												"nodeType": "Return",
												"src": "1934:15:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1733:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1775:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1775:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:14:0"
									},
									"scope": 35,
									"src": "1724:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2126,
							"src": "1568:392:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 36,
										"name": "IERC165",
										"nameLocations": [
											"1992:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1992:7:0"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88,
								11
							],
							"name": "ERC165",
							"nameLocation": "1982:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nameLocation": "2117:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "2093:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 38,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "2093:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783031666663396137",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2140:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2159:84:0",
										"text": " @dev Mapping of interface ids to whether or not it's supported."
									},
									"id": 45,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nameLocation": "2281:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "2249:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 42,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "2257:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "2249:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2267:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2334:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2502:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 48,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2483:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2483:40:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2322:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:0"
									},
									"scope": 88,
									"src": "2310:221:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2779:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 62,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "2797:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 64,
													"indexExpression": {
														"id": 63,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2818:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2797:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "2790:40:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2539:143:0",
										"text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2697:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2755:8:0"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2722:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2715:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 55,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:20:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2773:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2772:6:0"
									},
									"scope": 88,
									"src": "2688:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3310:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "3329:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30786666666666666666",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "3329:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3356:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3321:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "3321:66:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 80,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3398:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 82,
														"indexExpression": {
															"id": 81,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3419:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3398:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3434:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3398:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "3398:40:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2846:393:0",
										"text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nameLocation": "3254:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3280:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3273:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 69,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3310:0:0"
									},
									"scope": 88,
									"src": "3245:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2126,
							"src": "1964:1485:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 90,
										"name": "IERC165",
										"nameLocations": [
											"3649:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "3649:7:0"
									},
									"id": 91,
									"nodeType": "InheritanceSpecifier",
									"src": "3649:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "3455:170:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 207,
							"linearizedBaseContracts": [
								207,
								11
							],
							"name": "IERC1155",
							"nameLocation": "3637:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3664:123:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 104,
									"name": "TransferSingle",
									"nameLocation": "3799:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3830:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3814:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3856:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3840:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3878:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3862:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3890:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3882:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:95:0"
									},
									"src": "3793:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3917:147:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 119,
									"name": "TransferBatch",
									"nameLocation": "4076:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4090:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4132:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4116:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4154:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4138:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4168:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "4158:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4173:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 115,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 116,
													"nodeType": "ArrayTypeName",
													"src": "4173:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:101:0"
									},
									"src": "4070:121:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "4199:150:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 128,
									"name": "ApprovalForAll",
									"nameLocation": "4361:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4376:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4417:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4401:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4432:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:66:0"
									},
									"src": "4355:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4450:349:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 135,
									"name": "URI",
									"nameLocation": "4811:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4822:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4815:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4845:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4829:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4814:34:0"
									},
									"src": "4805:44:0"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4857:179:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5051:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:29:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5113:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:9:0"
									},
									"scope": 207,
									"src": "5042:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5130:194:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "5339:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "5373:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5354:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 147,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5354:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 148,
													"nodeType": "ArrayTypeName",
													"src": "5354:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5402:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5383:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 150,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 151,
													"nodeType": "ArrayTypeName",
													"src": "5383:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5353:53:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5430:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 155,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5429:18:0"
									},
									"scope": 207,
									"src": "5330:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5456:256:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5727:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5753:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5745:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5763:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5744:33:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5786:0:0"
									},
									"scope": 207,
									"src": "5718:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5795:139:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5949:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5991:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5983:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5965:35:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6024:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6024:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6023:6:0"
									},
									"scope": 207,
									"src": "5940:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "6038:571:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6624:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6649:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6641:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6655:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6687:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6679:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6710:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6695:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6640:75:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6724:0:0"
									},
									"scope": 207,
									"src": "6615:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "6733:400:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "7148:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7170:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7192:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7184:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7215:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7196:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 196,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 197,
													"nodeType": "ArrayTypeName",
													"src": "7196:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7220:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 199,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"nodeType": "ArrayTypeName",
													"src": "7220:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7263:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7248:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7248:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7169:99:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7277:0:0"
									},
									"scope": 207,
									"src": "7139:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "3627:3654:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 209,
										"name": "IERC1155",
										"nameLocations": [
											"7519:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "7519:8:0"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "7519:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 208,
								"nodeType": "StructuredDocumentation",
								"src": "7285:199:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219,
								207,
								11
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "7496:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "7535:197:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "7747:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7759:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7751:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:12:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7786:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7785:15:0"
									},
									"scope": 219,
									"src": "7738:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "7486:318:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "7810:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "Strings",
							"nameLocation": "7856:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "8032:675:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 228,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "8238:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8238:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "8234:53:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "8250:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8272:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 227,
															"id": 232,
															"nodeType": "Return",
															"src": "8265:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "8305:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8297:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"id": 237,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "8312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8297:20:0"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "8336:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8328:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"nodeType": "VariableDeclarationStatement",
												"src": "8328:14:0"
											},
											{
												"body": {
													"id": 252,
													"nodeType": "Block",
													"src": "8371:60:0",
													"statements": [
														{
															"expression": {
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8386:8:0",
																"subExpression": {
																	"id": 245,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "8386:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "8386:8:0"
														},
														{
															"expression": {
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 248,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8409:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8417:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "8409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "8409:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 242,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8360:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8368:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8360:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "WhileStatement",
												"src": "8353:78:0"
											},
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "8454:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8441:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 254,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"id": 258,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8463:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 256,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8463:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8441:39:0"
											},
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "8499:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "8491:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "digits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "8507:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8516:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8507:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8491:26:0"
											},
											{
												"expression": {
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 267,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8528:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 268,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "8535:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8528:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "8528:12:0"
											},
											{
												"body": {
													"id": 295,
													"nodeType": "Block",
													"src": "8569:99:0",
													"statements": [
														{
															"expression": {
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 274,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "8584:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 277,
																	"indexExpression": {
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "8591:7:0",
																		"subExpression": {
																			"id": 275,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 262,
																			"src": "8591:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8584:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8615:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 283,
																							"name": "temp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 236,
																							"src": "8620:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"hexValue": "3130",
																							"id": 284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8627:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "8620:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8615:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8609:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 280,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8609:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8609:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8602:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 278,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "8602:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8602:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "8584:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 290,
															"nodeType": "ExpressionStatement",
															"src": "8584:47:0"
														},
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 291,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8646:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8654:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "8646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "8646:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8558:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8566:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8558:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "WhileStatement",
												"src": "8551:117:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "8692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8685:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 297,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8685:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8685:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 301,
												"nodeType": "Return",
												"src": "8678:21:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7871:84:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` representation."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "7970:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "7979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7978:15:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "8017:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8016:15:0"
									},
									"scope": 304,
									"src": "7961:746:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2126,
							"src": "7848:862:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 306,
										"name": "Context",
										"nameLocations": [
											"9250:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "9250:7:0"
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "9250:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "8714:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 411,
							"linearizedBaseContracts": [
								411,
								35
							],
							"name": "Ownable",
							"nameLocation": "9239:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "9281:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "9265:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 308,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9265:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 315,
									"name": "OwnershipTransferred",
									"nameLocation": "9302:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "9339:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "9323:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9370:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "9354:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9322:57:0"
									},
									"src": "9296:84:0"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "9511:139:0",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "9530:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "9522:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9522:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 321,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9542:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9542:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9522:32:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "9565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9565:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "9565:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9620:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9620:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9620:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 333,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "9632:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "9599:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9599:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "EmitStatement",
												"src": "9594:48:0"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9388:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 337,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9499:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9511:0:0"
									},
									"scope": 411,
									"src": "9487:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "9786:32:0",
										"statements": [
											{
												"expression": {
													"id": 343,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "9804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 342,
												"id": 344,
												"nodeType": "Return",
												"src": "9797:13:0"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "9658:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "9740:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9745:2:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "9777:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9776:9:0"
									},
									"scope": 411,
									"src": "9731:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "9932:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 350,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "9951:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9951:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 352,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "9962:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9962:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9951:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9976:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9943:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "9943:68:0"
											},
											{
												"id": 358,
												"nodeType": "PlaceholderStatement",
												"src": "10022:1:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "9826:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 360,
									"name": "onlyOwner",
									"nameLocation": "9920:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9929:2:0"
									},
									"src": "9911:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "10436:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 367,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "10473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10489:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10481:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10481:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10481:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 366,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "10452:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10452:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "10447:45:0"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "10503:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10520:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10512:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10512:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10503:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "10503:19:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "10039:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 363,
												"name": "onlyOwner",
												"nameLocations": [
													"10426:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "10426:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10426:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "10391:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10436:0:0"
									},
									"scope": 411,
									"src": "10382:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "10755:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10774:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10794:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 392,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10786:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10786:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10774:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10798:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10766:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "10766:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 401,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "10876:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "10884:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "10855:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10855:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "EmitStatement",
												"src": "10850:43:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "10904:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 406,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "10913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10904:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "10904:17:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "10538:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyOwner",
												"nameLocations": [
													"10745:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "10745:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10745:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "10694:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10720:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "10712:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10711:18:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10755:0:0"
									},
									"scope": 411,
									"src": "10685:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2126,
							"src": "9221:1711:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"11182:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "11182:7:0"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "11182:7:0"
								},
								{
									"baseName": {
										"id": 415,
										"name": "ERC165",
										"nameLocations": [
											"11191:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 88,
										"src": "11191:6:0"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "11191:6:0"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC1155",
										"nameLocations": [
											"11199:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "11199:8:0"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "11199:8:0"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"11209:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 219,
										"src": "11209:19:0"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "11209:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "10936:224:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								219,
								207,
								88,
								11,
								35
							],
							"name": "ERC1155",
							"nameLocation": "11171:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 423,
									"libraryName": {
										"id": 421,
										"name": "SafeMath",
										"nameLocations": [
											"11242:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "11242:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11236:27:0",
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11255:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 426,
									"libraryName": {
										"id": 424,
										"name": "Address",
										"nameLocations": [
											"11275:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2095,
										"src": "11275:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11269:26:0",
									"typeName": {
										"id": 425,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11287:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11410:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11353:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 427,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11362:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11353:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 430,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11381:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11373:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 429,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "11533:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11479:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 437,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11488:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11479:45:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 436,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 434,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11507:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11499:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 435,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11518:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "11690:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "11675:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 439,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11675:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 443,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155",
									"nameLocation": "12404:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "12380:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 441,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "12380:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 442,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12428:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 446,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nameLocation": "12548:34:0",
									"nodeType": "VariableDeclaration",
									"scope": 1410,
									"src": "12524:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 444,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "12524:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783065383933343163",
										"id": 445,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12585:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "12690:322:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12709:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 452,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "12701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12701:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "12701:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "12825:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 456,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "12806:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12806:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "12806:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "12969:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 460,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "12950:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12950:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12950:54:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "12604:40:0",
										"text": " @dev See {_setURI}."
									},
									"id": 465,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "12677:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "12663:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:20:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12690:0:0"
									},
									"scope": 1410,
									"src": "12650:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										218
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "13500:30:0",
										"statements": [
											{
												"expression": {
													"id": 474,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "13518:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "13511:11:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "13020:397:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "13432:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 470,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13467:8:0"
									},
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "13436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13435:9:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "13485:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13484:15:0"
									},
									"scope": 1410,
									"src": "13423:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "13776:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "13795:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13814:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13806:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13806:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13795:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13818:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13787:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13787:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "13882:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "13892:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13882:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 502,
													"indexExpression": {
														"id": 501,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "13896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13882:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 503,
												"nodeType": "Return",
												"src": "13875:29:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "13538:137:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13690:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 484,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13749:8:0"
									},
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13700:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13725:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13717:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13699:29:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "13767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13766:9:0"
									},
									"scope": 1410,
									"src": "13681:231:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "14282:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 520,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "14301:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14310:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14301:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 522,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "14320:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14324:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14320:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14301:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14332:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14293:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14293:83:0"
											},
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "14406:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "14389:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 530,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14389:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 531,
															"nodeType": "ArrayTypeName",
															"src": "14389:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 536,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "14436:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14445:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14436:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14422:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 533,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14426:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 534,
															"nodeType": "ArrayTypeName",
															"src": "14426:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14422:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14389:63:0"
											},
											{
												"body": {
													"id": 564,
													"nodeType": "Block",
													"src": "14511:76:0",
													"statements": [
														{
															"expression": {
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 551,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "14526:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 553,
																	"indexExpression": {
																		"id": 552,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "14540:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14526:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 555,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "14555:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 557,
																			"indexExpression": {
																				"id": 556,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "14564:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14555:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 558,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "14568:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 560,
																			"indexExpression": {
																				"id": 559,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "14572:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14568:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 554,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "14545:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14545:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14526:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "14526:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 544,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "14485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 545,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "14489:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14498:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14489:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14485:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"initializationExpression": {
													"assignments": [
														541
													],
													"declarations": [
														{
															"constant": false,
															"id": 541,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14478:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 565,
															"src": "14470:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 540,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 543,
													"initialValue": {
														"hexValue": "30",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14470:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "14506:3:0",
														"subExpression": {
															"id": 548,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "14508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 550,
													"nodeType": "ExpressionStatement",
													"src": "14506:3:0"
												},
												"nodeType": "ForStatement",
												"src": "14465:122:0"
											},
											{
												"expression": {
													"id": 566,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "14606:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 518,
												"id": 567,
												"nodeType": "Return",
												"src": "14599:20:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "13920:152:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "14087:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14232:8:0"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "14129:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14112:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 507,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14112:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 508,
													"nodeType": "ArrayTypeName",
													"src": "14112:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14165:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14148:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 510,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 511,
													"nodeType": "ArrayTypeName",
													"src": "14148:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14101:74:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "14259:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "14259:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14258:18:0"
									},
									"scope": 1410,
									"src": "14078:549:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "14784:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 579,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14803:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14803:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 581,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "14819:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14803:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14829:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14795:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "14795:78:0"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 586,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "14886:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 590,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 587,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14905:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14905:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14886:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 591,
														"indexExpression": {
															"id": 589,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "14919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14886:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "14931:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14886:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "14886:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 596,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "14970:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14970:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 598,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "14984:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 595,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "14955:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14955:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "14950:53:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "14635:59:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "14709:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14775:8:0"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14735:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "14727:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "14750:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "14745:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14726:33:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14784:0:0"
									},
									"scope": 1410,
									"src": "14700:311:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "15188:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 614,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "15206:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 615,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "15225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15206:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 618,
													"indexExpression": {
														"id": 617,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "15234:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15206:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 619,
												"nodeType": "Return",
												"src": "15199:44:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "15019:58:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "15092:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 610,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15164:8:0"
									},
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15117:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15109:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15134:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15126:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15108:35:0"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15182:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15181:6:0"
									},
									"scope": 1410,
									"src": "15083:168:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										190
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "15530:717:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "15549:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15563:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15555:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15555:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15549:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15567:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15541:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15541:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 647,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "15640:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 648,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "15648:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15648:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "15640:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "15681:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 653,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "15687:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15687:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 651,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "15664:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15664:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15640:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15715:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15618:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "15618:151:0"
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "15790:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "15782:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 660,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15782:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 662,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "15801:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15801:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15782:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 666,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "15847:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "15857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "15863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 670,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "15885:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 669,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "15867:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15867:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 673,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "15908:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 672,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "15890:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15890:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "15917:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 665,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "15826:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15826:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "15826:96:0"
											},
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 678,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "15935:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 681,
															"indexExpression": {
																"id": 679,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "15945:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15935:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "15949:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15935:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "15981:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15989:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 683,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "15957:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 685,
																	"indexExpression": {
																		"id": 684,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "15967:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15957:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 686,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "15971:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15957:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15977:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1752,
															"src": "15957:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15957:77:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15935:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "15935:99:0"
											},
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 694,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "16045:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 697,
															"indexExpression": {
																"id": 695,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "16055:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16045:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 698,
														"indexExpression": {
															"id": 696,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16059:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16045:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "16087:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 699,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "16065:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 701,
																	"indexExpression": {
																		"id": 700,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "16075:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16065:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 703,
																"indexExpression": {
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "16079:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16065:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16083:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1628,
															"src": "16065:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16065:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16045:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "16045:49:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 710,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "16127:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "16137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16143:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "16112:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16112:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "EmitStatement",
												"src": "16107:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "16202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "16212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "16222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 722,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "16234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 717,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "16171:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16171:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "16171:68:0"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "15259:58:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15332:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 634,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15516:8:0"
									},
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15359:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15390:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15382:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15411:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15403:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15432:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15424:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "15449:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15449:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15348:125:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15530:0:0"
									},
									"scope": 1410,
									"src": "15323:924:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										206
									],
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "16556:988:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 745,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "16575:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16579:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16575:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 747,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "16589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16597:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16589:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16575:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16605:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16567:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16567:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16567:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "16667:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16681:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16673:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16673:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16673:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16667:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16685:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16659:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "16659:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 764,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "16758:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 765,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "16766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16766:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "16758:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 769,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "16799:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 770,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "16805:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16805:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 768,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "16782:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16782:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16758:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16833:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16736:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "16736:160:0"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "16917:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "16909:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 777,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16909:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 779,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "16928:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16928:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16909:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "16974:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "16984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "16990:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "16994:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 787,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "16999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 788,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "17008:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "16953:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16953:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "16953:60:0"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "17067:317:0",
													"statements": [
														{
															"assignments": [
																803
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 803,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "17090:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "17082:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17082:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 807,
															"initialValue": {
																"baseExpression": {
																	"id": 804,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "17095:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "17099:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17095:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17082:19:0"
														},
														{
															"assignments": [
																809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 809,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "17124:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "17116:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 808,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17116:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 813,
															"initialValue": {
																"baseExpression": {
																	"id": 810,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "17133:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"id": 811,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "17141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17133:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17116:27:0"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 814,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "17160:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 817,
																		"indexExpression": {
																			"id": 815,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "17170:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17160:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 818,
																	"indexExpression": {
																		"id": 816,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "17174:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17160:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 825,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "17224:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17249:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 819,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "17182:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 821,
																				"indexExpression": {
																					"id": 820,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "17192:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "17182:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 730,
																				"src": "17196:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17182:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17202:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1752,
																		"src": "17182:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17182:126:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17160:148:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "17160:148:0"
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 830,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "17323:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 833,
																		"indexExpression": {
																			"id": 831,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "17333:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17323:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 834,
																	"indexExpression": {
																		"id": 832,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "17337:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17323:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 841,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "17365:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 835,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "17343:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 837,
																				"indexExpression": {
																					"id": 836,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "17353:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "17343:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 839,
																			"indexExpression": {
																				"id": 838,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "17357:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17343:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17361:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1628,
																		"src": "17343:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17343:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17323:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "17323:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "17046:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 796,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17050:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17054:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17050:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17046:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														792
													],
													"declarations": [
														{
															"constant": false,
															"id": 792,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17039:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "17031:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 791,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 794,
													"initialValue": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17043:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17031:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17062:3:0",
														"subExpression": {
															"id": 799,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "17064:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 801,
													"nodeType": "ExpressionStatement",
													"src": "17062:3:0"
												},
												"nodeType": "ForStatement",
												"src": "17026:358:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "17415:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "17431:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17435:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "17401:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17401:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "17396:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "17497:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "17513:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17517:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "17531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "17461:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17461:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "17461:75:0"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "16255:63:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "16333:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16542:8:0"
									},
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16373:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16396:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16388:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16426:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16409:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 734,
													"nodeType": "ArrayTypeName",
													"src": "16409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16457:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16440:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "16440:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "16475:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16354:145:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16556:0:0"
									},
									"scope": 1410,
									"src": "16324:1220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "18444:32:0",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "18455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "18462:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18455:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "18455:13:0"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "17552:830:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "18397:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "18419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "18405:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18404:22:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18444:0:0"
									},
									"scope": 1410,
									"src": "18388:88:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "18973:487:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "18992:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19003:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19003:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18992:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19015:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18984:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "18984:67:0"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "19072:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "19064:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19064:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "19083:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19083:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19064:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19139:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19139:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "19178:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "19160:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19160:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "19201:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "19183:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19183:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "19210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "19108:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19108:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "19108:107:0"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "19228:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "19238:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19228:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19228:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 930,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19280:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 924,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "19253:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 926,
																	"indexExpression": {
																		"id": 925,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "19263:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19253:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 928,
																"indexExpression": {
																	"id": 927,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "19267:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19253:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19276:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1628,
															"src": "19253:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19253:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19228:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "19228:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 935,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19336:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19328:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19328:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19328:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "19349:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "19353:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "19303:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19303:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "EmitStatement",
												"src": "19298:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "19404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19422:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19414:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19414:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19414:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "19435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 953,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "19439:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 954,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "19447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 945,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "19373:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19373:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "19373:79:0"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "18484:387:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18886:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18900:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "18917:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18909:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18950:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "18937:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18937:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18891:64:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18973:0:0"
									},
									"scope": 1410,
									"src": "18877:583:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "19932:599:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "19951:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19965:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19957:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19957:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19957:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19951:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19969:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19943:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "19943:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 983,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "20024:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20028:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "20024:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 985,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "20038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20046:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "20038:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20024:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20054:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20016:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "20016:81:0"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "20118:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "20110:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20110:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "20129:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20129:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20110:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20175:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20185:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20185:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20197:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20201:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1004,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "20215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 996,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "20154:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20154:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "20154:66:0"
											},
											{
												"body": {
													"id": 1040,
													"nodeType": "Block",
													"src": "20271:88:0",
													"statements": [
														{
															"expression": {
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1019,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "20286:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1024,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1020,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "20296:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1022,
																			"indexExpression": {
																				"id": 1021,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "20300:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20296:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20286:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1025,
																	"indexExpression": {
																		"id": 1023,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "20304:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20286:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1030,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "20325:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1034,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1031,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "20335:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1033,
																					"indexExpression": {
																						"id": 1032,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1009,
																						"src": "20339:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "20335:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "20325:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1036,
																			"indexExpression": {
																				"id": 1035,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "20343:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20325:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1026,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "20310:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1028,
																			"indexExpression": {
																				"id": 1027,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "20318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20310:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20321:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1628,
																		"src": "20310:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20310:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20286:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "20286:61:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "20250:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1013,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20254:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20258:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20254:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20250:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"initializationExpression": {
													"assignments": [
														1009
													],
													"declarations": [
														{
															"constant": false,
															"id": 1009,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20243:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1041,
															"src": "20238:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1008,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "20238:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1011,
													"initialValue": {
														"hexValue": "30",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20247:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20238:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "20266:3:0",
														"subExpression": {
															"id": 1016,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "20266:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ExpressionStatement",
													"src": "20266:3:0"
												},
												"nodeType": "ForStatement",
												"src": "20233:126:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1043,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20390:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20400:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20400:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20400:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20412:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20416:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1050,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1042,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "20376:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20376:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "20371:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "20478:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20496:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20488:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20488:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "20500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "20504:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1061,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1062,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "20518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1053,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "20442:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20442:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "20442:81:0"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "19468:342:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "19825:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19844:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19836:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "19865:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19848:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 962,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 963,
													"nodeType": "ArrayTypeName",
													"src": "19848:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "19887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19870:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 965,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 966,
													"nodeType": "ArrayTypeName",
													"src": "19870:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "19896:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19835:79:0"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19932:0:0"
									},
									"scope": 1410,
									"src": "19816:715:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "20867:474:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "20886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20905:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20897:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20897:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20886:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20909:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20878:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "20878:69:0"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "20968:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "20960:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1086,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20960:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1088,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "20979:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20979:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20960:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "21025:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21052:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21044:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21044:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1099,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "21074:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1098,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "21056:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21056:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1102,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "21097:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1101,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "21079:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21079:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1091,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "21004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21004:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "21004:105:0"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1107,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "21122:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1110,
															"indexExpression": {
																"id": 1108,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "21132:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21122:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1109,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21122:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "21188:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21209:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																},
																"value": "ERC1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1112,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "21147:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1114,
																	"indexExpression": {
																		"id": 1113,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "21157:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21147:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "21161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21147:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21170:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1752,
															"src": "21147:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21147:111:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21122:136:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "21122:136:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1124,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "21291:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "21301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21318:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21310:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21310:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "21322:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "21326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "21276:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21276:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "EmitStatement",
												"src": "21271:62:0"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "20539:245:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "20799:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "20830:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20822:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20842:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "20834:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20804:45:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20867:0:0"
									},
									"scope": 1410,
									"src": "20790:551:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "21646:619:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "21665:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21684:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21676:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21676:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21676:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21665:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21688:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21657:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "21657:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1158,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "21745:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21749:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21745:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1160,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "21759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21767:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21759:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21745:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21775:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21737:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "21737:81:0"
											},
											{
												"assignments": [
													1167
												],
												"declarations": [
													{
														"constant": false,
														"id": 1167,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "21839:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "21831:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21831:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1168,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "21850:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21850:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21831:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "21896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "21906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21923:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21915:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21915:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1178,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "21927:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1179,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "21932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21941:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1171,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "21875:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21875:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "21875:69:0"
											},
											{
												"body": {
													"id": 1216,
													"nodeType": "Block",
													"src": "21995:187:0",
													"statements": [
														{
															"expression": {
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1194,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "22010:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1199,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1195,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "22020:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1197,
																			"indexExpression": {
																				"id": 1196,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "22024:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22020:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22010:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1200,
																	"indexExpression": {
																		"id": 1198,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "22028:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22010:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1209,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "22088:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1211,
																			"indexExpression": {
																				"id": 1210,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "22096:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22088:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22117:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1201,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "22039:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1205,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1202,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "22049:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1204,
																					"indexExpression": {
																						"id": 1203,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1184,
																						"src": "22053:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "22049:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "22039:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1207,
																			"indexExpression": {
																				"id": 1206,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "22057:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22039:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22066:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1752,
																		"src": "22039:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22039:131:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22010:160:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "22010:160:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "21974:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1188,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "21978:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21982:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21978:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21974:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"initializationExpression": {
													"assignments": [
														1184
													],
													"declarations": [
														{
															"constant": false,
															"id": 1184,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21967:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1217,
															"src": "21962:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1183,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "21962:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1186,
													"initialValue": {
														"hexValue": "30",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21971:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21962:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21990:3:0",
														"subExpression": {
															"id": 1191,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "21990:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1193,
													"nodeType": "ExpressionStatement",
													"src": "21990:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21957:225:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1219,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "22213:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22232:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22232:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "22244:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1226,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "22249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1218,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "22199:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22199:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "EmitStatement",
												"src": "22194:63:0"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "21349:189:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "21553:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "21598:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21581:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1139,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1140,
													"nodeType": "ArrayTypeName",
													"src": "21581:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "21620:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "21603:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1142,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1143,
													"nodeType": "ArrayTypeName",
													"src": "21603:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21563:65:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21646:0:0"
									},
									"scope": 1410,
									"src": "21544:721:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "23463:3:0",
										"statements": []
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "22273:942:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "23230:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23296:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23288:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23319:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23311:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "23349:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23332:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1238,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1239,
													"nodeType": "ArrayTypeName",
													"src": "23332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "23380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23363:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1241,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1242,
													"nodeType": "ArrayTypeName",
													"src": "23363:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23411:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "23398:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23398:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23250:172:0"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23463:0:0"
									},
									"scope": 1410,
									"src": "23221:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "23688:548:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1264,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "23703:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23706:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "23703:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23703:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "23699:530:0",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "23720:509:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1293,
																		"nodeType": "Block",
																		"src": "23838:192:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1280,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "23861:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1282,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "23890:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1281,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1448,
																									"src": "23873:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1283,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23873:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "23894:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1429,
																							"src": "23873:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "23912:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "23873:47:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "23861:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1292,
																				"nodeType": "IfStatement",
																				"src": "23857:158:0",
																				"trueBody": {
																					"id": 1291,
																					"nodeType": "Block",
																					"src": "23922:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1288,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "23952:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1287,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "23945:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1289,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23945:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1290,
																							"nodeType": "ExpressionStatement",
																							"src": "23945:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1294,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1279,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1278,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "23828:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1294,
																				"src": "23821:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1277,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "23821:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "23820:17:0"
																	},
																	"src": "23812:218:0"
																},
																{
																	"block": {
																		"id": 1302,
																		"nodeType": "Block",
																		"src": "24065:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1299,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1296,
																							"src": "24091:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1298,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24084:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24084:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1301,
																				"nodeType": "ExpressionStatement",
																				"src": "24084:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1303,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1297,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1296,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "24057:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1303,
																				"src": "24043:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1295,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "24043:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24042:22:0"
																	},
																	"src": "24031:83:0"
																},
																{
																	"block": {
																		"id": 1308,
																		"nodeType": "Block",
																		"src": "24121:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1305,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24147:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1304,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24140:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24140:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1307,
																				"nodeType": "ExpressionStatement",
																				"src": "24140:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1309,
																	"nodeType": "TryCatchClause",
																	"src": "24115:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1271,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "23778:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "23788:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "23794:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1274,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "23798:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1275,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "23806:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1268,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "23756:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1267,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "23739:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23739:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23760:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "23739:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23739:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1310,
															"nodeType": "TryStatement",
															"src": "23735:483:0"
														}
													]
												}
											}
										]
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "23483:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23532:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23524:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23574:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "23603:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23595:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23654:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "23641:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23641:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23513:152:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23688:0:0"
									},
									"scope": 1410,
									"src": "23474:762:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "24483:560:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "24498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24501:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1819,
														"src": "24498:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24498:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "24494:542:0",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "24515:521:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1360,
																		"nodeType": "Block",
																		"src": "24640:197:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1347,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1345,
																						"src": "24663:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1349,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1320,
																										"src": "24692:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1348,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1448,
																									"src": "24675:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1350,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24675:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1351,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "24696:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1447,
																							"src": "24675:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "24719:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "24675:52:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "24663:64:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1359,
																				"nodeType": "IfStatement",
																				"src": "24659:163:0",
																				"trueBody": {
																					"id": 1358,
																					"nodeType": "Block",
																					"src": "24729:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1355,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "24759:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1354,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "24752:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1356,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24752:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1357,
																							"nodeType": "ExpressionStatement",
																							"src": "24752:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1361,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1346,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1345,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "24630:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "24623:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1344,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "24623:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24622:17:0"
																	},
																	"src": "24614:223:0"
																},
																{
																	"block": {
																		"id": 1369,
																		"nodeType": "Block",
																		"src": "24872:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1366,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1363,
																							"src": "24898:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1365,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24891:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24891:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1368,
																				"nodeType": "ExpressionStatement",
																				"src": "24891:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1370,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1364,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1363,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "24864:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1370,
																				"src": "24850:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1362,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "24850:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "24849:22:0"
																	},
																	"src": "24838:83:0"
																},
																{
																	"block": {
																		"id": 1375,
																		"nodeType": "Block",
																		"src": "24928:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1372,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24954:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1371,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "24947:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24947:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1374,
																				"nodeType": "ExpressionStatement",
																				"src": "24947:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1376,
																	"nodeType": "TryCatchClause",
																	"src": "24922:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1338,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "24578:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1339,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "24588:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1340,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "24594:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1341,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "24599:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1342,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "24608:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1335,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "24551:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1334,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "24534:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1448_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24534:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1448",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24555:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1447,
																	"src": "24534:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24534:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1377,
															"nodeType": "TryStatement",
															"src": "24530:495:0"
														}
													]
												}
											}
										]
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "24253:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "24307:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24299:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24357:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24349:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "24387:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24370:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "24370:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "24418:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24401:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"nodeType": "ArrayTypeName",
													"src": "24401:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24449:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24436:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24288:172:0"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24483:0:0"
									},
									"scope": 1410,
									"src": "24244:799:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "25135:114:0",
										"statements": [
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "25163:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "25146:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1391,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"nodeType": "ArrayTypeName",
															"src": "25146:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1399,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1394,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1395,
															"nodeType": "ArrayTypeName",
															"src": "25175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25171:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25146:41:0"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1400,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "25198:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1402,
														"indexExpression": {
															"hexValue": "30",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25204:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25198:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1403,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "25209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25198:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "25198:18:0"
											},
											{
												"expression": {
													"id": 1406,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "25236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1388,
												"id": 1407,
												"nodeType": "Return",
												"src": "25229:12:0"
											}
										]
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "25060:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "25086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "25078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25077:17:0"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "25117:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1385,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1386,
													"nodeType": "ArrayTypeName",
													"src": "25117:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25116:18:0"
									},
									"scope": 1410,
									"src": "25051:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2126,
							"src": "11162:14090:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1412,
										"name": "IERC165",
										"nameLocations": [
											"25332:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "25332:7:0"
									},
									"id": 1413,
									"nodeType": "InheritanceSpecifier",
									"src": "25332:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1411,
								"nodeType": "StructuredDocumentation",
								"src": "25264:36:0",
								"text": " _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								11
							],
							"name": "IERC1155Receiver",
							"nameLocation": "25312:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "25349:828:0",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "26192:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26228:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26220:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26255:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26247:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "26278:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26270:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26299:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26291:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26330:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26315:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26209:132:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "26377:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "26377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26376:8:0"
									},
									"scope": 1448,
									"src": "26183:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "26393:989:0",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "27397:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27438:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27430:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27457:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "27499:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27480:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1436,
													"nodeType": "ArrayTypeName",
													"src": "27480:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "27532:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27513:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27513:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "27513:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27564:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27549:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27419:156:0"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "27611:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27611:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27610:8:0"
									},
									"scope": 1448,
									"src": "27388:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "25302:2320:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1449,
								"nodeType": "StructuredDocumentation",
								"src": "27814:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "SafeMath",
							"nameLocation": "28399:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "28632:102:0",
										"statements": [
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "28651:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "28643:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1463,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "28655:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1464,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "28659:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28643:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1467,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "28675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1468,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "28679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28675:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "28671:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28690:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28689:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1460,
													"id": 1473,
													"nodeType": "Return",
													"src": "28682:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1476,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "28724:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1477,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "28717:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1478,
												"nodeType": "Return",
												"src": "28710:16:0"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "28415:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "28565:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28591:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28571:22:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28617:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "28623:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28616:15:0"
									},
									"scope": 1801,
									"src": "28556:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "28963:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "28978:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1493,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "28982:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "28974:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28993:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29000:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1497,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28992:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1491,
													"id": 1498,
													"nodeType": "Return",
													"src": "28985:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29021:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "29027:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1502,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "29031:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1504,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29020:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1505,
												"nodeType": "Return",
												"src": "29013:20:0"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "28742:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "28896:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28922:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28914:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28902:22:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28948:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "28954:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28947:15:0"
									},
									"scope": 1801,
									"src": "28887:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "29272:367:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "29508:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29513:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "29504:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29524:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29523:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1518,
													"id": 1525,
													"nodeType": "Return",
													"src": "29516:16:0"
												}
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "29551:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "29543:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "29555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1530,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "29559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29543:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1533,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "29575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1534,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "29579:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1536,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "29584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29575:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "29571:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29602:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29594:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1518,
													"id": 1541,
													"nodeType": "Return",
													"src": "29587:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1544,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "29629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1545,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29622:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1546,
												"nodeType": "Return",
												"src": "29615:16:0"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "29049:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "29205:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29220:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29212:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29211:22:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "29263:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29256:15:0"
									},
									"scope": 1801,
									"src": "29196:443:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "29871:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "29886:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29886:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "29882:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29902:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1565,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29901:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1559,
													"id": 1566,
													"nodeType": "Return",
													"src": "29894:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29930:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "29936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1570,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "29940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29936:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1572,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29929:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1573,
												"nodeType": "Return",
												"src": "29922:20:0"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "29647:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "29804:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29819:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29811:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29810:22:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29856:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29856:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "29862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29855:15:0"
									},
									"scope": 1801,
									"src": "29795:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "30192:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "30207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30212:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1594,
												"nodeType": "IfStatement",
												"src": "30203:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30223:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1592,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30222:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1586,
													"id": 1593,
													"nodeType": "Return",
													"src": "30215:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "30257:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "30261:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1599,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "30250:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1600,
												"nodeType": "Return",
												"src": "30243:20:0"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "29958:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "30125:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30151:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30131:22:0"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "30183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30176:15:0"
									},
									"scope": 1801,
									"src": "30116:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "30585:112:0",
										"statements": [
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "30604:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1627,
														"src": "30596:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1617,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1614,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "30608:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1615,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "30612:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30608:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30596:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1619,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "30632:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "30637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30640:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30624:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "30624:46:0"
											},
											{
												"expression": {
													"id": 1625,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "30688:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1626,
												"nodeType": "Return",
												"src": "30681:8:0"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "30279:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "30527:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "30539:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30531:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "30550:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30542:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30530:22:0"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "30576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30575:9:0"
									},
									"scope": 1801,
									"src": "30518:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "31047:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "31066:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1640,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "31071:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31066:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31074:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31058:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "31058:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "31125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1646,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "31129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1648,
												"nodeType": "Return",
												"src": "31118:12:0"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "30705:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "30989:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31001:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "30993:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "31004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30992:22:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "31038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31037:9:0"
									},
									"scope": 1801,
									"src": "30980:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "31464:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "31479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31484:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "31475:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31494:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1659,
													"id": 1664,
													"nodeType": "Return",
													"src": "31487:8:0"
												}
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "31514:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "31506:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "31518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1669,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "31522:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31506:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1673,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "31542:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1674,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "31546:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31542:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "31551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31542:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31554:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31534:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "31534:56:0"
											},
											{
												"expression": {
													"id": 1681,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1667,
													"src": "31608:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1682,
												"nodeType": "Return",
												"src": "31601:8:0"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "31146:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "31406:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "31418:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31410:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "31429:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31421:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31409:22:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "31455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31454:9:0"
									},
									"scope": 1801,
									"src": "31397:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "32162:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "32181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32185:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32188:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32173:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "32173:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "32235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1702,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "32239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1704,
												"nodeType": "Return",
												"src": "32228:12:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "31625:464:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "32104:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32116:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32108:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32127:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32119:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32107:22:0"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "32153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32152:9:0"
									},
									"scope": 1801,
									"src": "32095:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "32782:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "32801:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32805:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32801:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32808:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32793:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "32793:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1723,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "32853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1724,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "32857:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32853:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1726,
												"nodeType": "Return",
												"src": "32846:12:0"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "32256:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "32724:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "32736:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32728:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "32747:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32739:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32727:22:0"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "32773:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32772:9:0"
									},
									"scope": 1801,
									"src": "32715:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "33440:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1741,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "33459:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1742,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "33464:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33459:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1744,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "33467:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33451:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "33451:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "33498:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "33502:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1739,
												"id": 1750,
												"nodeType": "Return",
												"src": "33491:12:0"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "32874:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "33354:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "33366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "33377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "33394:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33380:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33357:50:0"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "33431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33430:9:0"
									},
									"scope": 1801,
									"src": "33345:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "34280:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "34299:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34303:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1768,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "34306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34291:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "34291:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "34337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1772,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "34341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1774,
												"nodeType": "Return",
												"src": "34330:12:0"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "33519:660:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "34194:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34198:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34217:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34209:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "34234:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34220:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34220:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34197:50:0"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "34271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34270:9:0"
									},
									"scope": 1801,
									"src": "34185:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "35108:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1789,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "35127:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "35127:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1792,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "35134:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35119:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "35119:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "35165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "35169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1787,
												"id": 1798,
												"nodeType": "Return",
												"src": "35158:12:0"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "34358:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "35022:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35034:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35026:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35045:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35037:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "35062:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35048:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35048:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35025:50:0"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "35099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35098:9:0"
									},
									"scope": 1801,
									"src": "35013:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2126,
							"src": "28391:6790:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1802,
								"nodeType": "StructuredDocumentation",
								"src": "35185:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2095,
							"linearizedBaseContracts": [
								2095
							],
							"name": "Address",
							"nameLocation": "35264:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "35932:356:0",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "36142:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "36134:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"nodeType": "VariableDeclarationStatement",
												"src": "36134:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36223:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36225:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "36245:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "36233:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "36233:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "36225:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1805,
														"isOffset": false,
														"isSlot": false,
														"src": "36245:7:0",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "36225:4:0",
														"valueSize": 1
													}
												],
												"id": 1813,
												"nodeType": "InlineAssembly",
												"src": "36214:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "36272:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36272:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1809,
												"id": 1817,
												"nodeType": "Return",
												"src": "36265:15:0"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "35279:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "35875:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "35894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "35886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35885:17:0"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "35926:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35926:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35925:6:0"
									},
									"scope": 2095,
									"src": "35866:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "37294:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1830,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37321:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37313:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1828,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37313:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37313:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37327:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "37313:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "37338:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37313:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37346:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37305:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "37305:73:0"
											},
											{
												"assignments": [
													1839,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "37475:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "37470:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1838,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "37470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37520:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1840,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "37488:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37498:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "37488:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "37511:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "37488:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37488:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37469:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "37542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37551:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37534:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "37534:78:0"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "36296:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "37232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "37258:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37242:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37242:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37277:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37269:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37241:43:0"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37294:0:0"
									},
									"scope": 2095,
									"src": "37223:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "38470:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "38499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "38507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38513:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1863,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1870,
															1890
														],
														"referencedDeclaration": 1890,
														"src": "38486:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38486:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1868,
												"nodeType": "Return",
												"src": "38479:67:0"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "37628:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "38390:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38411:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38403:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38419:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38419:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38402:35:0"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "38456:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38456:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38455:14:0"
									},
									"scope": 2095,
									"src": "38381:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "38901:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1883,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "38941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "38949:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38955:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1886,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "38958:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1882,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1960
														],
														"referencedDeclaration": 1960,
														"src": "38919:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38919:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1888,
												"nodeType": "Return",
												"src": "38912:59:0"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "38562:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "38793:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38814:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38805:63:0"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "38887:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38886:14:0"
									},
									"scope": 2095,
									"src": "38784:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "39467:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "39507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1904,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "39515:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1905,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "39521:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39528:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1902,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1960
														],
														"referencedDeclaration": 1960,
														"src": "39485:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39485:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1908,
												"nodeType": "Return",
												"src": "39478:94:0"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "38987:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "39363:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39393:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39385:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39401:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39401:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39384:50:0"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "39453:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39452:14:0"
									},
									"scope": 2095,
									"src": "39354:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "39977:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "40004:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2095",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "39996:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1925,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "39996:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39996:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "40010:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "39996:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1930,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "40021:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39996:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40028:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39988:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "39988:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1937,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "40099:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1936,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "40088:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40088:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40108:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40080:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "40080:60:0"
											},
											{
												"assignments": [
													1943,
													1945
												],
												"declarations": [
													{
														"constant": false,
														"id": 1943,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "40219:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "40214:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1942,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "40214:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1945,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "40241:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "40228:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1944,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "40228:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"arguments": [
														{
															"id": 1950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "40283:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1946,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "40255:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40262:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "40255:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1948,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "40275:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "40255:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40255:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40213:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1954,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "40324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1955,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "40333:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1956,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "40345:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1953,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "40306:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40306:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1958,
												"nodeType": "Return",
												"src": "40299:59:0"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "39588:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "39845:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39910:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39902:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "39931:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39917:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39866:78:0"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "39963:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39962:14:0"
									},
									"scope": 2095,
									"src": "39836:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "40651:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1971,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "40688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "40696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40702:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1970,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1977,
															2012
														],
														"referencedDeclaration": 2012,
														"src": "40669:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40669:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1975,
												"nodeType": "Return",
												"src": "40662:80:0"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "40374:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "40560:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "40587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40595:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40595:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40578:35:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "40637:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40637:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40636:14:0"
									},
									"scope": 2095,
									"src": "40551:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "41070:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1991,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1980,
																	"src": "41100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1990,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "41089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41089:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41109:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41081:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "41081:67:0"
											},
											{
												"assignments": [
													1997,
													1999
												],
												"declarations": [
													{
														"constant": false,
														"id": 1997,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "41227:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "41222:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1996,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "41222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1999,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "41249:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "41236:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1998,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "41236:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2004,
												"initialValue": {
													"arguments": [
														{
															"id": 2002,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "41281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2000,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "41263:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41270:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "41263:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41263:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41221:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2006,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "41322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2007,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "41331:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2008,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "41343:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2005,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "41304:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41304:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2010,
												"nodeType": "Return",
												"src": "41297:59:0"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "40758:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "40951:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "40978:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "40970:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40999:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "40986:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40986:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "41019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "41005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40969:63:0"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "41056:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41056:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41055:14:0"
									},
									"scope": 2095,
									"src": "40942:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "41648:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "41687:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "41695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41701:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2022,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2029,
															2064
														],
														"referencedDeclaration": 2064,
														"src": "41666:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41666:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2027,
												"nodeType": "Return",
												"src": "41659:84:0"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "41372:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "41560:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "41589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41610:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41597:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41580:35:0"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "41634:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41634:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41633:14:0"
									},
									"scope": 2095,
									"src": "41551:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "42070:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2043,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "42100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2042,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "42089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42089:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42109:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42081:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "42081:69:0"
											},
											{
												"assignments": [
													2049,
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42229:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "42224:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2048,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "42251:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "42238:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2050,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42238:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2056,
												"initialValue": {
													"arguments": [
														{
															"id": 2054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "42285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2052,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "42265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42272:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "42265:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42265:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42223:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2058,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "42326:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2059,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "42335:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2060,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "42347:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2057,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "42308:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42308:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2062,
												"nodeType": "Return",
												"src": "42301:59:0"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "41759:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "41954:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "41983:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "41975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "41991:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42024:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "42010:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42010:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41974:63:0"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "42056:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42056:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42055:14:0"
									},
									"scope": 2095,
									"src": "41945:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "42505:613:0",
										"statements": [
											{
												"condition": {
													"id": 2075,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2066,
													"src": "42520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "42579:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2079,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "42665:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42676:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "42665:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42685:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "42665:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2089,
																"nodeType": "Block",
																"src": "43045:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2086,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "43071:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2085,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "43064:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43064:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2088,
																		"nodeType": "ExpressionStatement",
																		"src": "43064:20:0"
																	}
																]
															},
															"id": 2090,
															"nodeType": "IfStatement",
															"src": "42661:439:0",
															"trueBody": {
																"id": 2084,
																"nodeType": "Block",
																"src": "42688:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "42876:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "42899:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "42928:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "42922:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "42922:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "42903:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "42972:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "42976:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "42968:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "42968:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "42989:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "42961:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "42961:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "42961:44:0"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 2068,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "42928:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2068,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "42976:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 2083,
																		"nodeType": "InlineAssembly",
																		"src": "42867:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "42516:595:0",
												"trueBody": {
													"id": 2078,
													"nodeType": "Block",
													"src": "42529:44:0",
													"statements": [
														{
															"expression": {
																"id": 2076,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "42551:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2074,
															"id": 2077,
															"nodeType": "Return",
															"src": "42544:17:0"
														}
													]
												}
											}
										]
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "42385:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "42408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "42430:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42417:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "42456:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42442:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42402:67:0"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "42491:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42490:14:0"
									},
									"scope": 2095,
									"src": "42376:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2126,
							"src": "35256:7865:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2096,
										"name": "ERC1155",
										"nameLocations": [
											"43150:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "43150:7:0"
									},
									"id": 2097,
									"nodeType": "InheritanceSpecifier",
									"src": "43150:7:0"
								}
							],
							"canonicalName": "TTTERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2125,
							"linearizedBaseContracts": [
								2125,
								1410,
								219,
								207,
								88,
								11,
								35
							],
							"name": "TTTERC1155",
							"nameLocation": "43136:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "43231:18:0",
										"statements": []
									},
									"id": 2104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "43189:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 2101,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2099,
												"name": "ERC1155",
												"nameLocations": [
													"43181:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1410,
												"src": "43181:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43181:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43178:2:0"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43231:0:0"
									},
									"scope": 2125,
									"src": "43167:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "43320:78:0",
										"statements": [
											{
												"assignments": [
													2114
												],
												"declarations": [
													{
														"constant": false,
														"id": 2114,
														"mutability": "mutable",
														"name": "empty",
														"nameLocation": "43344:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "43331:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2113,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "43331:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2115,
												"nodeType": "VariableDeclarationStatement",
												"src": "43331:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2117,
															"name": "winer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "43366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2118,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "43373:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2119,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "43377:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2120,
															"name": "empty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "43384:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2116,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "43360:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43360:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "43360:30:0"
											}
										]
									},
									"functionSelector": "156e29f6",
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "43264:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "winer",
												"nameLocation": "43277:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "43269:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "43292:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "43284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "43296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43268:42:0"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43320:0:0"
									},
									"scope": 2125,
									"src": "43255:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "43127:274:0",
							"usedErrors": []
						}
					],
					"src": "33:43378:0"
				},
				"id": 0
			}
		}
	}
}