{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "GOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SHIELD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SILVER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SWORD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "THORS_HAMMER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"ApprovalForAll(address,address,bool)": {
					"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
				},
				"TransferBatch(address,address,address,uint256[],uint256[])": {
					"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
				},
				"TransferSingle(address,address,address,uint256,uint256)": {
					"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
				},
				"URI(string,uint256)": {
					"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC1155-isApprovedForAll}."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "See {IERC1155-safeBatchTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "See {IERC1155-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC1155-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"uri(uint256)": {
					"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"TTT_ERC1155Token-Jason.sol": "GameItems"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x47d3e75145968b9f405465d64f71c64c7e3f2ad74447958ee30389186c88e837",
			"license": "MIT",
			"urls": [
				"bzz-raw://5b2d988c648cb9fa7dd307ee355df33b045a8c1b010ffba4f0498c2c844d9788",
				"dweb:/ipfs/QmbYZDgaZqytGKXJE7egeFWYREDjVebczREvVS6B4VaRzQ"
			]
		},
		"@openzeppelin/contracts/introspection/ERC165.sol": {
			"keccak256": "0x08b3f9ffbc4daf434f38b761b246e41ad78faa9c4124a43f16990abd453ebea8",
			"license": "MIT",
			"urls": [
				"bzz-raw://0bd722e69373f884af2c829cc6ab4b67f4cce8ecf02b6d96a148ce475f7e5b7b",
				"dweb:/ipfs/QmXxsmVPwX1HALNZcCiTZuxVKDY4wpGHPPxDTZmzxiiqxP"
			]
		},
		"@openzeppelin/contracts/introspection/IERC165.sol": {
			"keccak256": "0x6a1120d3dc80014af8f6193331b8559bb6be8bd59c342f5052fc608845995bc7",
			"license": "MIT",
			"urls": [
				"bzz-raw://49a6993c5876ebd5acbbde0e53c035fdbf2fe56fc0b88655ce4856d917c9da5d",
				"dweb:/ipfs/QmRfxky5SPTAawQmwiC5kQPgaGxWTQt3owjTe4Ut3fY4mm"
			]
		},
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xa648e3b9bad4dc8c44e0b459966daea709c708f232e29b7d83cbdc10280cc9a8",
			"license": "MIT",
			"urls": [
				"bzz-raw://e51e31f8e4c4cb2baf738fcefa4282215e000e4d96e5a00f2a70c2367b4a88a7",
				"dweb:/ipfs/QmPs5mdgMihYWux2qbbRGgU7iwdHDo9efmCydxyP8cHQ2e"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
			"keccak256": "0x6862ea09a283bb4bffb5decb169cb11bcd90f59f4815ac5cc79dfe50a4c075f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://0075a8a3d61576e06b6718c0362959ff4e82fc0c6065600900b87dff495aa210",
				"dweb:/ipfs/QmNmJQ3FitgQ9KkAihu6YcnG6eGhVbGPSbw1Z1CWBwmvS7"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x665f52b274245a3c3b0fb2998ab34d80b6f23b0bb6e196b93295d46ad887f578",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2d3b961a62022cbce9d63eb4a441aed6a34cacf9c9b5889b4ed6d9a43cb430e",
				"dweb:/ipfs/QmVfyFXf8bLZNy7avboj5TApz8ZX6c6ziojq1uHAFePkxc"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
			"keccak256": "0x29b5fab49d307a81d0fb04d2fef91eb170745b5b334ccfc807bfaaf87465aebf",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d3573814fbaea1c403410522adde2c6b855ecfe530064a8d3ce9e261b868dee",
				"dweb:/ipfs/QmfNhuGHApAeMgzYcBRVgDLKg4a81R5MXrNnN9FKraEPfZ"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0x71988b7e3c4440f00a4c7d1c2532c28197dc8dd3111f93950c19ab74776bd8b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d8f675df13944ac37f71bdbbd92dae88c0758fe2ff39978ce305b91f3e5f7e0",
				"dweb:/ipfs/QmQTyJop6Ck2gYuSKv4KFP27q2zWNiQ3iwDZMg6MiBnur8"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x7fe7fb51725035c0158ad4473b572c66150e09a09f48b2ef50bb803b08bd9568",
			"license": "MIT",
			"urls": [
				"bzz-raw://afd6b28b68c6aa087ad2798ca30bb103658d4acb51651f05af7634f5dacf6af5",
				"dweb:/ipfs/QmTe73gzvaHfUop87349aXGDEDodXwYqNmkWnwHHNwCgS9"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x15187d9564f60294faa380bbb30416971814956eb0fca05bba7ef404a7e7af9b",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b6ddefe5b1615692a23440630cdacececb0013cec645bb2708b2f641da890ee",
				"dweb:/ipfs/QmdKxCJPJG5F3gKdeM27bvFTVzj7YTCUd4HW85kXb1iPQy"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x3d88e5d82af1ca412999d900a179703b2ea8df8d8fb7023fec488e864f15208b",
			"license": "MIT",
			"urls": [
				"bzz-raw://60be7a36d84d3539b31937c093628037f1c3d655443ca292d0a16de242de8e4c",
				"dweb:/ipfs/QmeyPbaGbhVM74EyTsZZx11UknYo2pik8b3SFVfHU1Fo9j"
			]
		},
		"TTT_ERC1155Token-Jason.sol": {
			"keccak256": "0x92746d89f8b567f63d5e2d26fbe1cd6e66f5075308579d547ae249fa8ef097a9",
			"license": "MIT",
			"urls": [
				"bzz-raw://3453e37d6f970cf695d060363a6ed6631db57f28ae052231e5fca972074412c8",
				"dweb:/ipfs/QmVwLJo76Wc6u3oPRdPFav1bG9sDPKEmBDx8puGaViPHaV"
			]
		}
	},
	"version": 1
}